["```js\n.box img { \n  width: 100%; \n}\n```", "```js\n      <!-- … -->\n      <section class=\"dashboardCategories\"> \n        <select id=\"categoriesSelector\"></select> \n        <div class=\"dashboardCategoriesList\"></div> \n        <div class=\"clear\"></div> \n      </section> \n      <!-- … -->\n```", "```js\n{ \n  \"items\": [{ \n    \"id\": { \"videoId\": \"UdQbBq3APAQ\" }, \n    \"snippet\": { \n      \"title\": \"jQuery UI Development Tutorial: jQuery UI Tooltip | packtpub.com\", \n      \"thumbnails\": { \n        \"default\": { \"url\": \"https://i.ytimg.com/vi/UdQbBq3APAQ/default.jpg\" }, \n        \"medium\": { \"url\": \"https://i.ytimg.com/vi/UdQbBq3APAQ/mqdefault.jpg\" }, \n        \"high\": { \"url\": \"https://i.ytimg.com/vi/UdQbBq3APAQ/hqdefault.jpg\" } \n      } \n    } \n  }/*,...*/]\n}\n```", "```js\n<script type=\"text/javascript\" src=\"img/dashboard.videoservice.js\"></script>\n```", "```js\n(function() { // dashboard.videoservicemock.js\n    'use strict'; \n\n    dashboard.videoService = dashboard.videoService || {}; \n\n    dashboard.videoService.searchVideos = function(searchKeywords) { \n        return $.Deferred(function(deferred) { \n            var searches = dashboard.videoService.mockData.searches; \n            for (var i = 0; i < searches.length; i++) { \n                if (searches[i].keywords === searchKeywords) { \n                    // return the first matching search results \n                    deferred.resolve(searches[i].data); \n                    return; \n                } \n            } \n            deferred.reject('Not found!'); \n        }).promise(); \n    }; \n\n    dashboard.videoService.getVideo = function(videoTitle) { \n        return $.Deferred(function(deferred) { \n            var videos = dashboard.videoService.mockData.allVideos;\n            for (var i = 0; i < videos.length; i++) { \n                if (videos[i].snippet.title === videoTitle) { \n                    // return the first matching item \n                    deferred.resolve(videos[i]); \n                    return; \n                } \n            } \n            deferred.reject('Not found!'); \n        }).promise(); \n    }; \n\n    var videoBaseUrl = 'https://www.youtube.com/watch?v='; \n    dashboard.videoService.getVideoUrl = function(videoId) { \n        return videoBaseUrl + videoId; \n    }; \n})(); \n```", "```js\n(function() { // dashboard.videoservicemock.mockdata.js\n    'use strict'; \n\n    dashboard.videoService.mockData = dashboard.videoService.mockData || {}; \n\n    dashboard.videoService.mockData.searches = [{ \n        keywords: 'jQuery conference', \n        data: { \n            \"items\": [/*...*/] \n        } \n    }/*,...*/]; \n\n    var allVideos = []; \n    var searches = dashboard.videoService.mockData.searches; \n    for (var i = 0; i < searches.length; i++) { \n        allVideos = allVideos.concat(searches[i].data.items);\n    } \n\n    dashboard.videoService.mockData.allVideos = allVideos; \n})(); \n```", "```js\ndashboard.informationBox.openNew = function(itemName) {\n    var $box = $('<div class=\"boxsizer\"><article class=\"box\">' +\n            '<header class=\"boxHeader\">' +\n                '<button class=\"boxCloseButton\">&#10006;</button>' +\n                itemName +\n            '</header>' +\n            '<div class=\"boxContent\">Loading...</div>' +\n        '</article></div>');\n    $boxContainer.append($box);\n\n    dashboard.videoService.getVideo(itemName).then(function(result) {\n        var $a = $('<a>').attr('href', dashboard.videoService.getVideoUrl(result.id.videoId));\n        $a.append($('<img />').attr('src', result.snippet.thumbnails.medium.url));\n        $box.find('.boxContent').empty().append($a);\n    }).fail(function() {\n        $buttonContainer.html('An error occurred!');\n    });\n};\n```"]