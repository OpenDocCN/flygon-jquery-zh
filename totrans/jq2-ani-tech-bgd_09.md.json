["```js\ntransform: matrix(1, 0, 0, 1, 100, 100);\n```", "```js\ntransform: matrix(2, 0, 0, 2, 0, 0);\n```", "```js\ntransform: matrix(1, 1, 0, 1, 0, 0);\n```", "```js\ntransform: matrix(0.7986355, 0.6018150, -0.6018150, 0.7986355, 0, 0);\n```", "```js\ntransform: matrix(2, -1, 0, 2, 300px, 0);\n```", "```js\n$(\"#get\").css(\"-moz-transform\", \"rotate(30deg)\");\n$(\"#get\").text($(\"#get\").css(\"-moz-transform\"));\n```", "```js\ntransform: rotate3d(0, 1, 0, 30deg);\n```", "```js\n    <img src=\"img/color-wheel.png\" id=\"colorWheel\">\n    ```", "```js\n    var img = $(\"#colorWheel\"),\n      offset = img.offset(),\n      origWidth = img.width(),\n      origHeight = img.height(),\n      rotateStrings = [\n        \"rotate(\",\n        0,\n        \"deg)\"\n      ],\n\n      getVendor = function() {\n\n      var prefix = null,\n        vendorStrings = {\n        pure: \"transform\",\n        moz: \"-moz-transform\",\n        webkit: \"-webkit-transform\",\n        op: \"-o-transform\"\n      };\n\n      for (props in vendorStrings) {\n        if(img.css(vendorStrings[props]) === \"none\") {\n          prefix = vendorStrings[props];\n        }\n      }\n      if (prefix === null) {\n        prefix = \"filter\";\n\n        img.css({\n          position: \"absolute\",\n          filter: \"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand');\"\n        });\n      }\n\n      return prefix;\n    },\n    vendor = getVendor();\n\n    function doRotate() {\n\n      rotateStrings[1]++;\n\n      if (vendor === \"filter\") {\n        var rad = rotateStrings[1] * (Math.PI * 2 / 360),\n          cos = Math.cos(rad),\n          sin = Math.sin(rad),\n          driftX = (img.width() - origWidth) / 2,\n          driftY = (img.height() - origHeight) / 2,\n          el = img.get(0);\n\n        img.css({\n          left: offset.left - driftX,\n          top: offset.top - driftY\n        });\n          el.filters.item(\"DXImageTransform.Microsoft.Matrix\").M11 = cos;\n          el.filters.item(\"DXImageTransform.Microsoft.Matrix\").M12 = -sin;\n          el.filters.item(\"DXImageTransform.Microsoft.Matrix\").M21 = sin;\n          el.filters.item(\"DXImageTransform.Microsoft.Matrix\").M22 = cos;\n\n      } else {\n        img.css(vendor, rotateStrings.join(\"\"));\n      }\n    }\n\n    setInterval(function() { doRotate() }, 100);\n    ```", "```js\n    <div id=\"viewer\">\n      <div id=\"flow\">\n        <img src=\"img/atreyu.jpg\">\n        <img src=\"img/beatles.jpg\">\n        <img src=\"img/blink.jpg\">\n        <img src=\"img/cold.jpg\">\n        <img src=\"img/disturbed.jpg\">\n        <img src=\"img/floyd.jpg\">\n        <img src=\"img/korn.jpg\">\n        <img src=\"img/prodigy.jpg\">\n        <img src=\"img/the-birthday-massacre.jpg\">\n        <img src=\"img/xx.jpg\">\n      </div>\n      <ul>\n        <li id=\"left\"><a href=\"#\" title=\"Move Left\">Left</a></li>\n        <li id=\"right\"><a href=\"#\" title=\"Move Right\">Right</a></li>\n      </ul>\n    </div>\n    ```", "```js\n    #viewer {\n      width:700px;\n      height:220px;\n      padding:100px 0 30px;\n      margin:auto;\n      border:1px solid #000;\n      position:relative;\n    }\n    #flow:after {\n      content:\"\";\n      display:block;\n      height:0;\n      clear:both;\n      visibility:hidden;\n    }\n    #flow img {\n      display:block;\n      margin-left:-165px;\n      position:relative;\n      top:-15px;\n      left:245px;\n      float:left;\n      background-color:#fff;\n    }\n    #viewer li {\n      list-style-type:none;\n      position:absolute;\n      bottom:10px;\n    }\n    #left { left:20px; }\n    #right { right:20px; }\n    ```", "```js\nvar viewer = $(\"#viewer\"),\n  flow = viewer.find(\"#flow\"),\n  order = flow.children().length,\n  oneRad = 1 * (Math.PI / 180),\n  matrix = [\"matrix(\", 1, \",\", 0, \",\", 0, \",\", 1, \",\",\"0px,\", \"0px)\"],\n  msMatrix = \"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand')\",\n  getVendor = function() {\n    var prefix = null,\n      vendorStrings = {\n        pure: \"transform\",\n        moz: \"-moz-transform\",\n        webkit: \"-webkit-transform\",\n        op: \"-o-transform\"\n      };\n\n    for (props in vendorStrings) {\n      if(flow.css(vendorStrings[props]) === \"none\") {\n        prefix = vendorStrings[props];\n      }\n    }\n    if (prefix === null) {\n      prefix = \"filter\";\n    }\n\n    return prefix;\n  },\n  vendor = getVendor(),\n  property = (vendor !== \"filter\") ? matrix.join(\"\") : msMatrix;\n\nflow.children().eq(0).addClass(\"flat\").css(vendor, property).css(\"zIndex\", order + 1);\n\nflow.children().not(\":first\").each(function(i) {\n\n  el = flow.children().eq(i + 1);\n\n  matrix[1] = 0.7;\n  matrix[3] = -30 * oneRad;\n  matrix[5] = -10 * oneRad;\n  matrix[7] = 0.7;\n  matrix[9] = (vendor === \"-moz-transform\") ? \"90px,\" : \"90,\";\n  matrix[10] = (vendor === \"-moz-transform\") ? \"-30px)\" : \"-30)\";\n\n  if (vendor !== \"filter\") {\n    el.addClass(\"skew-right\").css(vendor, matrix.join(\"\")).css(\"zIndex\", order);\n  } else {\n    el.addClass(\"skew-right\").css(vendor, msMatrix).css({\n      zIndex: order,\n      top: -30,\n      left: 270,\n      width: 140,\n      height: 140,\n      marginLeft: -100\n    });\n    el.get(0).filters.item(\"DXImageTransform.Microsoft.Matrix\").M11 = 1;\n    el.get(0).filters.item(\"DXImageTransform.Microsoft.Matrix\").M12 = matrix[5];\n    el.get(0).filters.item(\"DXImageTransform.Microsoft.Matrix\").M21 = matrix[3];\n    el.get(0).filters.item(\"DXImageTransform.Microsoft.Matrix\").M22 = 1;\n  }\n  order--;\n\n});\n\nmatrix[3] = 0;\nmatrix[5] = 0;\n```", "```js\nfunction skewRTL() {\n\n  var flat = flow.find(\".flat\").css(\"zIndex\", order + 1),\n    preFlat = flat.next(),\n    flatMatrix = matrix.slice(0),\n    preMatrix = matrix.slice(0),\n    flatDims = 200,\n    preDims = 170,\n\n    skew = function() {\n\n      if (preFlat.length) {\n\n        if (flatMatrix[3] <= 30 * oneRad && flatMatrix[5] <= 10 * oneRad) {\n\n          var flatTranslateX = parseInt(flatMatrix[9].split(\"p\")[0], 10),\n            flatTranslateY = parseInt(flatMatrix[10].split(\"p\")[0], 10),\n            preTranslateX = parseInt(preMatrix[9].split(\"p\")[0], 10),\n            preTranslateY = parseInt(preMatrix[10].split(\"p\")[0], 10);\n          flatMatrix[1] = flatMatrix[1] - 0.001;\n          flatMatrix[3] = flatMatrix[3] + oneRad;\n          flatMatrix[5] = flatMatrix[5] + (oneRad / 3);\n          flatMatrix[7] = flatMatrix[7] - 0.001;\n          preMatrix[1] = preMatrix[1] + 0.01;\n          preMatrix[3] = preMatrix[3] + oneRad;\n          preMatrix[5] = preMatrix[5] + (oneRad / 3);\n          preMatrix[7] = preMatrix[7] + 0.01;\n          flatMatrix[9] = (vendor === \"-moz-transform\") ? flatTranslateX - 6 + \"px,\" : flatTranslateX - 6 + \",\";\n          preMatrix[9] = (vendor === \"-moz-transform\") ? preTranslateX - 3 + \"px,\" : preTranslateX - 3 + \",\";\n          preMatrix[10] = (vendor === \"-moz-transform\") ? preTranslateY + 1 + \"px)\" : preTranslateY + 1 + \")\";\n\n          if (vendor !== \"filter\") {\n            flat.css(vendor, flatMatrix.join(\"\"));\n            preFlat.css(vendor, preMatrix.join(\"\"));\n          } else {\n          flat.get(0).filters.item(\"DXImageTransform.Microsoft.Matrix\").M12 = flatMatrix[5];\n          flat.get(0).filters.item(\"DXImageTransform.Microsoft.Matrix\").M21 = flatMatrix[3];\n          preFlat.get(0).filters.item(\"DXImageTransform.Microsoft.Matrix\").M12 = preMatrix[5];\n          preFlat.get(0).filters.item(\"DXImageTransform.Microsoft.Matrix\").M21 = preMatrix[3];\n            flatDims = flatDims - 2;\n            preDims = preDims + 0.5;\n\n            flat.css({\n              width: flatDims,\n              height: flatDims\n            });\n            preFlat.css({\n              width: preDims,\n              height: preDims\n            });\n          }\n\n        } else {\n          clearInterval(flatInterval);\n\n          if (vendor !== \"filter\") {\n            preMatrix[3] = 0;\n            preMatrix[5] = 0;\n            preFlat.css(vendor, preMatrix.join(\"\"));\n          } else {\n            flat.css({\n            top: -30,\n            left: 260\n          });\n        }\n\n        flat.prev().css(\"zIndex\", \"\");\n        flat.removeClass(\"flat\").css(\"zIndex\", \"\");\n        preFlat.addClass(\"flat\");\n      }\n    } else {\n\n      clearInterval(flatInterval);\n      flat.css(\"zIndex\", order + 1);\n    }\n  };\n\n  preMatrix[3] = -30 * oneRad;\n  preMatrix[5] = -10 * oneRad;\n\n  if(!flatInterval) {\n    var flatInterval = setInterval(function() { skew() }, 1);\n  }\n};\n```", "```js\nfunction skewLTR() {\n\n  var flat = flow.find(\".flat\"),\n    preFlat = flat.prev(),\n    flatMatrix = matrix.slice(0),\n    preMatrix = matrix.slice(0),\n    flatDims = 200,\n    preDims = 170,\n\n    skew = function() {\n      if (preFlat.length) {\n\n        if (flatMatrix[3] >= -30 * oneRad && flatMatrix[5] >=-10 * oneRad) {\n\n          var preTranslateX = parseInt(preMatrix[9].split(\"p\")[0], 10),\n          preTranslateY = parseInt(preMatrix[10].split(\"p\")[0], 10);\n          flatMatrix[1] = flatMatrix[1] - 0.001;\n          flatMatrix[3] = flatMatrix[3] - oneRad;\n          flatMatrix[5] = flatMatrix[5] - (oneRad / 3);\n          flatMatrix[7] = flatMatrix[7] - 0.001;\n          preMatrix[1] = preMatrix[1] + 0.01;\n          preMatrix[3] = preMatrix[3] - oneRad;\n          preMatrix[5] = preMatrix[5] - (oneRad / 3);\n          preMatrix[7] = preMatrix[7] + 0.01;\n          preMatrix[9] = (vendor === \"-moz-transform\") ? preTranslateX + 3 + \"px,\" : preTranslateX + 3 + \",\";\n          preMatrix[10] = (vendor === \"-moz-transform\") ? preTranslateY + 1 + \"px)\" : preTranslateY + 1 + \")\";\n          if (vendor !== \"filter\") {\n            flat.css(vendor, flatMatrix.join(\"\"));\n            preFlat.css(vendor, preMatrix.join(\"\"));\n          } else {\n            flat.get(0).filters.item(\"DXImageTransform.Microsoft.Matrix\").M12 = flatMatrix[5];\n            flat.get(0).filters.item(\"DXImageTransform.Microsoft.Matrix\").M21 = flatMatrix[3];\n            preFlat.get(0).filters.item(\"DXImageTransform.Microsoft.Matrix\").M12 = preMatrix[5];\n            preFlat.get(0).filters.item(\"DXImageTransform.Microsoft.Matrix\").M21 = preMatrix[3];\n\n            flatDims = flatDims - 1.5;\n            preDims = preDims + 1.5;\n\n            flat.css({\n              width: flatDims,\n              height: flatDims\n            });\n            preFlat.css({\n              width: preDims,\n              height: preDims\n            });\n          }\n\n        } else {\n\n          clearInterval(flatInterval);\n          clearInterval(preInterval);\n\n          if (vendor !== \"filter\") {\n            preMatrix[3] = 0;\n            preMatrix[5] = 0;\n            preFlat.css(vendor, preMatrix.join(\"\"));\n          }\n\n          flat.removeClass(\"flat\").css(\"zIndex\", parseInt(flat.next().css(\"zIndex\")) + 1);\n          preFlat.addClass(\"flat\").css(\"zIndex\", order + 1);\n\n        }\n      } else {\n        clearInterval(flatInterval);\n        clearInterval(preInterval);\n        flat.css(\"zIndex\", order + 1);\n      }\n    };\n\n    order = flow.children().length;\n    preMatrix[3] = 30 * oneRad;\n    preMatrix[5] = 10 * oneRad;\n    preMatrix[9] = (vendor === \"-moz-transform\") ? \"-90px,\" : \"-90,\";\n    preMatrix[10] = (vendor === \"-moz-transform\") ? \"-30px,\" :\"-30,\";\n\n    if(!flatInterval) {\n      var flatInterval = setInterval(function() { skew() }, 1),\n      preInterval = setInterval(function() { skew() }, 1);\n    }\n};\n```", "```js\nviewer.find(\"#left a\").click(function(e) {\n  e.preventDefault();\n  skewRTL();\n});\n\nviewer.find(\"#right a\").click(function(e) {\n  e.preventDefault();\n  skewLTR();\n});\n```"]