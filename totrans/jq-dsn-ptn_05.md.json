["```js\nfunction do (x, y) {\n  var z = y - x / 2;\n  var yy = Math.pow(y, 2);\n  var b = 3 * Math.random(); // add some randomness to the result\n  var i = 0; // for this case\n  return LibraryA.doingMethod(x, z, i, yy, b);\n}\n```", "```js\n// Line 733\nfunction Sizzle( selector, context, results, seed ) { /* ... */ }\n\n// Line 2678\njQuery.find = Sizzle;\n```", "```js\n// Line 2769\njQuery.fn.extend( { \n  find: function( selector ) { \n    /* 15 lines of code */ \n    for ( i = 0; i < len; i++ ) { \n jQuery.find( selector, self[ i ], ret ); \n    } \n    /* 3 lines of code */\n    return ret; \n  } \n} );\n```", "```js\n// Line 71\njQuery = function( selector, context ) { \n  return new jQuery.fn.init( selector, context ); \n}; \n\n// Line 2825\nrquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/, \n// Line 2735 \ninit = jQuery.fn.init = function( selector, context, root ) { \n  /* 12 lines of code */ \n if ( typeof selector === \"string\" ) { \n    if (/* ... */) { \n      /* 3 lines of code */ \n    } else { \n      match = rquickExpr.exec( selector ); \n    } \n\n    // Match html or make sure no context is specified for #id \n    if ( match && ( match[ 1 ] || !context ) ) { \n      if ( match[1] ) {\n      /* 27 lines of code */ \n      // HANDLE: $(#id) \n      } else { \n elem = document.getElementById( match[ 2 ] ); \n\n        // Support: Blackberry 4.6 \n        // gEBID returns nodes no longer in the document (#6963) \n        if ( elem && elem.parentNode ) { \n          // Inject the element directly into the jQuery object \n          this.length = 1; \n          this[ 0 ] = elem; \n        } \n\n        this.context = document; \n        this.selector = selector; \n        return this; \n      } \n\n    // HANDLE: $(expr, $(...)) \n    } else if ( !context || context.jquery ) { \n return ( context || root ).find( selector ); \n\n    // HANDLE: $(expr, context) \n    // (which is just equivalent to: $(context).find(expr) \n    } else { \n return this.constructor( context ).find( selector ); \n    } \n  } /* else ... 21 lines of code */\n};\n```", "```js\njQuery.extend( { \n\n  prop: function( elem, name, value ) { \n    /* 8 lies of code */\n    if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n      // Fix name and attach hooks \n name = jQuery.propFix[ name ] || name; \n hooks = jQuery.propHooks[ name ]; \n    } \n\n if ( value !== undefined ) { \n      if ( hooks && \"set\" in hooks &&\n        ( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n        return ret;\n      }\n return ( elem[ name ] = value );\n    }\n\n    if ( hooks && \"get\" in hooks &&( ret = hooks.get( elem, name ) ) !== null ) {\n      return ret;\n    }\n return elem[ name ];\n  }, \n\n  propHooks: { \n    tabIndex: { \n      get: function( elem ) { \n        var tabindex = jQuery.find.attr( elem, \"tabindex\" );\n        return tabindex ?parseInt( tabindex, 10 ) : /*...*/;\n      }\n    }\n  },\n\n  propFix: {\n    \"for\": \"htmlFor\",\n    \"class\": \"className\"\n  } \n} );\n```", "```js\n(function() { \n  window.elementLottery = window.elementLottery || {}; \n\n  var elementIDs; \n  var $lottery; \n  var ticketCount = 30; \n\n  elementLottery.init = function() { \n    elementIDs = []; \n    $lottery = $('#lottery').empty(); \n    elementLottery.add(ticketCount); \n    $('#lotteryTicketButton').on('click', elementLottery.pick); \n  }; \n\n  elementLottery.add = function(n) { \n    for (var i = 0; i < n; i++) { \n      var id = this.uidProvider.get(); \n      elementIDs.push(id); \n      $lottery.append(this.ticket.createHtml(id)); \n    } \n  }; \n\n  elementLottery.pick = function() { \n    var index = Math.floor(Math.random() * elementIDs.length); \n    var result = $lottery.find('#' + elementIDs[index]).text(); \n    alert(result); \n    return result; \n  }; \n\n  $(document).ready(elementLottery.init);\n})(); \n```", "```js\n(function() { \n  elementLottery.ticket = elementLottery.ticket || {}; \n\n  elementLottery.ticket.createHtml = function(id) { \n    var ticketNumber = Math.floor(Math.random() * 1000 * 10); \n    return '<div id=\"' + id + '\" class=\"ticket\">' + ticketNumber + '</div>'; \n  }; \n})(); \n\n(function() { \n  elementLottery.uidProvider = elementLottery.uidProvider || {}; \n\n  elementLottery.uidProvider.get = function() { \n    return 'Lot' + simpleguid.getNext(); \n  }; \n})(); \n```", "```js\n(function() { \n  elementLottery.uidProvider = elementLottery.uidProvider || {}; \n\n  elementLottery.uidProvider.get = function() { \n    return uuid.v4();\n  }; \n})(); \n```"]