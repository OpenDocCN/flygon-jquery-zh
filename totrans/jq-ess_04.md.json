["```js\n$(document).ready(handler);\n```", "```js\n$().ready(handler);\n```", "```js\n$(handler);\n```", "```js\n// ready event style no# 1\n    $(document).ready(function () {\n        console.log(\"document ready event handler style no# 1\");\n    // we're in the event handler so the event has already fired.\n    // let's hook it again and see what happens\n        $(document).ready(function () {\n        console.log(\"We get this handler even though the ready event has already fired\");\n    });\n    });\n// ready event style no# 2\n    $().ready(function () {\n        console.log(\"document ready event handler style no# 2\");\n    });\n// ready event style no# 3\n    $(function () {\n        console.log(\"document ready event handler style no# 3\");\n    });\n```", "```js\n$(selector).on('event name', handling function);\n```", "```js\n$(\"#clickA\").on(\"mouseenter mouseleave\", eventHandler);\n```", "```js\n$(elements).off('event name', handling function);\n```", "```js\n$('#myButton').off('click');\n```", "```js\nfunction clickBHandler(event){\n    console.log('Button B has been clicked, external');\n}\n$('#clickB').on('click', clickBHandler);\n$('#clickB').on('click', function(event){\n    console.log('Button B has been clicked, anonymous');\n    // turn off the 1st handler without during off the 2nd\n    $('#clickB').off('click', clickBHandler);\n});\n```", "```js\n$(\"button\").on(\"click.alpha\", handler);\n```", "```js\n$(\"button\").on(\"click.alpha.beta\", handler);\n```", "```js\n$(\"button\").on(\"click.alpha\", handler);\n$(\"button\").on(\"click.beta\", handler);\n```", "```js\n$(document).ready(function(){\n    // place a click event on the <li> tags\n    $('ul> li').on('click', function(){\n        console.log(this.id + \" was clicked\");\n    });\n});\n```", "```js\n$('#theParent').on('click', function (event) {\n    console.log(\"this points to: \"+this.id+\", event.target points to: \"+event.target.id);\n    return false;\n});\n```", "```js\n$(\"form\").on('mouseenter', function (event) {\n    console.log(\"target is: \" + event.target);\n    console.log(\"relatedTarget is: \" + event.relatedTarget);\n});\n```", "```js\nfunction eventHandler(event) {\n    console.log(\"event type = \" + event.type);\n}\n$(\"#clickA\").on(\"mouseenter\", eventHandler);\n$(\"#clickB\").on(\"mouseleave\", eventHandler);\n```", "```js\n$(\"#itemName\").on('keypress', function (event) {\n    console.log(\"key type: \" + event.which);\n});\n```", "```js\n$(document).on('mousemove', function (event) {\n    console.log(\"x position: \" + event.pageX + \", y position: \" + event.pageY);\n});\n```", "```js\n// here we pass an object\n// we don't have to pass the selector param\n$('#clickA').on('click',{msg: \"The answer is: \", val: 42}, function (event) {\n    alert(event.data.msg + event.data.val);\n    return false;\n});\n// here we pass a string as the data param. \n// Note the null selector param\n$('clickB').on('click', null, \"The answer is 42.\", function(event){\n    alert(event.data);\n    return false;\n});\n```", "```js\n$(element).on('click', handling function);\n$(element).click(handling function);\n```", "```js\n.change();\n.click();\n.dblclick();\n.error();\n.focus();\n.focusin();\n.focusout();\n.hover();\n.keydown();\n.keypress();\n.keyup();\n.load();\n.mousedown();\n.mouseenter();\n.mouseleave();\n.mousemove();\n.mouseout();\n.mouseover();\n.resize();\n.scroll();\n.select();\n.submit();\n```", "```js\n$(document).on('superDuperEvent', function (event) {\n    console.log(event.type + \" triggered\");\n});\n$('#clickA').click(function(){\n    $(document).trigger('superDuperEvent');\n})\n```", "```js\n$(document).on('superDuperEvent', function (event, message) {\n    console.log(event.type + \" triggered with message: \" + message);\n});\n$('#clickA').click(function(){\n    $(document).trigger('superDuperEvent', [\"Hello from the trigger function at: \"+(new Date()).getTime()]);\n})\n```", "```js\n$(document).on('superDuperEvent', function (event, message) {\n    console.log(event.type + \" triggered with message: \" + message);\n});\n$('#clickA').click(function(){\n    $(document).trigger('superDuperEvent', [\"Hello from the trigger function at: \"+(new Date()).getTime()]);\n});\n```", "```js\n$(document).ready(function (event) {\n    var count = 0;\n        // hooks the live replacement\n    $('#holder').on('click', \"li\", function (event) {\n        console.log(\"<li> clicked: \" + this.id);\n    });\n    // clicking on the a button will add another element to the ul\n    $('#clickA').on('click', function (event) {\n        var id = \"Li_\" + count++;\n        $('#holder').append('<li id=\"' + id + '\">' + id + '</li>');\n    });\n});\n```"]