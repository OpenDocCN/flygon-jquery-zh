["```js\n<div class=\"spinner-container\">\n    <input id=\"spinner\"/>\n</div>\n```", "```js\n.ui-spinner-input-no-outline {\n    outline: 0;\n}\n```", "```js\n(function( $, undefined ) {\n\n$.widget( \"ab.spinner\", $.ui.spinner, {\n\n    options: {        \ninputOutline: true    \n},\n\n    _create: function() {\n\n        this._super();\n\n        if ( this.options.inputOutline ) {            \nreturn;        \n}\n\n        this.element.addClass( \"ui-spinner-input-no-outline\" );\n        this._focusable( this.uiSpinner );\n\n    }\n});\n\n})( jQuery );\n\n$(function() {\n\n    $( \"#spinner\" ).spinner( { inputOutline: false } );\n\n});\n```", "```js\n<script src=\"img/globalize.js\"\n  type=\"text/javascript\"></script>\n<script src=\"img/globalize.culture.de-DE.js\"\n  type=\"text/javascript\"></script>\n<script src=\"img/globalize.culture.fr-CA.js\"\n  type=\"text/javascript\"></script>\n<script src=\"img/globalize.culture.ja-JP.js\"\n  type=\"text/javascript\"></script>\n```", "```js\n<div class=\"culture-container\"></div>\n<div class=\"spinner-container\">\n    <input id=\"spinner\"/>\n</div>\n```", "```js\n$(function() {\n\n    var defaultCulture = Globalize.cultures.default;\n\n    $.each( Globalize.cultures, function( i, v ) {\n\n      if ( i === \"default\" ) {\n        return;\n      }\n\n       var culture = $( \"<div/>\" ).appendTo( \".culture-container\" );\n\n       $( \"<input/>\" ).attr( \"type\", \"radio\" )\n          .attr( \"name\", \"cultures\" )\n          .attr( \"id\", v.name )\n          .attr( \"checked\", defaultCulture.name === v.name )\n          .appendTo( culture );\n\n       $( \"<label/>\" ).attr( \"for\", v.name )\n           .text( v.englishName )\n           .appendTo( culture );\n\n    });\n\n    $( \"#spinner\" ).spinner({\n        numberFormat: \"C\",\n        step: 5,\n        min: 0,\n        max: 100,\n        culture: $( \"input:radio[name='cultures']:checked\" )\n          .attr( \"id\" )\n    });\n\n    $( \"input:radio[name='cultures']\" ).on\n      ( \"change\", function( e ) {\n        $( \"#spinner\" ).spinner( \"option\", \"culture\",\n          $( this ).attr( \"id\" ) );\n    });\n\n});\n```", "```js\n<div class=\"spinner-container\">\n    <h3>Toronto</h3>\n    <input id=\"time-ca\" value=\"2:30 PM\"/>\n</div>\n\n<div class=\"spinner-container\">\n    <h3>London</h3>\n    <input id=\"time-gb\" value=\"7:30 PM\"/>\n</div>\n```", "```js\n( function( $, undefined ) {\n\n$.widget( \"ab.time\", $.ui.spinner, {\n\n    options: {\n        step: 60 * 1000,\n        numberFormat: \"t\"\n    },\n\n    _parse: function( value ) {\n\n        var parsed = value;\n\n        if ( typeof value === \"string\" && value !== \"\" ) {\n\n            var format = this.options.numberFormat,\n                culture = this.options.culture;\n\n            parsed = +Globalize.parseDate( value, format );\n\n            if ( parsed === 0 ) {\n                parsed = +Globalize.parseDate( value,\n                  format, culture );\n            }\n\n        }\n\n        return parsed === \"\" || isNaN( parsed ) ? null : \n          parsed;\n\n    },\n\n    _format: function( value ) {\n        return this._super( new Date( value ) );\n    }\n\n});\n\n})( jQuery );\n\n$(function() {\n\n    $( \"#time-ca\" ).time({\n        culture: \"en-CA\"\n    });\n\n    $( \"#time-gb\" ).time({\n        culture: \"en-GB\"\n    });\n\n});\n```", "```js\n<div class=\"spinner-container\">\n    <h3>Non-incremental</h3>\n    <input id=\"spin1\" />\n</div>\n\n<div class=\"spinner-container\">\n    <h3>Doubled</h3>\n    <input id=\"spin2\" />\n</div>\n\n<div class=\"spinner-container\">\n    <h3>Faster and Faster</h3>\n    <input id=\"spin3\" />\n</div>\n```", "```js\n$(function() {\n\n    $( \"#spin1\" ).spinner({\n        step: 5,\n        incremental: false\n    });\n\n    $( \"#spin2\" ).spinner({\n        step: 10,\n        incremental: function( spins ) {\n            if ( spins >= 10 ) {\n                return 2;\n            }\n            return 1;\n        }\n    });\n\n    $( \"#spin3\" ).spinner({\n        step: 15,\n        incremental: function( spins ) {\n            var multiplier = Math.floor( spins / 100 ),\n                limit = Math.pow( 10, 10 );\n            if ( multiplier < limit && multiplier > 0 ) {\n                return multiplier;\n            }\n            return 1;\n        }\n    });\n\n});\n```", "```js\n<div class=\"spinner-container\">\n    <h3>Default delay</h3>\n    <input id=\"spin1\" />\n</div>\n\n<div class=\"spinner-container\">\n    <h3>Long delay</h3>\n    <input id=\"spin2\" />\n</div>\n\n<div class=\"spinner-container\">\n    <h3>Longer delay</h3>\n    <input id=\"spin3\" />\n</div>\n```", "```js\n( function( $, undefined ) {\n\n$.widget( \"ab.spinner\", $.ui.spinner, {\n\n    options: {\n        spinDelay: 40\n    },\n\n    _repeat: function( i, steps, event ) {\n\n        var spinDelay = this.options.spinDelay;\n\n        i = i || 500;\n\n        clearTimeout( this.timer );\n        this.timer = this._delay(function() {\n            this._repeat( spinDelay, steps, event );\n        }, i );\n\n        this._spin( steps * this.options.step, event );\n\n     }\n\n});\n\n})( jQuery );\n\n$(function() {\n\n    $( \"#spin1\" ).spinner();\n\n    $( \"#spin2\" ).spinner({\n        spinDelay: 80\n    });\n\n    $( \"#spin3\" ).spinner({\n        spinDelay: 120\n    });\n\n});\n```", "```js\n<div class=\"spinner-container\">\n    <h3>Default</h3>\n    <input id=\"spin1\" />\n</div>\n\n<div class=\"spinner-container\">\n    <h3>Overflow</h3>\n    <input id=\"spin2\" />\n</div>\n```", "```js\n$(function() {\n\n    $( \"#spin1\" ).spinner({\n        min: 1,\n        max: 100\n    });\n\n    $( \"#spin2\" ).spinner({\n        minOverflow: 1,\n        maxOverflow: 100,\n        spin: function( e, ui ) {\n\n            var value = ui.value,\n              minOverflow = $( this ).spinner\n                ( \"option\", \"minOverflow\" ),\n                  maxOverflow = $( this ).spinner\n                    ( \"option\", \"maxOverflow\" );\n\n            if ( value > maxOverflow ) {\n                $( this ).spinner( \"value\", minOverflow );\n                return false;\n            }\n            else if ( value < minOverflow ) {\n                $( this ).spinner( \"value\", maxOverflow );\n                return false;\n            }\n\n        }\n    });\n\n});\n```", "```js\n<div class=\"spinner-container\">\n    <input id=\"spin\" value=10 />\n</div>\n```", "```js\n$(function() {\n\n    $( \"#spin\" ).spinner({\n        min: 1,\n        max: 100,\n        spin: function( e, ui ) {\n            var value = ui.value,\n                buttons = $( this ).data( \"uiSpinner\" ).buttons,\n                min = $( this ).spinner( \"option\", \"min\" ),\n                max = $( this ).spinner( \"option\", \"max\" );\n\n            if ( value === max ) {\n                buttons.filter( \".ui-spinner-up:not\n                  (.ui-state-disabled)\" )\n                       .button( \"disable\" );\n            }\n            else if ( value === min ) {\n                buttons.filter( \".ui-spinner-down:not\n                  (.ui-state-disabled)\" )\n                       .button( \"disable\" );\n            }\n            else {\n                buttons.filter( \".ui-state-disabled\" )\n                .button( \"enable\" );\n            }\n        }\n    });\n\n});\n```", "```js\n<div class=\"spinner-container\">\n    <input id=\"spin\" />\n</div>\n```", "```js\n.ui-spinner-basic > a.ui-button {\n    border: none;\n    background: none;\n    cursor: pointer;\n}\n```", "```js\n (function( $, undefined ) {\n\n$.widget( \"ab.spinner\", $.ui.spinner, {\n\n    options: {\n        basic: false\n    },\n\n    _create: function() {\n\n        this._super();\n\n        if ( this.options.basic ) {\n            this.uiSpinner.addClass( \"ui-spinner-basic\" );\n        }\n\n    }\n\n});\n\n})( jQuery );\n\n$(function() {\n\n    $( \"#spin\" ).spinner({\n        basic: true\n    });\n\n});\n```"]