["```js\n    (function($, window, undefined) {\n      $.fn.myPlugin = function(opts) {\n        var defaults = {\n        // setting your default values for options\n      }\n      // extend the options from defaults with user's options\n      var options = $.extend(defaults, opts || {});\n      return this.each(function(){ // jQuery chainability\n        // do plugin stuff\n      });\n    })(jQuery, window);\n    ```", "```js\n    (function($, window, document, undefined) {\n      var pluginName = 'tooltip', debug = false;\n    ```", "```js\n    var internal = {\n      reposition: function(event) {\n        var mousex = event.pageX, mousey = event.pageY;\n\n        $(this)\n        .data(pluginName)['tooltip']\n        .css({top: mousey + 'px', left: mousex + 'px'});\n      },\n\n      show: function(event) {\n        if (debug) console.log(pluginName + '.show()');\n        var $this  = $(this), data = $this.data(pluginName);\n\n        data['tooltip'].stop(true, true).fadeIn(600);\n        $this.on('mousemove.' + pluginName, internal.reposition);\n      },\n\n      hide: function(event) {\n        if (debug) console.log(pluginName + '.hide()');\n        var $this = $(this), data  = $this.data(pluginName);\n        $this.off('mousemove.' + pluginName, internal.reposition);\n        data['tooltip'].stop(true, true).fadeOut(400);\n      }\n    };\n    ```", "```js\n    var external = {\n      init: function(options) {\n        if (debug) console.log(pluginName + '.init()');\n\n        options = $.extend(\n          true, {},\n          $.fn[pluginName].defaults,\n          typeof options == 'object' &&  options\n        );\n\n        return this.each(function() {\n          var $this = $(this), data = $this.data(pluginName);\n          if (data) return;\n\n          var title = $this.attr('title');\n          if (!title) return;\n          var $tooltip = $('<div />', {\n            class: options.class,\n            text:  title\n          }).appendTo('body').hide();\n\n          var data = {\n            tooltip:   $tooltip,\n            options:   options,\n            title:     title\n          };\n\n          $this.data(pluginName, data)\n            .attr('title', '')\n            .on('mouseenter.' + pluginName, internal.show)\n            .on('mouseleave.' + pluginName, internal.hide);\n          });\n        },\n    ```", "```js\n        update: function(content) {\n          if (debug) console.log(pluginName + '.update(content)', content);\n          return this.each(function() {\n            var $this = $(this), data  = $this.data(pluginName);\n            if (!data) return;\n            data['tooltip'].html(content);\n          });\n        },\n    ```", "```js\n        destroy: function() {\n          if (debug) console.log(pluginName + '.destroy()');\n\n          return this.each(function() {\n            var $this = $(this), data  = $this.data(pluginName);\n            if (!data) return;\n\n            $this.attr('title', data['title']).off('.' + pluginName)\n              .removeData(pluginName);\n              data['tooltip'].remove();\n          });\n        }\n      };\n    ```", "```js\n    $.fn[pluginName] = function(method) {\n      if (external[method]) return external[method]\n      apply(this, Array.prototype.slice.call(arguments, 1));\n      else if ($.type(method) === 'object' || !method) \n      return external.init.apply(this, arguments);\n      else $.error('Method ' + method + ' does not exist on\n      jQuery.' + pluginName + '.js');\n    };\n      $.fn[pluginName].defaults = {\n      class: pluginName + 'Element'\n      };\n    })(window.jQuery);\n    ```", "```js\n<script src=\"img/jquery.animate-enhanced.min.js\"></script>\n```", "```js\n      <script src=\"img/jquery.min.js\"></script>\n     <script src=\"img/jquery.animate-enhanced.min.js\"></script>\n      <script src=\"img/jquery-ui.min.js\"></script>\n      <script src=\"img/jquery.quicktipv2.js\"></script>\n      <script src=\"img/tooltipv2.js\"></script>\n    ```", "```js\n    div.arrow_box { transition-property: all; transition- duration: 2s; transition-timing-function: cubic-bezier(0.23, 1, 0.32, 1); }\n    ```", "```js\n    data['tooltip'].stop(true, true).fadeIn(600);\n    ```", "```js\n    data['tooltip'].css('display', 'block');\n    ```", "```js\n    data['tooltip'].stop(true, true).fadeOut(400);\n    ```", "```js\n    data['tooltip'].css('display', 'none');\n    ```", "```js\n    $.extend($.easing, {\n      easeInQuint: function (x, t, b, c, d) {\n        return c*(t/=d)*t*t*t*t + b;\n      },\n\n      easeOutQuint: function (x, t, b, c, d) {\n        return c*((t=t/d-1)*t*t*t*t + 1) + b;\n      }\n    });\n    ```", "```js\n    data['tooltip'].stop(true, true).fadeIn(600, \n      'easeInQuint');\n      $this.on('mousemove.' + pluginName, internal.reposition);\n    },\n    ```", "```js\n    $this.off('mousemove.' + pluginName, internal.reposition);\n      data['tooltip'].stop(true, true).fadeOut(400, \n      'easeInQuint');\n    }\n    ```", "```js\n      (function($) {\n        var extensionMethods = {\n          fadeInValue: 600,\n          showDebug: function(event) {\n            console.log(\"This is a test\");\n          }\n        }\n        $.extend($.fn.quicktip, extensionMethods);\n      })(jQuery);\n    ```", "```js\n  $('#img-list li a.tooltips').on(\"mouseover\", function() {\n    $('#img-list li a.tooltips').quicktip.showDebug();\n  })\n```", "```js\n    npm install –g bower\n\n    ```", "```js\n    bower register <name of plugin>\n\n    ```", "```js\n    npm install –g jsdoc\n\n    ```", "```js\njsdoc <name of plugin>\n\n```", "```js\n     <input type=\"submit\" id=\"getValue\" value=\"Get text from first tooltip\" />\n     <div id=\"dialog\" title=\"Basic dialog\">\n      </div>\n    ```", "```js\n    $(document).ready(function() {\n      $('#img-list li a.tooltips').quicktip({\n        class: 'arrow_box', tiptag: \"title\"\n      });\n    });\n    ```", "```js\n    <link rel=\"stylesheet\" type=\"text/css\" \n    href=\"http://code.jquery.com/ui/1.10.4/themes/humanity/jquery-ui.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/tooltipv2.css\">\n    ```", "```js\n    <script src=\"img/jquery-ui.js\"> </script>\n    <script src=\"img/jquery.quicktipv2.data.js\"></script>\n    ```", "```js\n    $(document).ready(function() {\n      $('#img-list li a.tooltips').quicktip({ \n        class: 'arrow_box', \n        tiptag: \"title\"\n      });\n\n      $('#getValue').on(\"click\", function(event){\n        var tipText = $('a.tooltips').eq(0).data().title;\n        $(\"#dialog\").text(tipText);\n        $(\"#dialog\").dialog({\n          title: \"Text from the first tooltip\",\n          modal: true,\n          buttons: {\n            Ok: function() { $(this).dialog(\"close\"); }\n          }\n        });\n      });\n    });\n    ```"]