["```js\nvar hidden, state, visibilityChange;\nif (typeof document.hidden !== \"undefined\") {\n  hidden = \"hidden\", \n  visibilityChange = \"visibilitychange\",\n  state = \"visibilityState\";\n}\n```", "```js\n    function log(msg){\n      var output = document.getElementById(\"output\");\n      output.innerHTML += \"<li>\" + msg + \"</li>\";\n    }\n\n    window.onload = function() {\n      var hidden, visibilityState, visibilityChange;\n      if (typeof document.hidden !== \"undefined\") {\n        visibilityChange = \"visibilitychange\";\n      }\n      document.addEventListener(visibilityChange, function() {\n        log(document.visibilityState]);\n      });\n    };\n    ```", "```js\ndocument.addEventListener('visibilitychange', function(event) {\n  if (!document.hidden) {\n    // The page is visible.\n  } else {\n   // The page is hidden.\n  }\n});\n```", "```js\n    $(document).ready(function() {\n      var $pre = $('pre');\n      var $p = $('p')\n      var supported = 'The Page Visibility API is natively \n      supported in this browser.'\n      var notsupported = 'The Page Visibility API is not \n      natively supported in this browser.'\n      $('p').first().html(\n        $.support.pageVisibility ? log($p, supported) : log($p, \n        notsupported)\n      );\n      function log(obj, text) { obj.append(text + '<br>'); }\n      $(document).on({\n        'show.visibility': function() {\n        log($pre, 'The page gained visibility; the \n        <code>show</code> event was triggered.');\n      },\n      'hide.visibility': function() {\n        log($pre, 'The page lost visibility; the \n        <code>hide</code> event was triggered.');\n      }\n      });\n    });\n    ```", "```js\n    <script src=\"img/jquery-1.11.2.min.js\"> </script>\n    ```", "```js\n     bower install --save visibilityjs\n\n    ```", "```js\n    $(document).ready(function() {\n      if ( Visibility.isSupported() ) {\n        $(\"#APIsupported\").html('is supported');\n      } else {\n        $(\"#APIsupport\").html('isn't supported');\n      }\n\n      document.title = Visibility.state();\n      Visibility.change(function (e, state) {\n        document.title = state;\n      });\n\n      var sec = 0;\n      Visibility.every(1000, function () {\n        $(\"#APIcounter\").html(sec++);\n      });\n    });\n    ```", "```js\n    var $video = $('#videoElement');\n\n    $(document).on('show.visibility', function() {\n      console.log('Page visible');\n      favicon.change(\"img/playing.png\");\n      $video[0].play();\n    });\n\n    $(document).on('hide.visibility', function() {\n      console.log('Page hidden');\n      favicon.change(\"img/paused.png\");\n      $video[0].pause();\n    });\n    ```", "```js\n    function pausevideos() {\n      wp_register_script('pausevideo', plugins_url( '/jquery- pva/pausevideo.js'), array('jquery'),'1.1', true);\n      wp_enqueue_script('pausevideo');\n    }\n\n    add_action( 'wp_enqueue_scripts', 'pausevideos' );\n    ```", "```js\nvar interval = setInterval(doSomething, 10)\nvar progress = 0\nfunction doSomething() {\n  if (progress != 100){\n  // do something here\n  }\n  else {\n  clearInterval(interval)\n  }\n}\n```", "```js\nvar requestAnimationFrame = window.requestAnimationFrame;\nvar cancelAnimationFrame = window.cancelAnimationFrame;\n\n// your code here\n\nvar progress = 0;\n\nfunction doSomething() {\n  if (progress != 100) {\n    // do something here\n var myAnimation = requestAnimationFrame(doSomething);\n  } else {\n    cancelAnimationFrame(myAnimation);\n  }\n}\n```", "```js\n      var start = new Date().getTime(),\n      handle = new Object();\n      function loop() {\n        var current = new Date().getTime(),\n        delta = current - start;\n        if(delta >= delay) {\n          fn.call();\n          start = new Date().getTime();\n        }\n        handle.value = \n        window.requestAnimationFrame(loop);\n      };\n      handle.value = window.requestAnimationFrame(loop);\n      return handle;\n    }\n    ```", "```js\n    setInterval(function(){\n    ```", "```js\n    requestInterval(function() {\n      animate();\n      },1000/60);\n    };\n    ```"]