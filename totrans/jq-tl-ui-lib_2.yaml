- en: Chapter 2. Getting along with your UI Tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '"Actions speak louder than words…"'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The sixteenth century writer, Michel de Montaigne, is often quoted with inventing
    this phrase, which the author believes is quite apt for jQuery Tools—after all,
    the best way to learn about new tools is to try to use them, right?
  prefs: []
  type: TYPE_NORMAL
- en: In the previous chapter, we learned a little about the whole ethos of jQuery
    Tools, and that the emphasis is placed less on the JavaScript code, but more on
    the ability of tools to be styled in lots of different ways, by changing the CSS
    and altering some of the configuration options of the tool being used.
  prefs: []
  type: TYPE_NORMAL
- en: It is time now to look at some of these tools in detail—this chapter (and the
    next) contains a number of projects which use various tools and showcase a bit
    of what can be achieved by using CSS and minimal JavaScript.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter we shall learn how to:'
  prefs: []
  type: TYPE_NORMAL
- en: Build a map lightbox effect using Google Maps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Build a simple gallery, that showcases a number of images
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Construct a quicklink tooltip, to allow the purchase of a book
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Display images in a Polaroid-styled slideshow
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: So, as someone once said…"What are we waiting for..?" Let's get on with it...
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: All of the images listed in this chapter's examples are available in the code
    download that accompanies this book.
  prefs: []
  type: TYPE_NORMAL
- en: UI tools—a template
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before we look at the examples in detail, let''s set up the basic framework
    that will be used in each project. Open up your favorite text editor, and copy
    the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Save this as a template—the demos in this book use a similar format, so this
    will help you save time later, when we look at some of the other tools available
    as part of the jQuery Tools UI library. Let's begin with overlays.
  prefs: []
  type: TYPE_NORMAL
- en: What is an overlay?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Overlays are a significant part of the JavaScript landscape—if you want to direct
    a visitor's attention to a specific element on your site, then this tool will
    achieve this to great effect. Overlays can be used to display virtually anything,
    such as different styles of overlays for displaying products, showing information
    or warning boxes, or to display complex information these are all possible with
    jQuery Tools' Overlay.
  prefs: []
  type: TYPE_NORMAL
- en: Overlay for the perfect eye candy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: jQuery Tools' Overlay can contain all sorts of information, such as videos,
    images, maps, and the like —everything can be styled using CSS. It has a variety
    of features, such as a scripting framework, event model (to perform an action
    when an event is triggered), as well as adding custom effects.
  prefs: []
  type: TYPE_NORMAL
- en: Usage
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The general way to set up an overlay is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: When you click on one of the triggers it will open an overlay that is being
    specified by the trigger's `rel` attribute.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It is worth having a look at [http://flowplayer.org/tools/overlay/index.html](http://flowplayer.org/tools/overlay/index.html),
    which details all of the possible configuration options available for use with
    an overlay.
  prefs: []
  type: TYPE_NORMAL
- en: Let's see how this works in practice—we will build a simple map viewer that
    uses Google™ Maps, and the Apple effect from overlay.
  prefs: []
  type: TYPE_NORMAL
- en: 'Project: building a viewer for Google Maps'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We're going to use this concept to develop a lightbox effect, which uses Google™
    Maps, for a client who needs to provide a map of where his office is, but doesn't
    want to settle for a plain map on a page!
  prefs: []
  type: TYPE_NORMAL
- en: Creating the basic HTML structure
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This example will use the Overlay tool from jQuery Tools, but with the "Apple"
    theme. All of the images used in the example are available in the code download
    that accompanies this book.
  prefs: []
  type: TYPE_NORMAL
- en: 'Remember the code template we set up at the beginning of this chapter? Grab
    a copy of it now and save this as your overlay project file, so that we can then
    add in the meat of the overlay demo. We will make one small change to it though—alter
    the`<body>` tags to read as this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The reasons for this will become clearer as we progress through the demonstration.
  prefs: []
  type: TYPE_NORMAL
- en: Adding in the overlay
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Next, let's add the code for the overlay trigger and overlay to the`<body>:`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: This follows the normal overlay and trigger structure required for an overlay,
    but with the addition of the`<iframe>` markup, to handle external content. The
    trigger here is the`<a>` markup which, when clicked, opens the map showing the
    location of Packt's office and displays it in the overlay.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up and configuring the overlay JavaScript
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The next part to add in is the all-important script—although the code that calls
    the overlay functionality is only one line, we have to add a block of configuration
    code that tells it to use expose to hide the page contents, then show the overlay
    itself, and finally to find the URL given in the overlay HTML, and show this on
    screen.
  prefs: []
  type: TYPE_NORMAL
- en: 'Add the following code at the bottom of your web page, before the`</body>`
    tag:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Adding the styling and visual effects
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Finally, we need to add some styling, as the resulting page won''t look very
    pretty! The following code is crucial for showing the overlay, you can always
    change the backgrounds being used, if you want to have a different color of overlay:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It is worth noting that if you want to change the background, there are some
    additional backgrounds available from the jQuery Tools website at [http://flowplayer.org/tools/overlay/index.html](http://flowplayer.org/tools/overlay/index.html),
    or in the code download that accompanies this book. You can always add your own
    instead—have a look at some of the demos on the site to see how to do this.
  prefs: []
  type: TYPE_NORMAL
- en: 'Notice how we used `no-js` in the original HTML markup? The reason for this
    is simple: it maintains progressive enhancement, which means that if someone has
    JavaScript turned off, the overlay will still be hidden until you click on the
    trigger link!'
  prefs: []
  type: TYPE_NORMAL
- en: 'The overlay will work now, you will see something similar to the following
    image:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Adding the styling and visual effects](img/7805_02_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This only scratches the surface of what can be done with an overlay. You could
    add your own custom effects, set to show as a modal dialog, or even show different
    images as your "overlay", which could be enlarged versions of smaller images,
    such as a book.
  prefs: []
  type: TYPE_NORMAL
- en: Tooltips — the only web fundamentals you need
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Arguably the second most important UI widget, the tooltip serves a similar purpose
    to the overlay, in that it can be used to highlight important pieces of information
    which relates to an element on screen, such as hints on how to fill in a form,
    a quicklink prompt to purchasing something, or highlighting information about
    a concept being discussed on site (in a similar fashion to having footnotes in
    a book). jQuery Tools' Tooltip is no different in operation to others, but its
    design makes it very powerful and flexible. Let's have a look at it in a little
    more detail.
  prefs: []
  type: TYPE_NORMAL
- en: Usage
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Tooltips are very easy to set up, the basic version uses the folowing structure:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: The trick to note with tooltips is that you can generate them in one of two
    ways, by using the `title` attribute or by including the tooltip block directly
    after the tooltip trigger.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tooltips that just need to display normal text are best achieved by using the
    `[title]` attribute. If you need to display more, or include HTML formatting,
    then use the manual method, with an individual CSS style class or ID selector.
  prefs: []
  type: TYPE_NORMAL
- en: 'Calling a tooltip can be as easy as simply using the selector element, which
    is normally the `[title]` attribute, which contains the text displayed as the
    tooltip:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'If you need to display HTML elements, then you can use the manual format, which
    can contain any amount of HTML, but will use the element immediately after the
    trigger instead:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: We can take this even further by adding in some additional options—the slide
    and dynamic plugins.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Using the `[title]` attribute on its own is not advisable; this will cause a
    performance hit as jQuery Tools will need to iterate through each instance to
    see if it should be converted to a tooltip. It is strongly recommended that a
    style class or ID should be used to improve performance.
  prefs: []
  type: TYPE_NORMAL
- en: Impress everyone with slide effect and dynamic plugins
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The standard Tools' tooltips will serve a purpose, but have at least one inherent
    limitation—what happens if the browser window is resized? The tooltip doesn't
    allow for this by default, unless you add in the "dynamic" plugin; the dynamic
    plugin takes into account where the edges of the viewport are, and "dynamically"
    positions the tooltip accordingly. For extra functionality, you can also get the
    tooltip to slide in from the top, left, right, or bottom, rather than just appear
    in the same direction (from bottom to top). There are more details on the site
    on how to set up this additional feature.
  prefs: []
  type: TYPE_NORMAL
- en: In the meantime, let's have a look at a project that wouldn't be out of place
    on a website belonging to a bookshop or publisher, where you can use a "quicklink"
    to get more information and prices on a book, as well as buy a copy.
  prefs: []
  type: TYPE_NORMAL
- en: 'Project: building a book "buy now" using tooltip'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You know the drill, you surf to a website where you see a book you want. You
    don't want to drill down lots of pages, just to buy it, right? I thought so—enter
    the Tooltip "quicklink". We're going to build in a little tooltip that pops up
    when you hover over a book, so that you can hit the **Buy** button directly.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: All of the images are available as part of the code download that accompanies
    the book, or can be obtained directly from the jQuery Tools website.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the basic HTML
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Go grab a copy of the HTML template we set up at the beginning of this chapter,
    so that we can then copy in the basic trigger and tooltip HTML required to make
    this work:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'It''s worth noting that, although the code isn''t connected to an e-commerce
    system, you can easily adapt it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Adding in the tooltip CSS styles
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Now, here comes the crucial part—the styling. jQuery Tools follow the principle
    of minimal JavaScript coding, preferring to let most of the work be done by CSS.
    The Tooltip feature is no different, so let''s add it to the code below the`<head>`
    section, to see the tooltip work:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It is important to note that the `.tooltip` class provides the base CSS required
    for any Tooltip to work; the rest of the CSS is specific to this demonstration.
  prefs: []
  type: TYPE_NORMAL
- en: We need some more styles though..!
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Whilst the styles above will produce a workable demo, the presentation will
    not be perfect; we need to add additional styles to tweak the positioning of some
    of the elements, and fine tune the overall view. Add the following to your earlier
    stylesheet:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Configuring the Tooltip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Last but by no means least, here''s the JavaScript code required for the Tooltip
    to work. This is split into three parts:'
  prefs: []
  type: TYPE_NORMAL
- en: The first part configures the tooltip appearance on screen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The second controls the fade in and out of the tooltip
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The final part adjusts the position of the tooltip on screen, to allow for the
    current browser window dimensions (that is, if it has been resized or is being
    displayed in full)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'For a simple project, the effect can be very striking—here''s how it should
    look:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Configuring the Tooltip](img/7805_02_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: You can really go to town on the effects when using Tooltip—one such effect
    I have seen in use is that of a `div` that slides out, when hovering over an image;
    it may seem a little strange, but if you think about it, it is the same effect
    as used here. It still uses the Tooltip functionality from the Tools library,
    the only difference (which highlights the true power of jQuery Tools), is the
    CSS styling used!
  prefs: []
  type: TYPE_NORMAL
- en: For everything else—there's Scrollable
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If you have a need to scroll through information on your site, then you will
    want to take a look at another component available within jQuery Tools: Scrollable.
    This tool can be used in many different ways, such as video galleries, product
    catalogues and news tickers—the structure is essentially the same throughout,
    but jQuery Tools'' flexibility allows you to produce different designs, using
    the power of CSS.'
  prefs: []
  type: TYPE_NORMAL
- en: Usage
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This is the basic structure of Scrollable:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: You will see that the structure is made up of a number of images grouped together,
    encased in a number of `div` tags, with additional `div` tags to look after the
    navigation elements. Although the demo only shows three images per group, you
    can easily add more images to each group, if desired.
  prefs: []
  type: TYPE_NORMAL
- en: To really show how this could work, let's have a look at an example, which would
    not be out of place on a hypothetical client's site, such as that of a photographer.
  prefs: []
  type: TYPE_NORMAL
- en: 'Project: building a mini gallery'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The client has a number of images which need to be displayed on his site—he
    wants to be able to scroll through each group of images, and then click on one
    to show it in an enlarged viewer. Sounds simple enough, huh?
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the basic HTML
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To get started, let''s put together the basic HTML structure. Open up your
    favorite text editor, and paste in the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: In previous examples, we used the template file that we created at the beginning
    of this chapter. This time around, I've provided the whole example, as there is
    some additional HTML included here. I've included a loading animated GIF, as well
    as space for an image caption.
  prefs: []
  type: TYPE_NORMAL
- en: It looks complicated, but in reality it isn't—it's following the same structure
    shown above, but has a number of additional DIVs enclosing the HTML code; this
    is largely to allow us to position the results on screen correctly, while still
    maintaining each element in the right place .
  prefs: []
  type: TYPE_NORMAL
- en: Time for some JavaScript magic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Okay, now that we have the structure in place, let''s add in the JavaScript
    code. Copy in these two lines into your`<head>` area:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'This initiates the calls to the jQuery and jQuery Tools libraries, so you can
    start to use both. Here comes the critical part of this example, which you can
    copy in just below the previous lines:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'This code provides the gallery and scrollable effect, it loads in each image
    as you click on the thumbnail in the Scrollable. You can even add in an option
    effect that fades out images, if you are hovering over one:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Time for some styles
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If you try to run the previous code, it will work, but will look terrible—there
    will be missing images, and you won''t be able to navigate through the Scrollable,
    for example. This is where the true power of jQuery Tools comes into play, most
    of the real work is actually done in the CSS styling:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: These styles are crucial for setting up basic effects, such as providing navigation
    buttons and the scrollable container.
  prefs: []
  type: TYPE_NORMAL
- en: Some extra styling
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'However, it could use some additional tweaks to make it really stand out. Let''s
    add those in now:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'The code will transform the gallery into something useable; it even includes
    a handwritten font for the caption, which uses Google™ Fonts. If all is well,
    you should see something like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Some extra styling](img/7805_02_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This is just a small part of what you can do with Scrollable. You can go further,
    or even combine Scrollable with other elements of Tools, such as an Overlay, which
    would show a really impressive effect!
  prefs: []
  type: TYPE_NORMAL
- en: Tabs in action
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It's time to take a look at the fourth and final part of the UI Tools section
    of jQuery Tools—that of Tabs.
  prefs: []
  type: TYPE_NORMAL
- en: Tabs can be described as one of the most popular user interfaces on the Internet.
    This is for good reason since they are easy to use and contain lots of information
    in a confined space, which you can then organize in a more user-friendly manner.
    Let's have a look at them in a little more detail.
  prefs: []
  type: TYPE_NORMAL
- en: Usage
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The basic structure of Tabs is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'These would then be activated as Tabs, by using the following JavaScript call:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: But, hold on; isn't this the basic code for Scrollable? Well, yes, there are
    some similarities. But no, this is definitely the code for Tabs! There are some
    similarities between the two tools, but it is important to note that they are
    not interchangeable.
  prefs: []
  type: TYPE_NORMAL
- en: This said, it's time to start building our next project.
  prefs: []
  type: TYPE_NORMAL
- en: 'Project: building a rolling slideshow'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We're going to use the power of Tab's Slideshow plugin, to build a demo that
    could be used on a photo gallery website. It's a slideshow styled as a Polaroid,
    but with some additional functionality. It will use similar images to the Scrollable,
    but in a different format—one that can easily be put on most websites. Similar
    effects are used by some well-known companies with an Internet presence.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the basic HTML
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To begin with, let''s get out our text editor. Grab a copy of the template
    code from the start of this chapter, and add the following lines to create the
    HTML base:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: This can be broken down into five distinct sections, namely the header, the
    container for the pictures, the gallery controls, the tabs, and finally the player
    controls.
  prefs: []
  type: TYPE_NORMAL
- en: Adding the visual effects
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The next section is the all-important styling—this comes in two parts, beginning
    with the compulsory code for the Polaroid effect and the slideshow:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: Phew, there's a lot of style code there! Most of it relates to positioning the
    slides, as well as providing the navigator buttons and caption.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You will see the real power of CSS styling here, as the Polaroid effect is generated
    entirely using CSS3 code; it is for this reason it won't look so spectacular in
    older browsers. However jQuery Tools is about using HTML5 (and CSS3), and less
    for older browsers. You could still get around this by adding the appropriate
    styles for a suitable background image if desired.
  prefs: []
  type: TYPE_NORMAL
- en: '"Mmm…I want more!"'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: When it came to writing the project for this book, I wasn't entirely happy—I
    wanted more. It took a little rearranging and tweaking, but finally with some
    help from a fellow user of jQuery Tools, Mudimo, I managed to put together a little
    something extra, based on one of his excellent demos.
  prefs: []
  type: TYPE_NORMAL
- en: 'The first part is to add some buttons to control the slideshow, which replace
    the standard ones that could be added, that are available from the jQuery Tools
    site. Add the following in as an additional set of styles:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: You'll notice that this tries where possible to keep to the standards of abstracting
    images out of the main code, which is one of the main tenets of jQuery Tools.
    The second part of his code was to add a little additional jQuery, which alters
    the CSS style of `hideit` to `showit` and back again, depending on whether the
    mouse is hovering over either of the buttons (the two styles control visibility
    of the buttons). As a final tweak, we add some additional styling to the player
    controls, by replacing the original buttons with styled icons, and using a little
    CSS to place these next to the navigator "dots" just below the pictures.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring the Tab effects
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We move onto the final part of the code, which is to add in the JavaScript
    required to make this all work. Add this at the bottom of your page:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: This is the all-important part of the code—it configures the Tabs effect to
    use the slideshow plugin, and extract the text from the `rel` tag in the code,
    which is used as the caption. Note how, as the next and back buttons use non-default
    CSS class names, these need to be set in the configuration options for the slideshow
    plugin, so it knows how to operate correctly.
  prefs: []
  type: TYPE_NORMAL
- en: Setting the button visibility
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Remember the two buttons I decided to add in earlier, as extras? The next two
    sections of code achieve two goals; the first controls the visibility of those
    two buttons, the second allows you to stop and start the slideshow.
  prefs: []
  type: TYPE_NORMAL
- en: 'If we take a look at the first section, which controls the visibility—jQuery
    changes the style from `hideit` to `showit`, which in turn alters the visibility
    from hidden to visible and back again, when hovering over either of the buttons:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'We then need to be able to control the playback of the slideshow. We can do
    this by adding event handlers to both image buttons, like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'And there you have it, if all is well, you should have something looking like
    the following screenshot. The tools available in jQuery Tools are all infinitely
    customizable, this demo is just one small example of what we can possibly achieve
    within the confines of this book:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Setting the button visibility](img/7805_02_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we looked at some examples of what is possible with the main
    components of jQuery Tools, namely Scrollable, Overlay, Tooltips, and Tabs. All
    are infinitely customizable, the examples discussed in the chapter outline how,
    while the basic functionality of each tool may be minimal, the overall architecture
    of each tool allows for heavy customization using CSS as desired, and hopefully
    it has given you some inspiration for your own projects.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we've learned about the four main tools, it is time to turn our attention
    to the second group of tools available as part of the Tools Library, namely Validator,
    DateInput, and RangeInput, which will be the subject of the next chapter.
  prefs: []
  type: TYPE_NORMAL
