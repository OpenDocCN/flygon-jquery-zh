- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Since its introduction in 2006, the jQuery library has made DOM traversals and
    manipulations much easier. This has resulted in the appearance of Web pages with
    increasingly complex user interactions, thus contributing to the maturing of Web
    as a platform capable of supporting large application implementations.
  prefs: []
  type: TYPE_NORMAL
- en: This book presents a series of best practices that make the implementation of
    Web applications more efficient. Moreover, we will analyze the most important
    Design Patterns that Computer Science has to offer, which can be applied to Web
    development. In this way, we will learn how to utilize techniques that are thoroughly
    used and tested in other fields of programming, which were initially created as
    generic methods to model solutions of complex problems.
  prefs: []
  type: TYPE_NORMAL
- en: In jQuery Design Patterns, we will analyze how various Design Patterns are utilized
    in the implementation of jQuery and how they can be used to improve the organization
    of our implementations. By adopting the Design Patterns demonstrated in this book,
    you will be able to create better organized implementations that resolve large
    problem categories faster. Moreover, when used by a developer team, they can improve
    the communication between them and lead to homogenous implementation, where every
    part of the code is easily understood by others.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](part0014_split_000.html#DB7S2-e8d3cd3d052d4ee0b4673af57a64ddef
    "Chapter 1. A Refresher on jQuery and the Composite Pattern"), *A Refresher on
    jQuery and the Composite Pattern*, will teach the reader how to write the code
    using the Composite Pattern and method chaining (Fluent Interface) by analyzing
    how they are used for the implementation of jQuery itself. It also demonstrates
    the Iterator Pattern that nicely pairs with the Composite Collection objects that
    jQuery returns.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](part0018_split_000.html#H5A42-e8d3cd3d052d4ee0b4673af57a64ddef
    "Chapter 2. The Observer Pattern"), *The Observer Pattern*, will teach you how
    to respond to user actions using the Observer Pattern. It also demonstrates how
    to use Event Delegation as a way to reduce the memory consumption and complexity
    of the code that handles dynamically injected page elements. Finally, it will
    teach you how to emit and listen for Custom Events in order to achieve greater
    flexibility and code decoupling.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](part0021_split_000.html#K0RQ1-e8d3cd3d052d4ee0b4673af57a64ddef
    "Chapter 3. The Publish/Subscribe Pattern"), *The Publish/Subscribe Pattern*,
    will teach you how to utilize the Pub/Sub Pattern to create a central point to
    emit and receive application-level events, as a way to decouple your code and
    business logic from the HTML that is used for presentation.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](part0026_split_000.html#OPEK1-e8d3cd3d052d4ee0b4673af57a64ddef
    "Chapter 4. Divide and Conquer with the Module Pattern"), *Divide and Conquer
    with the Module Pattern*, demonstrates and compares some of the most commonly
    used Module Patterns in the industry. It will teach you how to structure your
    application in small independent Modules using Namespacing, leading to expandable
    implementations that follow the Separation of Concerns principle.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](part0034_split_000.html#10DJ41-e8d3cd3d052d4ee0b4673af57a64ddef
    "Chapter 5. The Facade Pattern"), *The Facade Pattern*, will teach you how to
    use the Facade Pattern to wrap complex APIs into simpler ones that are a better
    match for the needs of your application. It also demonstrates how to change parts
    of your application, while keeping the same module-level APIs and avoid affecting
    the rest of your implementation.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](part0039_split_000.html#1565U2-e8d3cd3d052d4ee0b4673af57a64ddef
    "Chapter 6. The Builder and Factory Patterns"), *The Builder and Factory Patterns*,
    explains the concepts of and the differences between the Builder and Factory Patterns.
    It will teach you how and when to use each of them, in order to improve the clarity
    of your code by abstracting the generation of complex results into separate dedicated
    methods.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](part0042_split_000.html#181NK2-e8d3cd3d052d4ee0b4673af57a64ddef
    "Chapter 7. Asynchronous Control Flow Patterns"), *Asynchronous Control Flow Patterns*,
    will explain how jQuery''s Deferred and Promise APIs work and compare them with
    the classical Callbacks Pattern. You will learn how to use Promises to control
    the the execution of asynchronous procedures to run either in an order or parallel
    to each other.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](part0046_split_000.html#1BRPS1-e8d3cd3d052d4ee0b4673af57a64ddef
    "Chapter 8. Mock Object Pattern"), *Mock Object Pattern*, teaches you how to create
    and use Mock Objects and Services as a way to ease the development of your application
    and get a sense of its functionality, long before all its parts are completed.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](part0049_split_000.html#1ENBI1-e8d3cd3d052d4ee0b4673af57a64ddef
    "Chapter 9. Client-side Templating"), *Client-side Templating*, demonstrates how
    to use the Underscore.js and Handlebars.js templating libraries as a better and
    faster way to create complex HTML structures with JavaScript. Through this chapter,
    you will get an overview of their conventions, evaluate their features, and find
    the one that best matches your taste.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](part0053_split_000.html#1IHDQ2-e8d3cd3d052d4ee0b4673af57a64ddef
    "Chapter 10. Plugin and Widget Development Patterns"), *Plugin and Widget Development
    Patterns*, introduces the basic concepts and conventions of jQuery Plugin development
    and analyzes the most commonly used design patterns, so that you will be able
    to identify and use the best match for any use case.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](part0058_split_000.html#1NA0K1-e8d3cd3d052d4ee0b4673af57a64ddef
    "Chapter 11. Optimization Patterns"), *Optimization Patterns*, guides you with
    the best tips to create a highly efficient and robust implementation. You will
    be able to use this chapter as a checklist of best practices that improve the
    performance and lower the memory consumption of your applications, before moving
    them to a production environment.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In order to run the examples in this book, you will need to have a web server
    installed on your system to serve the code files. For example, you can use Apache
    or IIS or NGINX. In order to make the installation process of Apache easier, you
    can use more complete development environment solutions, such as XAMPP or WAMP
    Server.
  prefs: []
  type: TYPE_NORMAL
- en: In terms of technical proficiency, this book assumes that you already have some
    experience of working with jQuery, HTML, CSS, and JSON. All the code samples in
    the book use jQuery v2.2.0 and some of the chapters also discuss the respective
    implementation in jQuery v1.12.0, which can be used in case support for older
    browsers is needed.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book targets existing jQuery developers or new developers who want to take
    their skills and understanding to an advanced level. It is a detailed introduction
    to how the various industry standard patterns can be applied to jQuery applications,
    and along with a set of the best practices, it can help large teams collaborate
    and create well organized and extendable implementations.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, folder names, filenames, file extensions, pathnames, dummy
    URLs, user input, and Twitter handles are shown as follows: "In the preceding
    CSS code, we first defined some basic styles for the `box`, `boxsizer`, and `clear`
    CSS classes."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: We are following Google's JavaScript Style Guide, except from using four spaces
    for indentation, in order to improve the readability of the code in the book.
    In short, we are placing curly brackets on top and use single quotes for string
    literals.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For more information on Google''s JavaScript Style Guide you can visit the
    following URL: [https://google.github.io/styleguide/javascriptguide.xml](https://google.github.io/styleguide/javascriptguide.xml)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "The **jQuery Object** returned is an **Array-like object** that acts as
    a wrapper object and carries the collection of the retrieved elements."'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book—what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of.
  prefs: []
  type: TYPE_NORMAL
- en: To send us general feedback, simply e-mail `<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`,
    and mention the book's title in the subject of your message.
  prefs: []
  type: TYPE_NORMAL
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, see our author guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can download the example code files from your account at [http://www.packtpub.com](http://www.packtpub.com)
    for all the Packt Publishing books you have purchased. If you purchased this book
    elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books—maybe a mistake in the text
    or the code—we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **Errata Submission Form** link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title.
  prefs: []
  type: TYPE_NORMAL
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the **Errata** section.
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at `<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`
    with a link to the suspected pirated material.
  prefs: []
  type: TYPE_NORMAL
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you have a problem with any aspect of this book, you can contact us at `<[questions@packtpub.com](mailto:questions@packtpub.com)>`,
    and we will do our best to address the problem.
  prefs: []
  type: TYPE_NORMAL
