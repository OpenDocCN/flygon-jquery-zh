["```js\n$.browser\n\n```", "```js\n$()\n  .log('Safari: ' + $.browser.safari)\n  .log('Opera: ' + $.browser.opera)\n  .log('MSIE: ' + $.browser.msie)\n  .log('Mozilla: ' + $.browser.mozilla);\n```", "```js\nSafari: false\nOpera: false\nMSIE: false\nMozilla: true\n\n```", "```js\n$.noConflict()\n```", "```js\n// Import other library\n// Import jQuery\n$.noConflict();\n// Code that uses other library’s $ can follow here.\n\n```", "```js\n// Import other library\n// Import jQuery\n$.noConflict();\njQuery(document).ready(function($) {\n  // Code that uses jQuery’s $ can follow here.\n});\n// Code that uses other library’s $ can follow here.\n```", "```js\n.length\n\n```", "```js\n<ul>\n  <li>foo</li>\n  <li>bar</li>\n</ul>\n```", "```js\n$().log('Length: ' + $('li’).length);\n\n```", "```js\n.size()\n```", "```js\n<ul>\n  <li>foo</li>\n  <li>bar</li>\n</ul>\n```", "```js\n$().log('Size: ' + $('li’).size());\n\n```", "```js\n.get([index])\n```", "```js\n<ul>\n  <li>foo</li>\n  <li>bar</li>\n</ul>\n```", "```js\n$().log('Get(0): ' + $('li’).get(0));\n\n```", "```js\nGet(0): [object HTMLLIElement]\n\n```", "```js\n$().log('Get(0): ' + $('li’)[0]);\n\n```", "```js\n$().log('Get(): ' + $('li’).get());\n\n```", "```js\nGet(): [object HTMLLIElement],[object HTMLLIElement]\n\n```", "```js\n.index(node)\n\n```", "```js\n<ul>\n  <li>foo</li>\n  <li>bar</li>\n</ul>\n```", "```js\nvar listItem = $('li’)[1];\n$().log('Index: ' + $('li’).index(listItem));\n\n```", "```js\nIndex: 1\n\n```", "```js\n.each(callback)\n$.each(collection, callback)\n\n```", "```js\n<ul>\n  <li>foo</li>\n  <li>bar</li>\n</ul>\n```", "```js\n$('li’).each(function(index) {\n  $(this).log(index + ': ' + $(this).text());\n});\n```", "```js\n0: foo\n1: bar\n\n```", "```js\n$.each([52, 97], function(key, value) {\n  $().log(key + ': ' + value);\n});\n```", "```js\n0: 52\n1: 97\n```", "```js\n$.each({'flammable’: 'inflammable’, 'duh’: 'no duh’}, function(index, value) {\n  $().log(index + ': ' + value);\n});\n```", "```js\nflammable: inflammable\nduh: no duh\n\n```", "```js\n$.grep(array, filter[, invert])\n\n```", "```js\nvar array = [0, 1, 52, 97];\n$(this).log('Before: ' + array);\narray = $.grep(array, function(a) {\n  return (a > 50);\n});\n$(this).log('After: ' + array);\n```", "```js\nBefore: 0,1,52,97\nAfter: 52,97\n\n```", "```js\nvar array = [0, 1, 52, 97];\n$(this).log('Before: ' + array);\narray = $.grep(array, 'a > 50’);\n$(this).log('After: ' + array);\n\n```", "```js\nvar array = [0, 1, 52, 97];\n$(this).log('Before: ' + array);\narray = $.grep(array, 'a > 50’, true);\n$(this).log('After: ' + array);\n\n```", "```js\nBefore: 0,1,52,97\nAfter: 0,1\n\n```", "```js\n$.map(array, filter)\n\n```", "```js\nvar array = [0, 1, 52, 97];\n$(this).log('Before: ' + array);\narray = $.map(array, function(a) {\n  return (a - 45);\n});\n$(this).log('After: ' + array);\n```", "```js\nBefore: 0,1,52,97\nAfter: -45,-44,7,52\n\n```", "```js\nvar array = [0, 1, 52, 97];\n$(this).log('Before: ' + array);\narray = $.map(array, 'a - 45’);\n$(this).log('After: ' + array);\n\n```", "```js\nvar array = [0, 1, 52, 97];\n$(this).log('Before: ' + array);\narray = $.map(array, 'a > 50 ? a - 45 : null’);\n$(this).log('After: ' + array);\n\n```", "```js\nBefore: 0,1,52,97\nAfter: 7,52\n\n```", "```js\nvar array = [0, 1, 52, 97];\n$(this).log('Before: ' + array);\narray = $.map(array, function(a, i) {\n  return [a - 45, i];\n});\n$(this).log('After: ' + array);\n```", "```js\nBefore: 0,1,52,97\nAfter: -45,0,-44,1,7,2,52,3\n\n```", "```js\n$.merge(array1, array2)\n```", "```js\nvar array1 = [0, 1, 52];\nvar array2 = [52, 97];\n$(this).log('Array 1: ' + array1);\n$(this).log('Array 2: ' + array2);\narray = $.merge(array1, array2);\n$(this).log('After: ' + array);\n\n```", "```js\nArray 1: 0,1,52\nArray 2: 52,97\nAfter: 0,1,52,97\n\n```", "```js\nvar newArray = $.merge([], oldArray);\n\n```", "```js\n$.unique(array)\n```", "```js\nvar alice = {'alice’: 'alice’};\nvar bob = {'bob’: 'bob’};\nvar carol = {'carol’: 'carol’};\nvar ted = {'bob’: 'bob’};\nvar oldArray = [alice, bob, carol, bob, ted];\n$(this).log('Before: ' + oldArray);\nnewArray = $.unique(oldArray);\n$(this).log('After: ' + newArray);\n\n```", "```js\nBefore: {alice: alice}, {bob: bob}, {carol: carol},\n  {bob: bob}, {bob: bob}\nAfter: {alice: alice, mergeNum: 52}, {bob: bob, mergeNum: 52},\n  {carol: carol, mergeNum: 52}, {bob: bob, mergeNum: 52}\n```", "```js\n$.extend([target, ]properties[, ...])\n\n```", "```js\nvar object1 = {\n  apple: 0,\n  banana: 52,\n  cherry: 97\n};\nvar object2 = {\n  banana: 1,\n  durian: 100\n};\n\n$().log(object1);\n$().log(object2);\nvar object = $.extend(object1, object2);\n$().log(object);\n```", "```js\n{apple: 0, banana: 52, cherry: 97, }\n{banana: 1, durian: 100, }\n{apple: 0, banana: 1, cherry: 97, durian: 100, }\n\n```", "```js\nvar object = $.extend({}, object1, object2)\n\n```", "```js\n$.trim()\n\n```", "```js\nvar string = \"\\tYes, no, I, this is. \\n \";\n$(this).log('Before: ' + string);\nstring = $.trim(string);\n$(this).log('After: ' + string);\n\n```", "```js\nBefore: \tYes, no, I, this is. \n\nAfter: Yes, no, I, this is.\n```"]