["```js\n<form class=\"contact_form\" action=\"\" method=\"post\" name=\"contact_form\">\n  <ul>\n  <li>\n  <label for=\"name\">Name:</label>\n  <input type=\"text\" name=\"username\" required>\n  </li>\n  <li>\n  <label for=\"name\">Email:</label>\n  <input type=\"email\" name=\"email\" required>\n  </li>\n\n  </ul>\n  <button class=\"submit\" type=\"submit\">Submit Form</button>\n</form>\n```", "```js\n    <li>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" name=\"username\" required>\n    </li>\n    ```", "```js\n    <li>\n      <label for=\"name\">Name:</label>\n      <input id=\"name\" name=\"username\" value=\"\" required=\"required\" \n      pattern=\"[A-Za-z]+\\s[A-Za-z]+\" title=\"firstnamelastname\">\n    </li>\n    ```", "```js\n    <li>\n      <label for=\"email\">Email:</label>\n      <input type=\"email\" name=\"email\" id=\"email\" required= \n      \"required\">\n    </li>\n    ```", "```js\n    <li>\n      <label for=\"email\">Email:</label>\n      <input type=\"email\" name=\"email\" id=\"email\" \n      required=\"required\" pattern=\"[^ @]*@[^ @]*\\.[a-zA-Z]{2,}\" \n      title=\"test@test.com\">\n    </li>\n    ```", "```js\n<input type=\"date\" name=\"dob\"/>\n```", "```js\n<input type=\"text\" name=\"dob\"/>\n```", "```js\n    <script src=\"img/jquery.js\"></script>\n    <script src=\"img/basicvalidation.js\"></script>\n    ```", "```js\n    $(document).ready(function () {\n       var emailField = $(\"#email\");\n        if (emailField.is(\"input\") && emailField.prop(\"type\") === \"email\") {\n      }\n    });\n    ```", "```js\n    emailField.on(\"change\", function(e) {\n      emailField[0].checkValidity();\n        if (!e.target.validity.valid) {\n          $(this).removeClass(\"success\").addClass(\"error\")\n        } else {\n          $(this).removeClass(\"error\").addClass(\"success\")\n        }\n    });\n    ```", "```js\n    .error { color: #f00; }\n    .success { color: #060; }\n    ```", "```js\n    emailField.on(\"invalid\", function(e) {\n      e.target.setCustomValidity(\"\");\n      if (!e.target.validity.valid) {\n      e.target.setCustomValidity(\"I need to see an email address \n      here, not what you've typed!\");\n    }\n    else {\n      e.target.setCustomValidity(\"\");\n    }\n    });\n    ```", "```js\npattern = \"[^ @]*@[^ @]*\\.[a-zA-Z]{2,}\";\n```", "```js\n    function checkEmail(email) {\n      pattern = new RegExp(\"[^ @]*@[^ @]*\\.[a-zA-Z]{2,}\");\n      return pattern.test(email);\n    }\n    ```", "```js\n    emailField.on(\"invalid\", function(e) {\n      e.target.setCustomValidity(\"\");\n     email = emailField.val();\n     checkEmail(emailField);\n      if (!e.target.validity.patternMismatch) {\n        e.target.setCustomValidity(\"I need to see an email address \n        here, not what you've typed!\");\n    }\n    ```", "```js\n/^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/\n```", "```js\n    $.fn.quickValidate = function() {\n      return this;\n    };\n    ```", "```js\n    var $form = this, $inputs = $form.find('input:text, input:password');\n    ```", "```js\n    var filters = {\n      required: {\n        regex: /.+/,\n        error: 'This field is required'\n      },\n      name: {\n        regex: /^[A-Za-z]{3,}$/,\n        error: 'Must be at least 3 characters long, and must only contain letters.'\n      },\n      pass: {\n        regex: /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/,\n        error: 'Must be at least 6 characters long, and contain at least one number, one uppercase and one lowercase letter.'\n      },\n      email: {\n        regex: /^[\\w\\-\\.\\+]+\\@[a-zA-Z0-9\\.\\-]+\\.[a-zA-z0-9]{2,4}$/,\n        error: 'Must be a valid e-mail address (user@gmail.com)'\n      },\n      phone: {\n        regex: /^[2-9]\\d{2}-\\d{3}-\\d{4}$/,\n        error: 'Must be a valid US phone number (999-999-9999)'\n      }\n    };\n    ```", "```js\n    var validate = function(klass, value) {\n\n      var isValid = true, f, error = '';\n      for (f in filters) {\n        var regex = new RegExp(f);\n        if (regex.test(klass)) {\n          if (!filters[f].regex.test(value)) {\n            error = filters[f].error;\n            isValid = false;\n            break;\n          }\n        }\n      }\n    return { isValid: isValid, error: error }\n    };\n    ```", "```js\n    var printError = function($input) {\n      var klass = $input.attr('class'),\n      value = $input.val(),\n      test = validate(klass, value),\n      $error = $('<span class=\"error\">' + test.error + '</span>'),\n      $icon = $('<i class=\"error-icon\"></i>');\n      $input.removeClass('invalid').siblings('.error, .erroricon').remove();\n      if (!test.isValid) {\n        $input.addClass('invalid');\n        $error.add($icon).insertAfter($input);\n        $icon.hover(function() {\n          $(this).siblings('.error').toggle();\n        });\n      }\n    };\n    ```", "```js\n    $inputs.each(function() {\n      if ($(this).is('.required')) {\n        printError($(this));\n      }\n    });\n    ```", "```js\n    $inputs.keyup(function() {\n    printError($(this));\n    });\n    ```", "```js\n    $form.submit(function(e) {\n      if ($form.find('input.invalid').length) {\n        e.preventDefault();\n        alert('There are errors on this form – please check...');\n      }\n    return false;\n    });\n    ```", "```js\n    $(document).ready(function() {\n      $.validate();\n    });\n    ```", "```js\n    $.formUtils.addValidator({\n      name : 'user_name',\n      validatorFunction : function(value, $el, config, language, \n      $form) {\n        return (value.indexOf(\" \") !== -1)\n      },\n      errorMessage : 'Please enter your full name',\n    });\n    ```", "```js\n    $(document).ready(function() {\n     $.formUtils.loadModules('user_name');\n      $.validate({\n     modules: 'user_name'\n      });\n    });\n    ```", "```js\n    <div class=\"form-group\">\n      <label class=\"control-name\" for=\"name\">Name: <span \n      class=\"asterisk\">*</span></label>\n      <input name=\"username\" id=\"username\" datavalidation=\"user_name\">\n    </div>\n    ```", "```js\n    $.formUtils.addValidator({\n      name : 'free_email',\n      validatorFunction : function(value, $el, config, language, \n      $form) {\n        varemailName = /^([\\w-\\.]+@(?!gmail.com)(?!yahoo.com)(?!hotmail.com)([\\w-]+\\.)+[\\w- \n        ]{2,4})?$/;\n        return (emailName.test(value))\n      },\n      errorMessage : 'Sorry - we do not accept free email accounts \n      such as Hotmail.com'\n    });\n    ```", "```js\n    $(document).ready(function() {\n     $.formUtils.loadModules('free_email');\n      $.validate({ modules: 'free_email'});\n    });\n    ```", "```js\n    <div class=\"form-group\">\n      <label class=\"control-name\" for=\"email\">Email: <span \n      class=\"asterisk\">*</span></label>\n      <input type=\"text\" name=\"email\" id=\"email\" datavalidation=\"free_email\">\n    </div>\n    ```", "```js\n    $.formUtils.loadModules('free_email, user_name');\n    $.validate({\n      modules: 'free_email, user_name',\n    });\n    ```", "```js\n    varmyLanguage = {\n      badUrl: \"De ingangswaarde is geencorrecte URL\"\n    };\n    ```", "```js\n    $.validate({\n      modules: 'free_email, user_name',\n     language: myLanguage\n    });\n    ```", "```js\n    varmyLanguage = { badUrl: \"La valeur d'entrée n'est pas une URL correcte\" };\n    ```", "```js\n    $.validate({ modules: 'user_name, free_email', validateOnBlur: false, errorMessagePosition : 'top', language: myLanguage});\n    ```", "```js\n    div.form-error { \n      font-size: 14px; \n      background: none repeat scroll 0 0 #ffe5ed;\n      border-radius: 4px; color: #8b0000;\n      margin-bottom: 22px; padding: 6px 12px;\n      width: 88%; margin-left: 0px; margin: 10px;\n    }\n    ```", "```js\n    .has-error, .error { color: #f00; }\n    .has-success, .valid { color: #060; }\n    .error { background-image: url(../img/invalid.png); background-position: 98%; background-repeat: no-repeat; background-color: #ff9a9a; }\n    .valid { background-image: url(../img/valid.png); background-position: 98%; background-repeat: no-repeat; background-color: #9aff9a; }\n    ```", "```js\ninput[type=email], input[type=text] { filter: blur(3px); opacity: .4; transition: all .4s; }\n\ninput[type=email]:focus, input[type=text]:focus { filter: none; opacity: 1; }\n```", "```js\n            $recipient = \"<ENTER EMAIL HERE>\";\n    ```", "```js\n    $(function() {\n      var form = $('#ajaxform');\n      var formMessages = $('#messages');\n    ```", "```js\n    $(form).submit(function(e) {\n      e.preventDefault();\n      var formData = $(form).serialize();\n    ```", "```js\n    $.ajax({ \n      type: 'POST',\n      url: $(form).attr('action'),\n      data: formData\n    })\n    ```", "```js\n    .done(function(response) {\n      $(formMessages).removeClass('error');\n      $(formMessages).addClass('success');\n      $(formMessages).text(response);\n\n      $('#name').val('');\n      $('#email').val('');\n      $('#message').val('');\n    })\n    ```", "```js\n    .fail(function(data) {\n          $(formMessages).removeClass('success');\n          $(formMessages).addClass('error');\n\n          if (data.responseText !== '') {\n            $(formMessages).text(data.responseText);\n          } else {\n            $(formMessages).text('Oops! An error occurred and your message could not be sent.');\n           }\n         });\n       });\n     });\n    ```", "```js\n    <link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\n    <link rel=\"stylesheet\" href=\"css/styles.css\">\n    <link rel=\"stylesheet\" href=\"css/fileupload.css\">\n    <script src=\"img/jquery.min.js\"></script>\n    <script src=\"img/ajax.js\"></script>\n    <script src=\"img/jquery.ui.widget.js\"></script>\n    <script src=\"img/jquery.iframe-transport.js\"></script>\n    <script src=\"img/jquery.fileupload.js\"></script>\n    <script src=\"img/uploadfiles.js\"></script>\n\n    ```", "```js\n    <div id=\"formtitle\">\n      <h2>File Upload Demo</h1>\n    </div>\n    <div id=\"form-messages\"></div>\n    ```", "```js\n    <div class=\"container\">\n      Click the button to select files to send:\n      <span class=\"btnbtn-success fileinput-button\">\n      <span>Select files...</span>\n      <input id=\"fileupload\" type=\"file\" name=\"files[]\" multiple>\n      </span>\n      <p>Upload progress</p>\n      <div id=\"progress\" class=\"progress progress-success \n      progress-striped\">\n      <div class=\"bar\"></div>\n      </div>\n      <p>Files uploaded:</p>\n      <ul id=\"files\"></ul>\n    </div>\n    ```", "```js\n    $('#files').append('<li><img src=\"img/div>Now, amend the highlighted part to match the location of where you are hosting the files within your local web server. The `files` and `thumbnail` folders are created automatically by the scripts.\n    ```"]