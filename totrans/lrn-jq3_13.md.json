["```js\n<form id=\"ajax-form\" action=\"https://github.com/search\" method=\"get\"> \n  <fieldset> \n    <div class=\"text\"> \n      <label for=\"title\">Search</label> \n      <input type=\"text\" id=\"title\" name=\"q\"> \n    </div> \n\n    <div class=\"actions\"> \n      <button type=\"submit\">Request</button> \n    </div> \n  </fieldset> \n</form> \n\n```", "```js\n$(() => {\n  $('#ajax-form')\n    .on('submit', (e) => {\n      e.preventDefault();\n      $('#response')\n        .load(\n          'https://github.com/search .container',\n          $(e.target).serialize()\n        );\n    });\n});\n\n```", "```js\n$(() => {\n  $('#ajax-form')\n    .on('submit', (e) => {\n      e.preventDefault();\n\n      $.ajax({\n        url: 'https://api.github.com/search/repositories',\n        dataType: 'jsonp',\n        data: { q: $('#title').val() },\n        success(data) {\n          console.log(data);\n        }\n      });\n    });\n}); \n\n```", "```js\n{\n  \"id\": 167174,\n  \"name\": \"jquery\",\n  \"open_issues\": 78,\n  \"open_issues_count\": 78,\n  \"pulls_url: \"https://api.github.com/repos/jquery/jquery/pulls{/number}\",\n  \"pushed_at\": \"2017-03-27T15:50:12Z\",\n  \"releases_url\": \"https://api.github.com/repos/jquery/jquery/releases{/id}\",\n  \"score\": 138.81496,\n  \"size\": 27250,\n  \"ssh_url\": \"git@github.com:jquery/jquery.git\",\n  \"stargazers_count\": 44069,\n  \"updated_at\": \"2017-03-27T20:59:42Z\",\n  \"url\": \"https://api.github.com/repos/jquery/jquery\",\n  \"watchers\": 44069,\n  // ...\n} \n\n```", "```js\nconst buildItem = item =>\n  `\n    <li>\n      <h3><a href=\"${item.html_url}\">${item.name}</a></h3>\n      <div>â˜… ${item.stargazers_count}</div>\n      <div>${item.description}</div>\n    </li>\n  `;\n\n```", "```js\n$(() => {\n  $('#ajax-form')\n    .on('submit', (e) => {\n      e.preventDefault();\n\n      $.ajax({\n        url: 'https://api.github.com/search/repositories',\n        dataType: 'jsonp',\n        data: { q: $('#title').val() },\n        success(json) {\n          var output = json.data.items.map(buildItem);\n          output = output.length ?\n          output.join('') : 'no results found';\n\n          $('#response').html(`<ol>${output}</ol>`);\n        }\n      });\n    });\n}); \n\n```", "```js\n$(() => {\n  $('#ajax-form')\n    .on('submit', (e) => {\n      e.preventDefault();\n\n      $.ajax({\n        url: 'https://api.github.com/search/repositories',\n        dataType: 'jsonp',\n        data: { q: $('#title').val() },\n        error() {\n          $('#response').html('Oops. Something went wrong...');\n        }\n      });\n    });\n}); \n\n```", "```js\n$.ajax({\n  url: 'https://api.github.com/search/repositories',\n  dataType: 'jsonp',\n  data: { q: $('#title').val() },\n  timeout: 10000,\n  error() {\n    $('#response').html('Oops. Something went wrong...');\n  }\n});\n\n```", "```js\n$.ajax({\n  url: 'https://api.github.com/search/repositories',\n  dataType: 'jsonp',\n  data: { q: $('#title').val() },\n  timeout: 10000,\n}).then((json) => {\n  var output = json.data.items.map(buildItem);\n  output = output.length ?\n    output.join('') : 'no results found';\n\n  $('#response').html(`<ol>${output}</ol>`);\n}).catch(() => {\n  $('#response').html('Oops. Something went wrong...');\n});\n\n```", "```js\n$('#ajax-form')\n  .on('submit', (e) => {\n    e.preventDefault();\n\n    $('#response')\n      .addClass('loading')\n      .empty();\n\n    $.ajax({\n      url: 'https://api.github.com/search/repositories',\n      dataType: 'jsonp',\n      data: { q: $('#title').val() },\n      timeout: 10000,\n    }).then((json) => {\n      var output = json.data.items.map(buildItem);\n      output = output.length ?\n      output.join('') : 'no results found';\n\n      $('#response').html(`<ol>${output}</ol>`);\n    }).catch(() => {\n      $('#response').html('Oops. Something went wrong...');\n    }).always(() => {\n      $('#response').removeClass('loading');\n    });\n}); \n\n```", "```js\n$(() => {\n  const cache = new Map();\n\n  $('#ajax-form')\n    .on('submit', (e) => {\n      e.preventDefault();\n\n      const search = $('#title').val();\n\n      if (search == '') {\n        return;\n      }\n\n      $('#response')\n        .addClass('loading')\n        .empty();\n\n      cache.set(search, cache.has(search) ?\n        cache.get(search) :\n        $.ajax({\n          url: 'https://api.github.com/search/repositories',\n          dataType: 'jsonp',\n          data: { q: search },\n          timeout: 10000,\n        })\n      ).get(search).then((json) => {\n        var output = json.data.items.map(buildItem);\n        output = output.length ?\n          output.join('') : 'no results found';\n\n        $('#response').html(`<ol>${output}</ol>`);\n      }).catch(() => {\n        $('#response').html('Oops. Something went wrong...');\n      }).always(() => {\n        $('#response').removeClass('loading');\n      });\n    });\n}); \n\n```", "```js\n$('#title')\n  .on('keyup', (e) => {\n    $(e.target.form).triggerHandler('submit');\n  });\n\n```", "```js\nconst searchDelay = 300;\nvar searchTimeout;\n\n$('#title')\n  .on('keyup', (e) => {\n    clearTimeout(searchTimeout);\n\n    searchTimeout = setTimeout(() => {\n      $(e.target.form).triggerHandler('submit');\n    }, searchDelay);\n  });\n\n```", "```js\nLanguage:\n - JavaScript\n - HTML\n - CSS\nStar Count:\n - 5000+\n - 10000+\n - 20000+\n\n```", "```js\n$.ajaxSetup({ \n  accepts: { \n    yaml: 'application/x-yaml, text/yaml' \n  }, \n  contents: { \n    yaml: /yaml/ \n  }, \n  converters: { \n    'text yaml': (textValue) => { \n      console.log(textValue); \n      return ''; \n    } \n  } \n}); \n\n$.ajax({ \n  url: 'categories.yml', \n  dataType: 'yaml' \n}); \n\n```", "```js\n$.ajaxSetup({\n  accepts: {\n    yaml: 'application/x-yaml, text/yaml'\n  },\n  contents: {\n    yaml: /yaml/\n  },\n  converters: {\n    'text yaml': (textValue) => YAML.eval(textValue)\n  }\n});\n\nPromise.all([\n  $.getScript('yaml.js')\n    .then(() =>\n      $.ajax({\n        url: 'categories.yml',\n        dataType: 'yaml'\n      })),\n  $.ready\n]).then(([data]) => {\n  const output = Object.keys(data).reduce((result, key) =>\n    result.concat(\n      `<li><strong>${key}</strong></li>`,\n      data[key].map(i => `<li> <a href=\"#\">${i}</a></li>`)\n    ),\n    []\n  ).join('');\n\n  $('#categories')\n    .removeClass('hide')\n    .html(`<ul>${output}</ul>`);\n}); \n\n```", "```js\n$(document)\n  .on('click', '#categories a', (e) => {\n    e.preventDefault();\n\n    $(e.target)\n      .parent()\n      .toggleClass('active')\n      .siblings('.active')\n      .removeClass('active');\n    $('#ajax-form')\n      .triggerHandler('submit');\n  }); \n\n```", "```js\n$('#ajax-form')\n  .on('submit', (e) => {\n    e.preventDefault();\n\n    const search = [\n      $('#title').val(),\n      new Map([\n        ['JavaScript', 'language:\"JavaScript\"'],\n        ['HTML', 'language:\"HTML\"'],\n        ['CSS', 'language:\"CSS\"'],\n        ['5000+', 'stars:\">=5000\"'],\n        ['10000+', 'stars:\">=10000\"'],\n        ['20000+', 'stars:\">=20000\"'],\n        ['', '']\n      ]).get($.trim(\n        $('#categories')\n          .find('li.active')\n          .text()\n      ))\n    ].join('');\n\n    if (search == '' && category == '') {\n      return;\n    }\n\n    $('#response')\n      .addClass('loading')\n      .empty();\n\n    cache.set(search, cache.has(search) ?\n      cache.get(search) :\n      $.ajax({\n        url: 'https://api.github.com/search/repositories',\n        dataType: 'jsonp',\n        data: { q: search },\n        timeout: 10000,\n      })).get(search).then((json) => {\n        var output = json.data.items.map(buildItem);\n        output = output.length ?\n          output.join('') : 'no results found';\n\n        $('#response').html(`<ol>${output}</ol>`);\n      }).catch(() => {\n        $('#response').html('Oops. Something went wrong...');\n      }).always(() => {\n        $('#response').removeClass('loading');\n      });\n  }); \n\n```", "```js\n$.ajaxPrefilter(({ url }) =>\n  /.yml$/.test(url) ? 'yaml' : null\n);\n\n$.getScript('yaml.js')\n  .then(() =>\n    $.ajax({ url: 'categories.yml' })\n  ); \n\n```", "```js\n$.ajaxTransport('img', ({ url }) => {\n  var $img, img, prop;\n\n  return {\n    send(headers, complete) {\n      const callback = (success) => {\n        if (success) {\n          complete(200, 'OK', { img });\n        } else {\n          $img.remove();\n          complete(404, 'Not Found');\n        }\n      }\n\n      $img = $('<img>', { src: url });\n      img = $img[0];\n      prop = typeof img.naturalWidth === 'undefined' ?\n        'width' : 'naturalWidth';\n\n      if (img.complete) {\n        callback(!!img[prop]);\n      } else {\n        $img.on('load error', ({ type }) => {\n          callback(type == 'load');\n        });\n      }\n    },\n\n    abort() {\n      if ($img) {\n        $img.remove();\n      } \n    }\n  };\n}); \n\n```", "```js\n$.ajax({\n  url: 'missing.jpg',\n  dataType: 'img'\n}).then((img) => {\n  $('<div/>', {\n    id: 'picture',\n    html: img\n  }).appendTo('body');\n}).catch((xhr, textStatus, msg) => {\n  $('<div/>', {\n    id: 'picture',\n    html: `${textStatus}: ${msg}`\n  }).appendTo('body');\n}); \n\n```", "```js\n$.ajax({\n  url: 'sunset.jpg',\n  dataType: 'img'\n}).then((img) => {\n  $('<div/>', {\n    id: 'picture',\n    html: img\n  }).appendTo('body');\n}).catch((xhr, textStatus, msg) => {\n  $('<div/>', {\n    id: 'picture',\n    html: `${textStatus}: ${msg}`\n  }).appendTo('body');\n}); \n\n```"]