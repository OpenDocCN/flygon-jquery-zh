["```js\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n  <script src=\"img/jquery.js\" type=\"text/javascript\"></script>\n <script src=\"img/jquery.plug-in.js\" type=\"text/javascript\"></script>\n  <script src=\"img/custom.js\" type=\"text/javascript\"></script>\n  <title>Example</title>\n</head>\n```", "```js\n$(document).ready(function() {\n  $('#myForm').ajaxForm();\n});\n```", "```js\njQuery.fn.methodName = methodDefinition\n\n```", "```js\njQuery.fn.showAlert = function() {\n  alert('You called the method on \"' + this[0] + '\".');\n  return this;\n}\n```", "```js\njQuery.fn.showAlert = function() {\n  return this.each(function() {\n    alert('You called the method on \"' + this + '\".');\n  });\n}\n```", "```js\n$('.myClass').showAlert();\n\n```", "```js\njQuery.pluginName = fnDefinition;\njQuery.pluginName = {\nfunction1: fnDefinition1,\nfunction2: fnDefinition2\n};\n\n```", "```js\njQuery.myPlugin = function() {\n  alert('This is a test. This is only a test.');\n};\n```", "```js\njQuery.myPlugin();\n\n```", "```js\n$.myPlugin();\n\n```", "```js\njQuery.myPlugin = {\n  foo: function() {\n    alert('This is a test. This is only a test.');\n  },\n  bar: function(param) {\n    alert('This function takes a parameter, which is \"' + param + '\".');\n  }\n};\n```", "```js\n$.myPlugin.foo();\n$.myPlugin.bar('baz');\n\n```", "```js\njQuery.extend(jQuery.expr[selectorType], {\nselectorName: elementTest\n});\n\n```", "```js\nm[0] == ':selectorName(param1(param2))'\nm[1] == ':'\nm[2] == 'selectorName'\nm[3] == 'param1(param2)'\nm[4] == '(param2)'\n\n```", "```js\njQuery.extend(jQuery.expr[':'], {\n  'num-children': 'a.childNodes.length == m[3]'\n});\n```", "```js\n$(document).ready(function() {\n  $('ul:num-children(2)').css('color', 'red');\n});\n```", "```js\njQuery.extend(jQuery.easing, {\neasingStyleName: easingFunction\n});\n\n```", "```js\nf(fraction) * attrDelta + attrStart\n\n```", "```js\njQuery.extend(jQuery.easing, { \n  'linear': function(fraction, elapsed, attrStart, attrDelta,\n                                                       duration) {\n    return fraction * attrDelta + attrStart;\n  }\n});\n```", "```js\njQuery.extend(jQuery.easing, { \n  'quadratic': function(fraction, elapsed, attrStart, attrDelta,\n                                                       duration) {\n    return fraction * fraction * attrDelta + attrStart;\n  }\n});\n```", "```js\n$('.myClass').animate({\n  'left': 500,\n  'opacity': 0.1\n}, 'slow', 'quadratic');\n```", "```js\njQuery.log = function(message) {\n  $('<div class=\"log-message\"></div>')\n    .text(message).appendTo('.log');\n};\n```", "```js\njQuery.log = function(message) {\n  $('<div class=\"log-message\"></div>')\n    .text(message)\n    .hide()\n    .appendTo('.log')\n    .fadeIn();\n};\n```", "```js\njQuery.fn.log = function(message) {\n  return this.each(function() {\n    $('<div class=\"log-message\"></div>')\n      .text(message)\n      .hide()\n      .appendTo(this)\n      .fadeIn();\n  });\n};\n```", "```js\njQuery.fn.log = function(message) {\n  return this.each(function() {\n    $context = $(this);\n    while ($context.length) {\n      $log = $context.find('.log');\n      if ($log.length) {\n        $('<div class=\"log-message\"></div>')\n          .text(message).hide().appendTo($log).fadeIn();\n        break;\n      }\n      $context = $context.parent();\n    }\n  });\n};\n```", "```js\njQuery.fn.log = function(message) {\n  if (typeof(message) == 'object') {\n    string = '{';\n    $.each(message, function(key, value) {\n      string += key + ': ' + value + ', ';\n    });\n    string += '}';\n    message = string;\n  }\n  return this.each(function() {\n    $context = $(this);\n    while ($context.length) {\n      $log = $context.find('.log');\n      if ($log.length) {\n        $('<div class=\"log-message\"></div>')\n          .text(message).hide().appendTo($log).fadeIn();\n        break;\n      }\n      $context = $context.parent();\n    }\n  });\n};\n```"]