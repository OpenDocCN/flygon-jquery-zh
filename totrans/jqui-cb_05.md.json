["```js\n<div title=\"Dialog Title\">\n    <p>Basic dialog content</p>\n</div>\n```", "```js\n(function( $, undefined ) {\n\n$.widget( \"ab.dialog\", $.ui.dialog, {\n\n    _create: function() {\n\n        this._super();\n\n        var dialog = this.uiDialog;\n\n        dialog.find( \".ui-dialog-titlebar\" ).hide();\n        dialog.find( \".ui-dialog-buttonpane\" ).hide();\n\n    },\n\n    open: function() {\n\n        this._super();\n\n        var dialog = this.uiDialog;\n\n        dialog.find( \".ui-dialog-titlebar\" ).toggle( \"fold\", 500 );\n        dialog.find( \".ui-dialog-buttonpane\" ).toggle( \"fold\", 500 );\n\n    },\n\n    close: function( event, isCallback ) {\n\n        var self = this,\n            dialog = this.uiDialog;\n\n        if ( isCallback ) {\n            this._super( event );\n            return;\n        }\n\n        dialog.find( \".ui-dialog-titlebar\" ).toggle( \"fold\", 500 );\n        dialog.find( \".ui-dialog-buttonpane\" ).toggle( \"fold\", 500, function(){\n            self.element.dialog( \"close\", event, true );\n        });\n\n    }\n\n});\n\n})( jQuery );\n\n$(function() {\n\n    $( \"div\" ).dialog({\n        show: \"fade\", \n        hide: \"scale\",\n        buttons: {\n            Cancel: function() {\n                $( this ).dialog( \"close\" );\n            }\n        }\n    });\n\n});\n```", "```js\n<div id=\"dialog\" title=\"Genres and Titles\">\n    <div class=\"dialog-field\">\n        <label for=\"genres\">Genres:</label>\n        <select id=\"genres\"></select>\n        <div class=\"ui-helper-clearfix\"></div>\n    </div>\n\n    <div class=\"dialog-field\">\n        <label for=\"titles\">Titles:</label>\n        <select id=\"titles\"></select>\n        <div class=\"ui-helper-clearfix\"></div>\n    </div>\n</div>\n```", "```js\n.dialog-field {\n    margin: 5px;\n}\n\n.dialog-field label {\n    font-weight: bold;\n    font-size: 1.1em;\n    float: left;\n}\n\n.dialog-field select {\n    float: right;\n}\n```", "```js\n(function( $, undefined ) {\n\n$.widget( \"ab.dialog\", $.ui.dialog, {\n\n    options: { \n        promises: []\n    },\n\n    open: function( isPromise ) {\n\n        var $element = this.element,\n            promises = this.options.promises;\n\n        if ( promises.length > 0 && !isPromise ) {\n\n            $.when.apply( $, promises ).then( function() {\n                $element.dialog( \"open\", true );\n            });\n\n        }\n        else {\n\n            this._super();\n\n        }\n\n    },\n\n});\n\n})( jQuery );\n\n$(function() {\n\n    var repos = $.ajax({\n        url: \"https://api.github.com/repositories\",\n        dataType: \"jsonp\",\n        success: function( resp ) {\n            $.each( resp.data, function( i, v ) {\n                $( \"<option/>\" ).html( v.name )\n                                .appendTo( \"#repos\" );\n            });\n        },\n    });\n\n    var users = $.ajax({\n        url: \"https://api.github.com/users\",\n        dataType: \"jsonp\",\n        success: function( resp ) {\n            $.each( resp.data, function( i, v ) {\n                $( \"<option/>\" ).html( v.login )\n                                .appendTo( \"#users\" );\n            });\n        }\n    });\n\n    $( \"#dialog\" ).dialog({\n        width: 400,\n        promises: [\n            repos.promise(),\n            users.promise()\n        ]\n    });\n\n});\n```", "```js\n<div id=\"dialog\" title=\"Edit\">\n    <div>\n        <label>Field 1:</label>\n        <input type=\"text\"/>\n    </div>\n    <div>\n        <label>Field 2:</label>\n        <input type=\"text\"/>\n    </div>\n</div>\n```", "```js\n.ui-dialog-icon {\n    float: left;\n    margin-right: 5px;\n}\n```", "```js\n(function( $, undefined ) {\n\n$.widget( \"ab.dialog\", $.ui.dialog, {\n\n    options: {\n        icon: false\n    },\n\n    _create: function() {\n\n        this._super();\n\n        if ( this.options.icon ) {\n\n            var iconClass = \"ui-dialog-icon ui-icon \" + \n                            this.options.icon;\n\n            this.uiDialog.find( \".ui-dialog-titlebar\" )\n                         .prepend( $( \"<span/>\" ).addClass( iconClass ));\n\n        }\n\n    },\n\n});\n\n})( jQuery );\n\n$(function() {\n\n    $( \"#dialog\" ).dialog({\n        icon: \"ui-icon-pencil\",\n        buttons: {\n            Save: function() { $( this ).dialog( \"close\" ) }\n        }\n    });\n\n});\n```", "```js\n<div id=\"dialog\" title=\"Dialog Title\">\n    <p>Basic dialog content</p>\n</div>\n```", "```js\n(function( $, undefined ) {\n\n$.widget( \"ab.dialog\", $.ui.dialog, {\n\n    options: {\n        iconButtons: false\n    },\n\n    _create: function() {\n\n        this._super();\n\n        var $titlebar = this.uiDialog.find( \".ui-dialog-titlebar\" );\n\n        $.each( this.options.iconButtons, function( i, v ) {\n\n            var button = $( \"<button/>\" ).text( v.text ),\n                right = $titlebar.find( \"[role='button']:last\" )\n                                 .css( \"right\" );\n\n            button.button( { icons: { primary: v.icon }, text: false } )\n                  .addClass( \"ui-dialog-titlebar-close\" )\n                  .css( \"right\", (parseInt(right) + 22) + \"px\" )\n                  .click( v.click )\n                  .appendTo( $titlebar );\n\n        });\n\n    }\n\n});\n\n})( jQuery );\n\n$(function() {\n\n    $( \"#dialog\" ).dialog({\n        iconButtons: [\n            {\n                text: \"Search\",\n                icon: \"ui-icon-search\",\n                click: function( e ) {\n                    $( \"#dialog\" ).html( \"<p>Searching...</p>\" );\n                }\n            },\n            {\n                text: \"Add\",\n                icon: \"ui-icon-plusthick\",\n                click: function( e ) {\n                    $( \"#dialog\" ).html( \"<p>Adding...</p>\" );\n                }\n            }\n        ]\n    });\n\n});\n```", "```js\n<div id=\"dialog\" title=\"Dialog Title\">\n    <p>Basic dialog content</p>\n</div>\n```", "```js\n(function( $, undefined ) {\n\n$.widget( \"ab.dialog\", $.ui.dialog, {\n\n    options: { \n        animateResize: false \n    },\n\n    _makeResizable: function( handles ) {\n        handles = (handles === undefined ? this.options.resizable : handles);\n        var that = this,\n            options = this.options,\n            position = this.uiDialog.css( \"position\" ),\n            resizeHandles = typeof handles === 'string' ?\n                handles:\n                \"n,e,s,w,se,sw,ne,nw\";\n\n        function filteredUi( ui ) {\n            return {\n                originalPosition: ui.originalPosition,\n                originalSize: ui.originalSize,\n                position: ui.position,\n                size: ui.size\n            };\n        }\n\n        this.uiDialog.resizable({\n            animate: this.options.animateResize,\n            cancel: \".ui-dialog-content\",\n            containment: \"document\",\n            alsoResize: this.element,\n            maxWidth: options.maxWidth,\n            maxHeight: options.maxHeight,\n            minWidth: options.minWidth,\n            minHeight: this._minHeight(),\n            handles: resizeHandles,\n            start: function( event, ui ) {\n                $( this ).addClass( \"ui-dialog-resizing\" );\n                that._trigger( \"resizeStart\", event, filteredUi( ui ) );\n            },\n            resize: function( event, ui ) {\n                that._trigger( \"resize\", event, filteredUi( ui ) );\n            },\n            stop: function( event, ui ) {\n                $( this ).removeClass( \"ui-dialog-resizing\" );\n                options.height = $( this ).height();\n                options.width = $( this ).width();\n                that._trigger( \"resizeStop\", event, filteredUi( ui ) );\n                if ( that.options.modal ) {\n                    that.overlay.resize();\n                }\n             }\n        })\n        .css( \"position\", position )\n        .find( \".ui-resizable-se\" )\n        .addClass( \"ui-icon ui-icon-grip-diagonal-se\" );\n    }\n\n});\n\n})( jQuery );\n\n$(function() {\n\n    $( \"#dialog\" ).dialog({\n        animateResize: true\n    });\n\n});\n```", "```js\n<div id=\"notify\"></div>\n\n<button id=\"show-info\">Show Info</button>\n<button id=\"show-error\">Show Error</button>\n```", "```js\n(function( $, undefined ) {\n\n$.widget( \"ab.notify\", $.ui.dialog, {\n\n    options: { \n        modal: true,\n        resizable: false,\n        draggable: false,\n        minHeight: 100,\n        autoOpen: false,\n        error: false\n    },\n\n    open: function() {\n\n        var error = this.options.error,\n            newClass = error ? \"ui-state-error\" : \n                               \"ui-state-highlight\",\n            oldClass = error ? \"ui-state-highlight\" :\n                               \"ui-state-error\";\n\n        this.element.html( this.options.text );\n\n        this.uiDialog.addClass( newClass )\n                     .removeClass( oldClass )\n                     .find( \".ui-dialog-titlebar\" )\n                     .removeClass( \"ui-widget-header ui-corner-all\" );\n\n        this._super();\n\n    },\n\n});\n\n})( jQuery );\n\n$(function() {\n\n    $( \"#notify\" ).notify();\n\n    $( \"#show-info, #show-error\" ).button();\n\n    $( \"#show-info\" ).click( function( e ) {\n\n        $( \"#notify\" ).notify( \"option\", {\n            error: false,\n            text: \"Successfully completed task\"\n        });\n\n        $( \"#notify\" ).notify( \"open\" );\n\n    });\n\n    $( \"#show-error\" ).click(function( e ) {\n\n        $( \"#notify\" ).notify( \"option\", {\n            error: true,\n            text: \"Failed to complete task\"\n        });\n\n        $( \"#notify\" ).notify( \"open\" );\n\n    })\n```"]