["```js\n<!DOCTYPE html>  \n<html>  \n  <head>   \n    <meta charset=\"utf-8\">   \n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1.0, user-scalable=no\">   \n    <title>Chapter 5 - News</title>       \n    <link rel=\"stylesheet\" href=\"http://code.jquery.com/mobile/1.3.0/jquery.mobile-1.3.0.min.css\" />   \n    <script src=\"img/jquery-1.8.2.min.js\"></script>  \n    <script src=\"img/jsrender.min.js\" type=\"text/javascript\"></script>\n  <script src=\"img/jquery.mobile-1.3.0.min.js\"></script>\n```", "```js\n    <style type=\"text/css\">     \n      .twitterItem .ui-li-has-thumb .ui-btn-inner a.ui-link-inherit, #results .ui-li-static.ui-li-has-thumb{       \n         min-height: 50px;       \n         padding-left: 70px;     \n      } \n      .twitterItem .ui-li-thumb, #results .ui-listview .ui-li-icon, #results .ui-li-content{       \n         margin-top: 10px;\n         margin-left: 10px;     \n      }     \n      .twitterItem .ui-li-desc{       \n         white-space:normal;       \n         margin-left:-25px;       \n      }     \n      .twitterItem .handle{       \n        font-size:80%;       \n        font-weight:normal;         \n        color:#aaa;     \n      }     \n      .twitterItem .ui-li-heading{       \n        margin: 0 0 .6em -25px;     \n      }   \n    </style> \n  </head>   \n  <body>  \n```", "```js\n  <div id=\"home_page\" data-role=\"page\"> \t\n    <div data-role=\"header\"><h1>Now Trending</h1></div>   \n    <div data-role=\"content\">\n      <ul id=\"results\" data-role=\"listview\" data-dividertheme=\"b\">\n      </ul>\n    </div>\n  </div>  \n```", "```js\n  <script type=\"text/javascript\"> \n    $(document).on(\"pagebeforeshow\", \"#home_page\",  function(){ \t\n\n     //before we show the page, go get the trending topics\n     //from twitter\n    $.ajax({       \n      url:\"https://api.twitter.com/1/trends/daily.json\",\n        dataType:\"jsonp\",       \n        success: function(data) {       \n          var keys = Object.keys(data.trends);       \n\n          //Invoke jsRender on the template and pass in\n          //the data to be used in the rendering.\n          var content = $(\"#twitterTendingTemplate\")\n           .render(data.trends[keys[0]]);\n\n          //Inject the rendered content into the results area \n          //and refresh the listview\n          $(\"#results\").html( content ).listview(\"refresh\"); \n        }\t\n      })\n      .error(function(jqXHR, textStatus, errorThrown){                  \n        alert(textStatus+\" - \"+errorThrown);     \n      });\n    });    \n\n    $(document).on('click', 'a.twitterSearch', function(){     \n      var searchTerm = $(this).attr(\"data-search\");     \n\n      //take the search term from the clicked element and \n      //do a search with the Twitter API\n      $.ajax({        \n        url:\"http://search.twitter.com/search.json?q=\"+escape(searchTerm),        \n        dataType:\"jsonp\",       \n        success: function(data){\n\n          //create a unique page ID based on the search term\n          data.pageId = searchTerm.replace(/[# ]*/g,\"\");             \n          //add the search term to the data object\n          data.searchTerm = searchTerm; \n\n          //render the template with JsRender and the data    \n          var content = $(\"#twitterSearchPageTemplate\").render(data);  \n\n          //The rendered content is a full jQuery Mobile \n          //page with a unique ID.  Append it directly to the \n          //body element\n          $(document.body).append(content); \t\n\n          //switch to the newly injected page\n          $.mobile.changePage(\"#\"+data.pageId);       \n        }     \n      })\n      .error(function(jqXHR, textStatus, errorThrown){                  \n        alert(textStatus+\" - \"+errorThrown);     \n      });   \n    });     \n  </script>  \n```", "```js\n  <script id=\"twitterTendingTemplate\" type=\"text/x-jsrender\"> \n    <li class=\"trendingItem\">     \n      <a href=\"javascript://\" class=\"twitterSearch\" data-search=\"{{>name}}\">       \n        <h3>{{>name}}</h3>     \n      </a>   \n    </li> \n  </script>  \n\n  <script id=\"twitterSearchPageTemplate\" type=\"text/x-jsrender\">   \n    <div id=\"{{>pageId}}\" data-role=\"page\" data-add-back-btn=\"true\">     \n      <div data-role=\"header\">\n        <h1>{{>searchTerm}}</h1>\n      </div>     \n      <div data-role=\"content\">\n        <ul id=\"results\" data-role=\"listview\" data-dividertheme=\"b\">\n          {{for results}}           \n            <li class=\"twitterItem\">             \n            <a href=\"http://twitter.com/{{>from_user}}\">   \n              <img src=\"img/{{>profile_image_url}}\" alt=\"{{>from_user_name}}\" class=\"ui-shadow ui-corner-all\" /> \n              <h3>{{>from_user_name}} \n                <span class=\"handle\">\n                  (@{{>from_user}})<br/>\n                  {{>location}} \n                  {{if geo}}\n                    {{>geo}}\n                  {{/if}}\n                </span>\n              </h3>               \n              <p>{{>text}}</p>             \n            </a>           \n          </li>         \n        {{/for}} \t      \n      </ul>     \n    </div>   \n  </div> \n</script>  \n</body> \n</html>\n```", "```js\n <script type=\"text/javascript\" src=\"img/daily.json?callback=jQuery172003156238095834851_1345608708562&_=1345608708657\"></script>\n```", "```js\njQuery172003156238095834851_1345608708562({\"trends\": â€¦}). \n```", "```js\njQuery1720026425381423905492_1345774796764({\n  \"as_of\": 1345774741,\n  \"trends\": {\n    \"2012-08-23 05:20\": [\n       {\n         \"events\": null,\n         \"name\": \"#ThingsISayTooMuch\",\n         \"query\": \"#ThingsISayTooMuch\",\n         \"promoted_content\": null\n       },\n       {\n         \"events\": null,\n         \"name\": \"#QuieroUnBesoDe\",\n         \"query\": \"#QuieroUnBesoDe\",\n         \"promoted_content\": null\n       },\n       {\n          \"events\": null,\n          \"name\": \"#ASongIKnowAllTheLyricsTo\",\n          \"query\": \"#ASongIKnowAllTheLyricsTo\",\n          \"promoted_content\": null\n       },\n```", "```js\n<script id=\"twitterTendingTemplate\" type=\"text/x-jsrender\"> \n  <li class=\"trendingItem\">     \n    <a href=\"javascript://\" class=\"twitterSearch\" data-search=\"{{>name}}\">       \n      <h3>{{>name}}</h3>     \n    </a>   \n  </li> \n</script>  \n```", "```js\n$(document).on('click', \"a.twitterSearch\", function(){     \n  //grab the search term off the link     \n  var searchTerm = $(this).attr(\"data-search\");          \n\n  //do a Twitter search based on that term     \n  $.ajax({       url:\"http://search.twitter.com/search.json?q=\"+escape(searchTerm),        \n   dataType:\"jsonp\",       \n   success: function(data){         \n     //create the pageID by stripping \n     //all non-alphanumeric data         \n     var pageId = searchTerm.replace(/[^a-zA-Z0-9]+/g,\"\");                  \n     //throw the pageId and original search term \n     //into the data that we'll be sending to JSRenderdata.pageId = pageId;\n     data.searchTerm = searchTerm;          \t      \n\n     //render the page and append it to the document body         $(document.body).append($(\"#twitterSearchPageTemplate\")\n       .render(data));                  \n\n     //set the page to remove itself once left          \n     $(\"#\"+pageId).attr( \"data-\" + $.mobile.ns \n       + \"external-page\", true )\n       .one( 'pagecreate', $.mobile._bindPageRemove );                  \n     //switch to the new page          \n     $.mobile.changePage(\"#\"+data.pageId);   \n    }\n  })\n  .error(function(jqXHR, textStatus, errorThrown){\n    //If anything goes wrong, at least we'll know.           \n    alert(textStatus+\" - \"+errorThrown);     \n  });    \n});\n```", "```js\njQuery1720026425381423905492_1345774796765({\n    \"completed_in\": 0.02,\n    \"max_id\": 238829616129777665,\n    \"max_id_str\": \"238829616129777665\",\n    \"next_page\": \"?page=2&max_id=238829616129777665&q=%23ThingsISayTooMuch\",\n    \"page\": 1,\n    \"query\": \"%23ThingsISayToMuch\",\n    \"refresh_url\": \"?since_id=238829616129777665&q=%23ThingsISay\nTooMuch\",\n    \"results\": [\n        {\n            \"created_at\": \"Fri, 24 Aug 2012 02:46:24 +0000\",\n            \"from_user\": \"MichelleEspra\",\n            \"from_user_id\": 183194730,\n            \"from_user_id_str\": \"183194730\",\n            \"from_user_name\": \"Michelle Espranita\",\n            \"geo\": null,\n            \"id\": 238829583808483328,\n            \"id_str\": \"238829583808483328\",\n            \"iso_language_code\": \"en\",\n            \"metadata\": {\n                \"result_type\": \"recent\"\n            },\n            \"profile_image_url\": \"http:\\/\\/a0.twimg.com\\/profile_images\\/2315127236\\/Photo_20on_202012-03-03_20at_2001.39_20_232_normal.jpg\",\n            \"profile_image_url_https\": \"https:\\/\\/si0.twimg.com\\/profile_images\\/2315127236\\/Photo_20on_202012-03-03_20at_2001.39_20_232_normal.jpg\",\n            \"source\": \"&lt;a href=&quot;http:\\/\\/twitter.com\\/&quot;&gt;web&lt;\\/a&gt;\",\n            \"text\": \"RT @MuchOfficial: @MichelleEspra I'd be the aforementioned Much! #ThingsISayTooMuch\",\n            \"to_user\": null,\n            \"to_user_id\": 0,\n            \"to_user_id_str\": \"0\",\n            \"to_user_name\": null,\n            \"in_reply_to_status_id\": 238518389595840512,\n            \"in_reply_to_status_id_str\": \"238518389595840512\"\n        }\n\n}\n```", "```js\n<script id=\"twitterSearchPageTemplate\" type=\"text/x-jsrender\"> \n    <div id=\"{{>pageId}}\" data-role=\"page\" data-add-back-btn=\"true\">     \n      <div data-role=\"header\">\n        <h1>{{>searchTerm}}</h1>\n      </div>     \n      <div data-role=\"content\">\n        <ul id=\"results\" data-role=\"listview\" data-dividertheme=\"b\">\n          {{for results}}           \n            <li class=\"twitterItem\">             \n            <a href=\"http://twitter.com/{{>from_user}}\">   \n              <img src=\"img/{{>profile_image_url}}\" alt=\"{{>from_user_name}}\" class=\"ui-shadow ui-corner-all\" /> \n              <h3>{{>from_user_name}} \n                <span class=\"handle\">\n                  (@{{>from_user}})<br/>\n                  {{>location}} \n                    {{if geo}}\n                      {{>geo}}\n                    {{/if}}\n                </span>\n              </h3>               \n              <p>{{>text}}</p>             \n            </a>           \n          </li>         \n        {{/for}}       \n      </ul>     \n    </div>   \n  </div> \n</script> \n```", "```js\n    $.mobile.changePage(\"#\"+data.pageId);\n    ```", "```js\n    var $newPage = $(\"#\"+data.pageId);     \n    $.mobile.changePage($newPage);\n    ```", "```js\n$(\"#\"+pageId).attr( \"data-\" + $.mobile.ns + \"external-page\", true ).one( 'pagecreate', $.mobile._bindPageRemove );\n```", "```js\n<?PHP \n\n//based on original example fromâ€¦\n//http://www.jonasjohn.de/snippets/php/curl-example.htm\n\n//is cURL installed yet? \nif (!function_exists('curl_init')){     \n  die('Sorry cURL is not installed!'); \n}  \n\n// OK cool. Then, let's create a new cURL resource handle \n$ch = curl_init();  \n\n// Now set some options (most are optional)  \n// Set URL to download \ncurl_setopt($ch, CURLOPT_URL, \"http://feeds.arstechnica.com/arstechnica/index?format=xml\");  \n\n// Set a referer \ncurl_setopt($ch, CURLOPT_REFERER, \"http://bookexample/chapter5\");  \n\n// User agent \ncurl_setopt($ch, CURLOPT_USERAGENT, \"BookExampleCurl/1.0\");  \n\n// Include header in result? (0 = yes, 1 = no) \ncurl_setopt($ch, CURLOPT_HEADER, 0);  \n\n// Should cURL return or print out the data? \n// (true = return, false = print) \ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);  \n\n// Timeout in seconds \ncurl_setopt($ch, CURLOPT_TIMEOUT, 10);  \n\n// Download the given URL, and return output \n$output = curl_exec($ch);  \n\n// Close the cURL resource, and free system resources curl_close($ch);  \n\necho $output; \n?>\n```", "```js\n<div data-role=\"header\">\n  <h1>News</h1>\n</div>     \n<div data-role=\"footer\"> \n <div data-role=\"navbar\"> \n <ul> \n <li><a id=\"twitter\" href=\"#\" class=\"ui-btn-active\">Twitter</a></li> \n <li><a id=\"ars\" href=\"#\">Feed</a></li> \n </ul> \n </div> \n</div>\n<div data-role=\"content\">\t         \n  <ul id=\"results\" data-role=\"listview\" data-dividertheme=\"b\"></ul>   \n</div> \n```", "```js\nfunction loadArs(){\n  //scroll back up to the top     \n  $.mobile.silentScroll(0);          \n\n  //Go get the Ars Technica feed content     \n  $.ajax({       \n    url:\"ars.php\",        \n    dataType:\"xml\",       \n    success: function(data, textStatus, jqXHR) {         \n\n      //Store the response for later use           \n      localStorage.setItem(\"ars\", jqXHR.responseText);            \n      //prepare the content for use         \n      var $feed = $(data);                  \n\n      //prepare a list divider with the title of the feed.\tvar listView = \"<li data-role='list-divider'>\"+$feed.find(\"channel>title\").text()+\"</li>\";                  \n     //loop through every feed item and \n     //create a listview element.          \n      $feed.find(\"channel>item\").each(function(index){             var $item = $(this);           \n        listView += \"<li><a href='javascript://' \"\n          +\"data-storyIndex='\"+index\n          +\"' class='arsFeed'><h3>\"\n          +$item.find(\"title\").text()\n          +\"</h3><p>\"+$item.find(\"pubDate\").text()\n          +\"</p></a></li>\";         \n      });                  \n\n      //put the new listview in the main display          \n      $(\"#results\").html(listView); \n\n      //refresh the listview so it looks right         \n      $(\"#results\").listview(\"refresh\");   \n\n     //place hooks on the newly created links         \n      //so they trigger the display of the         \n      //story when clicked         \n      $(\"#results a.arsFeed\").click(function(){         \n\n        //get the feed content back out of storage                var arsData = localStorage.getItem(\"ars\");                 \n        //figure out which story was clicked and       \n        //pull that story's content from the item             var storyIndex = $(this).attr(\"data-storyIndex\");\n        var $item =   \n          $(arsData).find(\"channel>item:eq(\"+storyIndex+\")\");                     \n        //create a new page with the story content                var storyPage = \"<div id='ars\"+storyIndex+\"' \"\n          +\"data-role='page' data-add-back-btn='true'>\"\n          +\"<div data-role='header'><h1>Ars Technica</h1>\"\n          +\"</div><div data-role='content'><h2>\"\n          +$item.find('title').text()+\"</h2>\"\n          +$item.find('content\\\\:encoded').html()\n          +\"</div></div>\";                      \n\n        //append the story page to the body \t        \n        $(\"body\").append(storyPage);                   \n        //find all the images in the newly  \t        \n        //created page.          \n        $(\"#ars\"+storyIndex+\" img\").each(function(index, element) {                         \n          var $img = $(element);                         \n          //figure out its currentWidth             \n          var currentWidth = Number($img.attr(\"width\"));                          \n          //if it has a width and it's large             \n          if(!isNaN(currentWidth) && currentWidth > 300){              \n            //remove the explicit width and height                  $img.removeAttr(\"width\").removeAttr(\"height\");               \n            //make the image scale to the width                     //of it's container but never to be                      //larger than its original size                          \n            $img.css({\"max-width\":currentWidth\n              +\"px\",\"width\":\"100%\"});             \n          }\n        });\n\n        //switch to the new page             \n        $.mobile.changePage(\"#ars\"+storyIndex);        \n      });\n    }\n  });   \n}\n\n$(\"#ars\").click(loadArs); \n```", "```js\n<!DOCTYPE html>  \n<html>  \n<head>   \n  <title>JSON Test</title>  \n</head>    \n<body>    \n<script type=\"text/javascript\">   \n\n  var myFeedList = {     \n    \"lastUpdated\":\"whenever\",     \n    \"feeds\":[        \n    {         \n       \"name\":\"ars\",         \n    \"url\":\"http://feeds.arstechnica.com/arstechnica/index?format=xml\" \t    \n    },       \n    {       \n      \"name\":\"rbds\",            \n      \"url\":\"http://roughlybrilliant.com/rss.xml\"       \n    }     \n    ]   \n  }     \n\nmyFeedList.lastUpdated = new Date(); \n\nlocalStorage.feedList = JSON.stringify(myFeedList);      \n\nvar myFeedListRetrieved = JSON.parse(localStorage.feedList);      \nalert(myFeedListRetrieved.lastUpdated); \n</script>  \n</body> \n</html>\n```", "```js\nfunction compareDates(a,b) {     \n  var aPubDate = Date.parse(a.publishedDate);     \n  var bPubDate = Date.parse(b.publishedDate);     \n  if ( aPubDate < bPubDate) return 1;     \n  if (aPubDate > bPubDate)  return -1;     \n  return 0;   \n}\n```", "```js\nvar allFeeds = {   \n\n  //all the feeds we want to pull in \t\n  \"sources\":[       \n\"http://feeds.arstechnica.com/arstechnica/index?format=xml\", \n\"http://rss.slashdot.org/Slashdot/slashdot\",       \n\"http://www.theregister.co.uk/headlines.atom\"     \n],   \n\n  //How many of the feeds have responded?  Once all have \n  //responded, we'll finish our processing.  \n  \"sourcesReporting\":0,   \n\n  //This is where we will store the returned stories.\t\n  \"entries\":[]   \n}; \n```", "```js\nfunction assimilateFeed(data){   \n\n  //Mark another feed as having reported back  \n  allFeeds.sourcesReporting++; \n\n  //Grab the title of this feed    \n  var feedTitle = data.responseData.feed.title; \n\n  //Loop through every entry returned and add the feed title\n  //as the source for the story\t\t\n  for(x = 0; x < data.responseData.feed.entries.length; \n    data.responseData.feed.entries[x++].source=feedTitle); \n\n  //Join this field's entries with whatever entries might have \n  //already been loaded\n  allFeeds.entries = allFeeds.entries.concat(data.responseData.feed.entries); \n\n  //If all the feeds have reported back, it's time to process\n  if(allFeeds.sourcesReporting == allFeeds.sources.length){ \n\n    //Sort all the stories by date\n    allFeeds.entries.sort(compareDates);   \n\n   //Take the results that have now all been combined and\n    //sorted by date and use jsRender \n    $(\"#results\").html($(\"#googleFeedTemplate\")\n      .render(allFeeds)).listview(\"refresh\");         \n  }   \n} \n```", "```js\n<script type=\"text/x-jsrender\" id=\"googleFeedTemplate\">   \n  {{for entries}}     \n    <li>       \n      <a href=\"{{:link}}\" target=\"_blank\">         \n        <h3>{{:title}}</h3>          \n        <p><strong>{{:source}}</strong> - {{:publishedDate}}\n          <br/>{{:contentSnippet}}\n        </p>\n      </a>\n    </li>   \n  {{/for}} \n</script>\n```", "```js\n$(\"#feeds\").click( function() {  \n\n  //Reset the number of received feeds\n  allFeeds.sourcesReporting = 0;     \n\n  //Get back to the top of the page\n  $.mobile.silentScroll(0);     \n\n  //Loop through all the feeds\n  for(var x = 0; x < allFeeds.sources.length; x++){       \n    $.ajax({   \n\n//Call to Google's Feed API with the URL encoded      \nurl:\"https://ajax.googleapis.com/ajax/services/feed/load?v=1.0&output=json&q=\"+escape(allFeeds.sources[x]),          \n      dataType:\"jsonp\",         \n      success:assimilateFeed       \n    });\n  }   \n});\n```"]