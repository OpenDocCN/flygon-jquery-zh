["```js\nvar screenWidth = $(window).width();\nvar screenHeight = $(window).height();\n```", "```js\n// .position() vs. .offset()\nvar myPosition = $(\"body > .container > .row > .col-md-4:last\").position();\nconsole.log(\"My Position = \" + JSON.stringify(myPosition));\nvar myOffset = $(\"body > .container > .row > .col-md-4:last\").offset();\nconsole.log(\"My Offset = \" + JSON.stringify(myOffset));\n```", "```js\n// .css(), retrieving a single property\nvar backgroundColor = $(\".jumbotron > .container > p > a\").css(\"background-color\");\nconsole.log(\"Background Color = \" + JSON.stringify(backgroundColor));\n// .css(), retrieving multiple properties in a single call\nvar colors = $(\".jumbotron > .container > p > a\").css([\"background-color\", \"color\"]);\nconsole.log(\"Colors = \" + JSON.stringify(colors));\n```", "```js\n// .css(), passing a property name and value, change the button to orange\n$(\".jumbotron > .container > p > a\").css(\"background-color\", \"orange\");\n```", "```js\n// .css(), passing in multiple properties as an object\nvar moreProperties =; { \"background-color\": \"pink\", \"color\": \"black\"};\n$(\"body > .container > .row > .col-md-4 .btn:first\").css(moreProperties);\n```", "```js\n// .css(), setting a random background color on each call\n$(\"body > .container > .row > .col-md-4 .btn:last\").css(\"background-color\", function (index) {\n   var r = Math.floor(Math.random() * 256),\n           g = Math.floor(Math.random() * 256),\n           b = Math.floor(Math.random() * 256),\n           rgb = \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n   return rgb;\n});\n```", "```js\nWhen you only have one or two properties that you are changing in one element, you can get away with directly tweaking the CSS properties of the element. But a better and faster way is to put all of the changes into CSS classes and add or remove a class to/from the elements. jQuery has four methods that will help you manipulate the classes assigned to an element.\n```", "```js\n// changes each of the buttons a different color\n$(\"body > .container > .row > .col-md-4 .btn\").addClass(function (index) {\n   var styles = [\"info\", \"warning\", \"danger\"],\n           ndx = index % 3,\n           newClass = \"btn-\" + styles[ndx];\n\n   return newClass;\n});\n```", "```js\n// does any of the divs have the .bosco class?\nvar hasBosco = $(\"body > .container > .row > .col-md-4\").hasClass(\"bosco\");\nconsole.log(\"has bosco: \" + hasBosco);\n```", "```js\n// remove the info class\nvar shouldKeepClass = false;\n$(\"body > .container > .row > .col-md-4 .btn\").toggleClass(\"btn-info\", shouldKeepClass);\n```", "```js\n<input id=\"myCheckbox\" type=\"checkbox\" checked=\"checked\" />\n```", "```js\n// setting an element attribute with an attribute and value\n$(\"body > .container > .row > .col-md-4 .btn\").attr(\"disabled\", \"disabled\");\n// setting an element attribute with an object\n$(\"body > .container > .row > .col-md-4 .btn\").attr({\"disabled\": \"disabled\"});\n// setting an element attribute with a function\n$(\"body > .container > .row > .col-md-4 .btn\").attr(\"name\", function(index, attribute){\n   return attribute + \"_\" + index;\n});\n```", "```js\n// retrieving data from an input tag with .val()\nvar firstName = $('#firstName').val();\nconsole.log(\"First name:\" + firstName);\nvar lastName = $('#lastName').val();\nconsole.log(\"Last name:\" + lastName);\n```", "```js\n// .val() reading the value of a multiple select\nvar options = $('#vehicleOptions').val();\n$.each(options, function (index, value) {\n   console.log(\"item #\" + index + \" = \" + value);\n});\n```", "```js\n// using .val() to set the last name field\n$('#lastName').val(\"Robert\");\n```", "```js\n// using .val() to select multiple new options\n$('#vehicleOptions').val([\"powerSeats\", \"moonRoof\"]);\n```", "```js\n// .html() getting some markup\nvar html = $('#testClass').html();\nconsole.log(\"HTML: \" + html);\n```", "```js\n// .html() setting markup\n$('#testClass').html(\"<div><h2>Hello there</h2></div>\");\n```", "```js\n// .text() getting text values\nvar comboText = $(\"select\").text();\nconsole.log(comboText);\n```", "```js\n// .text() trying to send HTML\n$('#testClass').text(\"<div><h2>Hello there</h2></div>\");\n```", "```js\n// .append()\n$(\"body > .container > .row > .col-md-4\").append(\"<div><h2>Hello</h2></div>\");\n// .appendTo()\n$(\"<div><h2>Goodbye</h2></div>\").appendTo(\"body > .container > .row > .col-md-4\");\n```", "```js\n// .prepend()\n$(\"body > .container > .row > .col-md-4\").prepend(\"<div><h2>Hello</h2></div>\");\n// .prependTo()\n$(\"<div><h2>Goodbye</h2></div>\").prependTo(\"body > .container > .row > .col-md-4\");\n```", "```js\n// .after()\n$(\"select\").after(\"<h2>Hello</h2>\");\n// .insertAfter()\n$(\"<h2>Goodbye</h2>\").insertAfter(\"select\");\n```", "```js\n// .before()\n$(\"select\").before(\"<h2>Hello</h2>\");\n// .insertBefore()\n$(\"<h2>Goodbye</h2>\").insertBefore(\"select\");\n```", "```js\n// .wrap() surrounds the button with a border\n$(\"a\").wrap(\"<div style='border: 3px dotted black;'></div>\");\n```", "```js\n// wrapInner() surrounds the button's text with a border\n$(\"a\").wrapInner(\"<div style='border: 3px dotted black;'></div>\");\n```", "```js\n// wrapAll() everything\n$(\"select\").wrapAll(\"<div style='border: 3px dotted black;'></div>\");\n```", "```js\n// .unwrap() removes the divs we added earlier\n$(\"a\").unwrap();\n```", "```js\n// .remove() deletes the a tags from the page\n$(\"a\").remove();\n```", "```js\n// .empty() keeps the a tags but deletes their text\n$(\"a\").empty();\n```", "```js\n// .detach() deletes the a tags from the page and returns them to the caller\nvar myButtons = $(\"a\").detach();\n$('hr:last').append(myButtons);\n```", "```js\n// .replaceWith() replacing the selects with divs\n$('select').replaceWith(\"<div>Replaced</div>\");\n```", "```js\n// .clone() makes a copy of the form then we insert the copy \n$('.myForm').clone().insertBefore('.myForm');\n```"]