["```js\n    <!DOCTYPE html>\n    <html >\n    <head>\n       <title>Chapter 5 :: Recipe 1</title>\n       <link type=\"text/css\" media=\"screen\" rel=\"stylesheet\" href=\"styles.css\" />\n       <script src=\"img/jquery.min.js\"></script>\n       <script src=\"img/validation.js\"></script>\n    </head>\n    <body>\n       <form id=\"webForm\" method=\"POST\">\n          <div class=\"header\">\n             <h1>Register</h1>\n          </div>\n          <div class=\"input-frame\">\n             <label for=\"firstName\">First Name:</label>\n             <input name=\"firstName\" id=\"firstName\" type=\"text\" class=\"required\" />\n          </div>\n          <div class=\"input-frame\">\n             <label for=\"lastName\">Last Name:</label>\n             <input name=\"lastName\" id=\"lastName\" type=\"text\" class=\"required\" />\n          </div>\n          <div class=\"input-frame\">\n             <label for=\"email\">Email:</label>\n             <input name=\"email\" id=\"email\" type=\"text\" class=\"required email\" />\n          </div>\n          <div class=\"input-frame\">\n             <label for=\"number\">Telephone:</label>\n             <input name=\"number\" id=\"number\" type=\"text\" class=\"number\" />\n          </div>\n          <div class=\"input-frame\">\n             <label for=\"dob\">Date of Birth:</label>\n             <input name=\"dob\" id=\"dob\" type=\"text\" class=\"required date\" placeholder=\"DD/MM/YYYY\"/>\n          </div>\n          <div class=\"input-frame\">\n             <label for=\"creditCard\">Credit Card #:</label>\n             <input name=\"creditCard\" id=\"creditCard\" type=\"text\" class=\"required credit-card\" />\n          </div>\n          <div class=\"input-frame\">\n             <label for=\"password\">Password:</label>\n             <input name=\"password\" id=\"password\" type=\"password\" class=\"required\" />\n          </div>\n          <div class=\"input-frame\">\n             <label for=\"confirmPassword\">Confirm Password:</label>\n                <input name=\"confirmPassword\" id=\"confirmPassword\" type=\"password\" class=\"required\" />\n          </div>\n          <div class=\"actions\">\n             <button class=\"submit-btn\">Submit</button>\n          </div>\n       </form>\n    </body>\n    </html>\n    ```", "```js\n    @import url(http://fonts.googleapis.com/css?family=Ubuntu);\n    body {\n       background-color: #FFF;\n       font-family: 'Ubuntu', sans-serif;\n    }\n    form {\n       width: 500px;\n       padding: 20px;\n       background-color: #333;\n       border-radius: 5px;\n       margin: 10px auto auto auto;\n       color: #747474;\n       border: solid 2px #000;\n    }\n    form label {\n       font-size: 14px;\n       line-height: 30px;\n       width: 27%;\n       display: inline-block;\n       text-align: right;\n    }\n    .input-frame {\n       clear: both;\n       margin-bottom: 25px;\n       position: relative;\n    }\n    form input {\n       height: 30px;\n       width: 330px;\n       margin-left: 10px;\n       background-color: #191919;\n       border: solid 1px #404040;\n       padding-left: 10px;\n       color: #DB7400;\n    }\n    form input:hover {\n       background-color: #262626;\n    }\n    form input:focus {\n       border-color: #DB7400;\n    }\n    form .header {\n       margin: -20px -20px 25px -20px;\n       padding: 10px 10px 10px 20px;\n       position: relative;\n       background-color: #DB7400;\n       border-top-left-radius: 4px;\n       border-top-right-radius: 4px;\n    }\n    form .header h1 {\n       line-height: 50px;\n       margin: 0px;\n       padding: 0px;\n       color: #FFF;\n       font-weight: normal;\n    }\n    .actions {\n       text-align: right;\n    }\n    .submit-btn {\n       background-color: #DB7400;\n       border: solid 1px #000;\n       border-radius: 5px;\n       color: #FFF;\n       padding: 10px 20px 10px 20px;\n       text-decoration: none;\n       cursor: pointer;\n    }\n    .error input {\n       border-color: red;\n    }\n    .error-data {\n       color: red;\n       font-size: 11px;\n       position: absolute;\n       bottom: -15px;\n       left: 30%;\n    }\n    ```", "```js\n    $(function(){\n       $('.submit-btn').click(function(event){\n          //Prevent form submission\n          event.preventDefault();\n          var inputs = $('input');\n          var isError = false;\n          //Remove old errors\n          $('.input-frame').removeClass('error');\n          $('.error-data').remove();\n          for (var i = 0; i < inputs.length; i++) {\n             var input = inputs[i];\n             if ($(input).hasClass('required') && !validateRequired($(input).val())) {\n                addErrorData($(input), \"This is a required field\");\n                isError = true;\n             }\n\n          }\n          if (isError === false) {\n             //No errors, submit the form\n             $('#webForm').submit();\n          }\n       });\n    });\n\n    function validateRequired(value) {\n       if (value == \"\") return false;\n       return true;\n    }\n\n    function addErrorData(element, error) {\n       element.parent().addClass(\"error\");\n       element.after(\"<div class='error-data'>\" + error + \"</div>\");\n    }\n    ```", "```js\n$(function(){\n    $('.submit-btn').click(function(event){\n        //Prevent form submission\n        event.preventDefault();\n\n    });\n});\n```", "```js\nvar inputs = $('input');\nvar isError = false;\n```", "```js\nfor (var i = 0; i < inputs.length; i++) {\nvar input = inputs[i];\n}\n```", "```js\n$(input).parent().removeClass('error');\n$(input).next('.error-data').remove();\n```", "```js\nif ($(input).hasClass('required') && !validateRequired($(input).val())) {\naddErrorData($(input), \"This is a required field\");\n   isError = true;\n}\n```", "```js\nif (isError === false) {\n   //No errors, submit the form\n   $('#webForm').submit();\n}\n```", "```js\nfunction validateRequired(value) {\n    if (value == \"\") return false;\n    return true;\n}\n```", "```js\nfunction validateRequired(value) {\n   if (value == \"\") return false;\n   return true;\n}\nfunction addErrorData(element, error) {\n   element.parent().addClass(\"error\");\n   element.after(\"<div class='error-data'>\" + error + \"</div>\");\n}\n```", "```js\n    $(function(){\n       $('.submit-btn').click(function(event){\n          //Prevent form submission\n          event.preventDefault();\n          var inputs = $('input');\n          var isError = false;\n          //Remove old errors\n          $('.input-frame').removeClass('error');\n          $('.error-data').remove();\n          for (var i = 0; i < inputs.length; i++) {\n             var input = inputs[i];\n\n             if ($(input).hasClass('required') && !validateRequired($(input).val())) {\n                   addErrorData($(input), \"This is a required field\");\n                   isError = true;\n                }\n    /* Code for this recipe */\n             if ($(input).hasClass('number') && !validateNumber($(input).val())) {\n                   addErrorData($(input), \"This field can only contain numbers\");\n                   isError = true;\n                }\n    /* --- */\n\n          }\n          if (isError === false) {\n             //No errors, submit the form\n             $('#webForm').submit();\n          }\n       });\n    });\n\n    function validateRequired(value) {\n       if (value == \"\") return false;\n       return true;\n    }\n\n    /* Code for this recipe */\n    function validateNumber(value) {\n       if (value != \"\") {\n          return !isNaN(parseInt(value, 10)) && isFinite(value);\n          //isFinite, in case letter is on the end\n       }\n       return true;\n    }\n    /* --- */\n    function addErrorData(element, error) {\n       element.parent().addClass(\"error\");\n       element.after(\"<div class='error-data'>\" + error + \"</div>\");\n    } \n    ```", "```js\nif ($(input).hasClass('number') && !validateNumber($(input).val())) {\n   addErrorData($(input), \"This field can only contain numbers\");\n   isError = true;\n}\n```", "```js\nfunction validateNumber(value) {\n   if (value != \"\") {\n      return !isNaN(parseInt(value, 10)) && isFinite(value);\n      //isFinite, in case letter is on the end\n   }\n   return true;\n}\n```", "```js\n    $(function(){\n       $('.submit-btn').click(function(event){\n          //Prevent form submission\n          event.preventDefault();\n          var inputs = $('input');\n          var isError = false;\n          for (var i = 0; i < inputs.length; i++) {\n\n    // -- JavaScript from previous two recipes hidden            \n\n             if ($(input).hasClass('credit-card') && !validateCreditCard($(input).val())) {\n                addErrorData($(input), \"Invalid credit card number\");\n                isError = true;\n             }\n\n          }\n    // -- JavaScript from previous two recipes hidden\n       });\n    });\n\n    // -- JavaScript from previous two recipes hidden\n\n    function validateCreditCard(value) {\n       if (value != \"\") {\n          return /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/.test(value);\n       }\n       return true;\n    }\n    // -- JavaScript from previous two recipes hidden\n    } \n    ```", "```js\nif ($(input).hasClass('credit-card') && !validateCreditCard($(input).val())) {\n   addErrorData($(input), \"Invalid credit card number\");\n   isError = true;\n}\n```", "```js\nfunction validateCreditCard(value) {\n   if (value != \"\") {\n      return /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/.test(value);\n   }\n   return true;\n}\n```", "```js\n    $(function(){\n       $('.submit-btn').click(function(event){\n\n    // -- JavaScript from previous three recipes hidden\n\n          for (var i = 0; i < inputs.length; i++) {\n\n    // -- JavaScript from previous three recipes hidden\n\n             if ($(input).hasClass('date') && !validateDate($(input).val())) {\n                addErrorData($(input), \"Invalid date provided\");\n                isError = true;\n             }\n\n             // -- JavaScript from previous three recipes hidden\n\n          }\n          // -- JavaScript from previous three recipes hidden    });\n    });\n\n    // -- JavaScript from previous three recipes hidden\n\n    function validateDate(value) {\n       if (value != \"\") {\n          if (/^\\d{2}([.\\/-])\\d{2}\\1\\d{4}$/.test(value)) {\n             // Remove leading zeros\n             value = value.replace(/0*(\\d*)/gi,\"$1\");\n             var dateValues = value.split(/[\\.|\\/|-]/);\n             // Correct the month value as month index starts at 0 now 1 (e.g. 0 = Jan, 1 = Feb)\n             dateValues[1]--;\n             var date = new Date(dateValues[2], dateValues[1], dateValues[0]);\n             if (\n                date.getDate() == dateValues[0] && date.getMonth() == dateValues[1] &&\n                date.getFullYear() == dateValues[2]\n                ) {\n                return true;\n             }\n          }\n          return false;\n       } else {\n          return true;\n       }\n    }\n    // -- JavaScript from previous three recipes hidden\n    ```", "```js\nif (/^\\d{2}([.\\/-])\\d{2}\\1\\d{4}$/.test(value)) {\n```", "```js\nvalue = value.replace(/0*(\\d*)/gi,\"$1\");\n```", "```js\nvar dateValues = value.split(/[\\.|\\/|-]/);\n```", "```js\ndateValues[1]--;\n```", "```js\nvar date = new Date(dateValues[2], dateValues[1], dateValues[0]);\nif (\n   date.getDate() == dateValues[0] &&\n   date.getMonth() == dateValues[1] &&\n   date.getFullYear() == dateValues[2]\n) {\n   return true;\n}\n```", "```js\n    if ($(input).hasClass('email') && !validateEmail($($(input)).val())) {\n       addErrorData($(input), \"Invalid email address provided\");\n       isError = true;\n    }\n    ```", "```js\n    function validateEmail(value) {\n       if (value != \"\") {\n          return /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/i.test(value);\n       }\n       return true;\n    }\n    ```", "```js\n    // --- Hidden JavaScript from previous recipes\n\n    function doValidation(input) {\n       //Remove old errors\n       $(input).parent().removeClass('error');\n       $(input).next('.error-data').remove();\n       if ($(input).hasClass('required') && !validateRequired($(input).val())) {\n          addErrorData($(input), \"This is a required field\");\n       }\n       if ($(input).hasClass('email') && !validateEmail($($(input)).val())) {\n          addErrorData($(input), \"Invalid email address provided\");\n       }\n       if ($(input).hasClass('number') && !validateNumber($(input).val())) {\n          addErrorData($(input), \"This field can only contain numbers\");\n       }\n       if ($(input).hasClass('date') && !validateDate($(input).val())) {\n          addErrorData($(input), \"Invalid date provided\");\n       }\n       if ($(input).hasClass('credit-card') && !validateCreditCard($(input).val())) {\n          addErrorData($(input), \"Invalid credit card number\");\n       }\n    }\n\n    // --- Hidden JavaScript\n    ```", "```js\n    for (var i = 0; i < inputs.length; i++) {\n       var input = inputs[i];\n       doValidation(input);\n    }\n    ```", "```js\n    if ($('.error-data').length == 0) {\n       //No errors, submit the form\n       $('#webForm').submit();\n    }\n    ```", "```js\n    $('input').on(\"keyup\", function(){\n       doValidation($(this));\n    });\n    ```", "```js\nfor (var i = 0; i < inputs.length; i++) {\n   var input = inputs[i];\n   doValidation(input);\n}\n```", "```js\nif ($('.error-data').length == 0) {\n   //No errors, submit the form\n   $('#webForm').submit();\n}\n```", "```js\n$('input').on(\"keyup\", function(){\n   doValidation($(this));\n});\n```", "```js\n    // --- ADDITIONAL HTML HIDDEN\n    <div class=\"input-frame\">\n    <label for=\"password\">Password:</label>\n    <input name=\"password\" id=\"password\" type=\"password\" class=\"required password\" />\n    <div class=\"password-strength\">\n       <div class=\"inner\"></div>\n       <div class=\"text\"></div>\n    </div>\n    </div>\n    <div class=\"input-frame\">\n    <label for=\"confirmPassword\">Confirm Password:</label>\n    <input name=\"confirmPassword\" id=\"confirmPassword\" type=\"password\" class=\"confirm-password\" />\n    </div>\n    // --- ADDITIONAL HTML HIDDEN\n    ```", "```js\n    .password-strength {\n       position: absolute;\n       width: 150px;\n       height: 20px;\n       left: 69%;\n       top: 35px;\n       line-height: 20px;\n       border: solid 1px #191919;\n    }\n    .password-strength .inner {\n       position: absolute;\n       left: 0;\n       top: 0;\n    }\n    .password-strength .text {\n       font-size: 11px;\n       color: #FFF;\n       text-align: center;\n       position: relative;\n       z-index: 10;\n    }\n    ```", "```js\n    // --- HIDDEN JAVASCRIPT\n    function validatePasswords(value) {\n       var password = $('.password').val();\n       if (value == \"\") {\n          return \"Both passwords are required\";\n       } else if (value != password) {\n          return \"Passwords do not match\";\n       }\n       return true;\n    }\n    ```", "```js\n    function doValidation(input) {\n    // --- HIDDEN JAVASCRIPT\n    if ($(input).hasClass('confirm-password')) {\n       var result = validatePasswords($(input).val());\n          if (result != true) {\n             addErrorData($(input), result);\n          }\n       }\n    }\n    ```", "```js\n    $('.password').on(\"keyup\", function(){\n       var score = 0;\n       var password = $('.password');\n       var passwordAgain = $('.confirm-password');\n       //Remove any old errors for the password fields\n       password.parent().removeClass('error');\n       password.next('.error-data').remove();\n       passwordAgain.parent().removeClass('error');\n       passwordAgain.next('.error-data').remove();\n       //Password is greater than 6 characters\n       if (password.val().length > 6) {\n          score++;\n       }\n       //Password is greater than 8 characters\n       if (password.val().length > 8) {\n          score++;\n       }\n       //Password has both uppercase and lowercase characters\n       if (/(?=.*[A-Z])(?=.*[a-z])/.test(password.val())) {\n          score++;\n       }\n       //Password has at least one number\n       if (/(?=.*[0-9])/.test(password.val())) {\n          score++;\n       }\n       //Password has at least one symbol (@$!&^) character\n       if (/@|\\$|\\!|&|\\^/.test(password.val())) {\n          score++;\n       }\n       var fill = (100 - ((score * 2) * 10));\n       var percent = (100 - fill);\n       var level,\n       colour;\n       switch (score) {\n       case 0:\n       case 1:\n       level = \"Weak\";\n       colour = \"green\";\n       break;\n       case 2:\n       case 3:\n       level = \"Medium\";\n       colour = \"orange\";\n       break;\n       case 4:\n       level = \"Strong\";\n       colour = \"red\";\n       break;\n       case 5:\n       level = \"Excellent\";\n       colour = \"purple\";\n       break;\n       }\n       $('.password-strength .inner').css('right', fill + \"%\").css('background-color', colour);\n       $('.password-strength .text').html(level + \" (\" + percent + \"%)\");\n       });\n    ```", "```js\n$('.password').on(\"keyup\", function(){\n});\n```", "```js\n//Password is greater than 6 characters\nif (password.val().length > 6) {\n   score++;\n}\n//Password is greater than 8 characters\nif (password.val().length > 8) {\n   score++;\n}\n```", "```js\n//Password has both uppercase and lowercase characters\nif (/(?=.*[A-Z])(?=.*[a-z])/.test(password.val())) {\n   score++;\n}\n//Password has at least one number\nif (/(?=.*[0-9])/.test(password.val())) {\n   score++;\n}\n//Password has at least one symbol (@$!&^) character\nif (/@|\\$|\\!|&|\\^/.test(password.val())) {\n   score++;\n}\n```", "```js\nvar fill = (100 - ((score * 2) * 10));\nvar percent = (100 - fill);\n```", "```js\nvar level,\ncolour;\nswitch (score) {\ncase 0:\ncase 1:\n   level = \"Weak\";\n   colour = \"green\";\nbreak;\ncase 2:\ncase 3:\n   level = \"Medium\";\n   colour = \"orange\";\n   break;\ncase 4:\n   level = \"Strong\";\n   colour = \"red\";\nbreak;\ncase 5:\n   level = \"Excellent\";\n   colour = \"purple\";\nbreak;\n}\n```", "```js\n$('.password-strength .inner').css('right', fill + \"%\").css('background-color', colour);\n$('.password-strength .text').html(level + \" (\" + percent + \"%)\");\n```", "```js\n    <!-- HIDDEN HTML CODE -->\n    <div class=\"input-frame\">\n       <label>Confirm Password:</label>\n       <input type=\"password\" class=\"confirm-password\" />\n    </div>\n    <div class=\"input-frame\">\n       <label>Enter the number <span class=\"anti-spam-number\"></span>:</label>\n       <input type=\"text\" class=\"required anti-spam-input\" />\n    </div>\n    <!-- HIDDEN HTML CODE -->\n    ```", "```js\n    var spamNumber = Math.floor(Math.random() * (100 - 1 + 1)) + 1;\n    $(function(){\n    // --- HIDDEN JAVASCRIPT CODE\n    ```", "```js\n    // --- HIDDEN JAVASCRIPT CODE\n    $('.anti-spam-number').html(spamNumber);\n    });\n    ```", "```js\n    if ($(input).hasClass('anti-spam-input') && !validateAntiSpam($(input).val())) {\n       addErrorData($(input), \"Incorrect Anti-Spam answer\");\n    }\n    ```", "```js\n    // --- HIDDEN JAVASCRIPT CODE\n    function validateAntiSpam(value) {\n       if (value != \"\") {\n          if (parseInt(value)!= spamNumber) return false;\n       }\n       return true;\n    }\n    ```", "```js\n$('.anti-spam-number').html(spamNumber);\n```", "```js\nfunction validateAntiSpam(value) {\n   if (value != \"\") {\n      if (parseInt(value)!= spamNumber) return false;\n   }\n   return true;\n}\n```", "```js\n    <!DOCTYPE html>\n    <html >\n    <head>\n       <title>Chapter 5 :: Recipe 7</title>\n       <link type=\"text/css\" media=\"screen\" rel=\"stylesheet\" href=\"recipe-9.css\" />\n       <script src=\"img/jquery.min.js\"></script>\n       <script src=\"img/recipe-9.js\"></script>\n    </head>\n    <body>\n    <form id=\"webForm\" method=\"POST\">\n       <div class=\"header\">\n          <h1>Register</h1>\n       </div>\n       <div class=\"input-frame\">\n          <label for=\"username\">Username:</label>\n          <input name=\"username\" id=\"username\" type=\"text\" class=\"username\" />\n       </div>\n       <div class=\"input-frame\">\n          <label for=\"password\">Password:</label>\n          <input name=\"password\" id=\"password\" type=\"text\" class=\"required\" />\n       </div>\n       <div class=\"actions\">\n          <button class=\"submit-btn\">Submit</button>\n       </div>\n    </form>\n    </body>\n    </html>\n    ```", "```js\n    @import url(http://fonts.googleapis.com/css?family=Ubuntu);\n    body {\n       background-color: #FFF;\n       font-family: 'Ubuntu', sans-serif;\n    }\n    form {\n       width: 500px;\n       margin: 10px auto auto auto;\n       padding: 20px;\n       background-color: #333;\n       border-radius: 5px;\n       color: #747474;\n       border: solid 2px #000;\n    }\n    form label {\n       font-size: 14px;\n       line-height: 30px;\n       padding-bottom: 8px;\n       width: 140px;\n       display: inline-block;\n       text-align: right;\n    }\n    .input-frame {\n       clear: both;\n       margin-bottom: 25px;\n       position: relative;\n    }\n    form input {\n       height: 30px;\n       width: 330px;\n       margin-left: 10px;\n       background-color: #191919;\n       border: solid 1px #404040;\n       padding-left: 10px;\n       color: #DB7400;\n    }\n    form input:hover {\n       background-color: #262626;\n    }\n    form input:focus {\n       border-color: #DB7400;\n    }\n    form .header {\n       margin: -20px -20px 25px -20px;\n       padding: 10px 10px 10px 20px;\n       position: relative;\n       background-color: #DB7400;\n       border-top-left-radius: 4px;\n       border-top-right-radius: 4px;\n    }\n    form .header h1 {\n       line-height: 50px;\n       margin: 0;\n       padding: 0;\n       color: #FFF;\n       font-weight: normal;\n    }\n    .actions {\n       text-align: right;\n    }\n    .submit-btn {\n       background-color: #DB7400;\n       border: solid 1px #000;\n       border-radius: 5px;\n       color: #FFF;\n       padding: 10px 20px 10px 20px;\n       text-decoration: none;\n       cursor: pointer;\n    }\n    ```", "```js\n    $(function(){\n        $('.username').on(\"keypress\", function(event){\n            //Get key press character code\n            var key = String.fromCharCode(event.which);\n            if (/[^a-zA-Z\\d\\s:]/.test(key)) {\n                event.preventDefault();\n                return false;\n            }\n        });\n    });\n    ```", "```js\nif (/[^a-zA-Z\\d\\s:]/.test(key)) {\n   event.preventDefault();\n   return false;\n}\n```"]