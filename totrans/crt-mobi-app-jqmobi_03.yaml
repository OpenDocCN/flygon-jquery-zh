- en: Chapter 3. Analytics, long forms, and frontend validation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Time for growth. Business is picking up and nothing says big business like massive
    forms, metrics, and customized experiences.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Google Static Maps
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Google Analytics
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Long and multi-page forms
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrating jQuery Validate
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Google Static Maps
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the last chapter, we completely geeked out on how to dynamically link directly
    into the native GPS systems of iOS and Android. Now, let's consider another approach.
    The client wanted the opportunity to show the user the street address, a map,
    and give them another chance to call for delivery. In this case, simply linking
    to the native GPS systems won't suffice. We can still trigger that if the user
    clicks on the address or the map, but as a step in between, we can inject a static
    map from Google ([https://developers.google.com/maps/documentation/staticmaps/](https://developers.google.com/maps/documentation/staticmaps/)).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: Is it as whiz-bang as bringing up the app directly to start the turn-by-turn
    directions? Nope, but it's a heck of a lot faster and may be all that the user
    needs. They may instantly recognize the location and decide that, yes actually,
    they would rather call instead. Remember to always approach things from the user's
    perspective. It's not always about doing the coolest thing we can.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s take a look at the drawing that was approved by the client:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: '![Google Static Maps](img/0069_03_00.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
- en: 'Let''s look at the code for this page which we''ll put into `/map.php`:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Take note of the use of the microformat ([http://microformats.org/](http://microformats.org/))
    used to mark up the address. This is not necessary but it is pretty standard since
    2007, and it''s a good way to give your information a little more semantic value.
    That means that not only can people read it, but even computers can read it and
    make sense of it. If you''d like to learn more about microformats, you can read
    this article from Smashing Magazine: [http://coding.smashingmagazine.com/2007/05/04/microformats-what-they-are-and-how-to-use-them/](http://coding.smashingmagazine.com/2007/05/04/microformats-what-they-are-and-how-to-use-them/)'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: Adding Google Analytics
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Every website should have analytics. If not, it's difficult to say how many
    people are hitting your site, if we're getting people through our conversion funnels,
    or what pages are causing people to leave our site.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s enhance the global JavaScript (`/js/global.js`) file to automatically
    log each page as it is shown. This is a very important distinction. In the desktop
    world, every analytics hit is based on the document ready event. That will not
    work for **jQuery Mobile** (**jQM**) because the first page in an Ajax based navigation
    system is the only one that ever triggers a page load event. In jQM, we need to
    trigger this on the `pageshow` event using the following code:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: By using an asynchronous call to pull in Google Analytics, we are allowing the
    user to proceed, even if tracking is non-functional or taking a while to load.
    Typically, a call to a JavaScript file will pause all further asset loading and
    JavaScript execution until the requested script has been fully loaded and executed.
    We really don't want to have our otherwise well-crafted, speedy, and functioning
    page held up because some ad network or analytics tracking is taking a while to
    respond.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: We pull the location to be tracked from the `data-url` attribute of the current
    page because you cannot reliably use the `document.location` function for your
    page hit tracking. jQM's Ajax based navigation leads to some very strange URLs
    in your tracking. The jQM team is working on that but it will be a while until
    the needed technology is present on all devices. Instead, just pull the URL to
    track from the `data-url` attribute of the jQM page. If you dynamically create
    your pages, this is where you would also put the custom name for your page for
    tracking purposes. If you're using multi-page templates, each page's ID will be
    tracked as the page view.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: 'We really haven''t done much analytics work yet, but let''s look at some of
    the insights we can already start to glean. Here is just a sample of the technology
    breakdowns:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: '![Adding Google Analytics](img/0069_03_01.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
- en: 'The following image shows a full report of the same view broken down a little
    further to show which devices are most poplar:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: '![Adding Google Analytics](img/0069_03_02.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
- en: Pay attention to the **Bounce Rate** column in the previous image on each platform
    as a whole. If one is significantly higher than the other, it could be an indicator
    that we need to look a little closer at our site on that device.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '![Adding Google Analytics](img/0069_03_03.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
- en: Making a mobile website is about much more than simply making it look pretty
    on mobile browsers. The best indicator of a well-tailored mobile site is that
    people are able to get in and find what they need quickly. That makes the Top
    Content report our new best friend.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: Unsurprisingly, most people who come to the site are hitting the menu as shown
    in the report in the previous image. However, the menu is nothing but a starting
    point. What are they most interested in within the menu? Specialty pizzas. It
    is this kind of an insight that can lead you to a successful first redesign. Perhaps,
    we should think about featuring the specialties on the homepage and save our users
    time.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: The bottom line is, without good analytics, you have no idea if you're building
    the right thing. The site, as designed right now, is making them go two clicks
    deep to see what's most cared about, or is it?
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: So far, we've only tracked page views. But, in the mobile word, that's not the
    whole picture. What about the links that dial the phone number but do not fire
    a page view? What about links that go off-site to Facebook or to mapping software,
    such as Google Maps? Those certainly count as further interactions but it would
    be nice to have numbers on all of these kinds of clicks too. We're already tracking
    page views differently, let's continue.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们只跟踪了页面浏览。但在移动世界中，这还不是全部的图片。那些拨打电话号码但不触发页面浏览的链接呢？那些转移到 Facebook 或到地图软件（如
    Google 地图）的链接呢？这些当然也算是进一步的互动，但希望也能对所有这些点击行为进行统计。我们已经以不同的方式跟踪页面浏览，让我们继续下去。
- en: 'Naturally, we want to track custom events and not have to write JavaScript
    for every event we want to track. Let''s make our links like this:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 自然地，我们希望跟踪自定义事件而不必为每个要跟踪的事件编写 JavaScript。让我们把我们的链接做成这样：
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then, let''s add a little more to the `pageinit` handler using the following
    code:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，让我们在 `pageinit` 处理程序中添加一些代码：
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'There is a lot more that can be done with analytics tracking such as custom
    event tracking, e-commerce campaign tracking, goals tracking, and so on. Now that
    you know the basics of how to tie Google Analytics into jQuery Mobile, you can
    continue to explore more tracking as wisdom dictates by looking here: [https://developers.google.com/analytics/devguides/collection/gajs/](https://developers.google.com/analytics/devguides/collection/gajs/).'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 还有很多可以进行的分析跟踪，比如自定义事件跟踪，电子商务活动跟踪，目标跟踪等等。既然你已经知道如何将 Google Analytics 与 jQuery
    Mobile 结合起来的基本知识，你可以继续探索更多的跟踪方式，可以查看这里：[https://developers.google.com/analytics/devguides/collection/gajs/](https://developers.google.com/analytics/devguides/collection/gajs/)。
- en: Long and multi-page forms
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 长表单和多页面表单
- en: 'On desktops, long forms are pretty normal. We''ve all seen registration pages
    and e-commerce ordering processes. The longer the form is, the greater the tendency
    to try to break them up into smaller, more logical pieces. This is usually done
    in a couple of ways:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在桌面上，长表单是很正常的。我们都见过注册页面和电子商务订单流程。表单越长，就越倾向于将它们分成更小、更合乎逻辑的片段。这通常是通过以下几种方式来实现的：
- en: Leave it as a full page but inject enough whitespace and grouping that it doesn't
    look quite so intimidating
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保持它作为一个完整的页面，但注入足够的空白和分组，使其看起来不那么令人生畏
- en: Either physically break the form into multiple pages or use show/hide techniques
    to accomplish the same thing
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要么物理上将表单分成多个页面，要么使用显示/隐藏技术来完成同样的事情
- en: 'Neither of these approaches makes a lot of difference with regards to task
    completion. Either way, both methods are particularly unfavorable strategies within
    the constraints of mobile. The best things we can do to increase success are:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这两种方法在任务完成方面并没有太大的区别。无论哪种方式，都不是移动限制条件下特别不利的策略。增加成功的最佳方法是：
- en: Completely eliminate all optional fields
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 完全去除所有可选字段
- en: Reduce the number of required fields as much as possible (get vicious about
    it)
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽量减少必填字段的数量（对此要尽快着手）
- en: Pre-fill elements with reasonable defaults
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预先填写合理默认值的元素
- en: Validate fields immediately instead of waiting till the end
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 立即验证字段，而不是等到最后
- en: Give the user upfront notice about how long the task is likely to take
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提前告知用户任务可能需要多长时间
- en: 'Even doing this, sometimes forms are just going to be long. If you run into
    this situation, here is a useful way of taking a long form and breaking it into
    several pages using jQuery Mobile. Here is the code from `ordercheckout.php`:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 即使这样做了，有时表单还是会很长。如果你遇到这种情况，下面是使用 jQuery Mobile 将一个长表单分成多个页面的一个有用方法。以下是来自 `ordercheckout.php`
    的代码：
- en: '[PRE4]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The very first thing to note here is that the body and form tags are outside
    all jQuery Mobile pages. Remember, all of this is just one big Data Object Model
    (DOM). All the crazy progressive enhancements and page shifting in the UI don't
    change that. This page, at its heart, is one massive form that we will use to
    submit the entire order process all at once.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这里要注意的第一件事是 body 和 form 标签都在所有 jQuery Mobile 页面之外。记住，所有这些只是一个大的文档对象模型（DOM）。所有疯狂的渐进增强和
    UI 中的页面切换都没有改变这一点。这个页面，在根本上，是一个我们将用来提交整个订单流程的巨大表单。
- en: Integrating jQuery Validate
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集成 jQuery 验证
- en: It's always been important to the user experience to validate as much as possible
    on the client. HTML5 goes a long way to this end by giving far greater control
    over input types. As good as HTML5 input types are, we'll need more. Enter Query
    Validate. ([http://bassistance.de/jquery-plugins/jquery-plugin-validation/](http://bassistance.de/jquery-plugins/jquery-plugin-validation/))
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: The Validate plugin is a staple in the jQuery community but there are certain
    things that will help our mobile implementation. Let's start with automatically
    adding validation to any page that has a form with a class of `validateMe`.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Since it is possible that a page might contain multiple forms, let''s just
    deal with it now by hooking it into every form that requests validation, using
    the following command:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'By default, `ValidateMe` places errors after the invalid field. That won''t
    do in mobile because the errors would show up underneath the form element. On
    BlackBerry and some Android systems, the form element is not necessarily centered
    vertically within the space between the keyboard and the field itself. If the
    user has botched it, the feedback won''t be immediate and obvious. That''s why
    we are making two changes to the error placement using the following code line:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: On any given element, we can specify where we want the error to be placed using
    standard jQuery selectors, as shown in the following code line. Perhaps we'll
    never use it but it's handy to have.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: If no error placement has been specified at the element level, we'll inset the
    error before the element itself, as shown in the following code line. Error language
    will show up between the label text and the form element. This way, the keyboard
    will never eclipse the feedback.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: In a single-form, multi-page environment, we want to be able to validate one
    jQM page at a time before proceeding to the next page. The first thing we'll need
    to do is give an alternate way of dealing with the `required` function, since
    we're clearly not validating the entire form at once.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: 'This can be declared outside any functions in our global script:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Adding additional `validator` methods like this are very handy. We can declare
    our own validation methods for just about anything.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: 'For your quick reference, here are the other Validate options:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: '`required`'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`remote`'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`email`'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`url`'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`date`'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`dateISO`'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`number`'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`digits`'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`creditcard`'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`equalTo`'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`accept`'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`maxlength`'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`minlength`'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`rangelength`'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`range`'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`max`'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`min`'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For more inspiring demos, please check out [http://bassistance.de/jquery-plugins/jquery-plugin-validation/](http://bassistance.de/jquery-plugins/jquery-plugin-validation/)
    and consider making a donation to the project. It has made all of our lives better.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: '![Integrating jQuery Validate](img/0069_03_04.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
- en: 'Now that we have properly integrated jQuery Validate into our multi-page form,
    we need to make our errors look like proper errors. We could go with something
    really simple, such as a red color on the text, but I much prefer keeping with
    the style of jQuery Mobile. Their default theme set has a `data-theme="e"` that
    is just begging to be used for error states. It might seem like a good idea to
    just add our error classes onto the very definitions of their `ui-bar-e,` but
    don''t. jQuery Mobile was patched three times during the writing of this book
    and if we were to take that approach it would cause friction with every upgrade.
    Instead, let''s just copy the definition of `ui-bar-e` right into our custom stylesheet,
    as shown in the following code:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'We''re almost ready to go with our fancy forms. Now we just need to be able
    to make it validated before moving from page to page. We don''t have to worry
    about the submit link, as that will naturally trigger validation, but let''s add
    a class to the continue link using the following code:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Then, in our global scripts, let''s add this function to our `pageinit` handler
    using the following code:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'What happens if the user refreshes in the middle of this process? The fields
    will be empty but we''ll already be on to the next page. One little script at
    the bottom of the page, as shown in the following code, should handle that:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Now that we have the basic concepts and have overcome a few minor pitfalls,
    let''s see the finished code of the `ordercheckout.php` file:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Here is the first page of our multi-page form. Remember that these pages will
    all be submitted at once. We''ll be validating each page using the following code
    before the user can move to the next:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: This is the second page of the form for collecting payment information. Note
    the validation of the credit card. All we have to do is add the class `"creditcard"`
    to make the framework check if the card number validates with the Luhn algorithm
    ([http://en.wikipedia.org/wiki/Luhn_algorithm](http://en.wikipedia.org/wiki/Luhn_algorithm)).
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'These are the scripts we had mentioned earlier in the chapter:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Here is the `meta.php` file since integrating jQuery Validate:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'After three chapters, here is what could conceivably be called the master JavaScript
    file (`global.js`). It is essentially the one I use in every project with only
    minor variations:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: E-commerce tracking with Google Analytics
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So far, all we have tracked is page views. Very useful to be sure, but most
    managers and owners love their reports. On the Thank You page, we should include
    some simple e-commerce tracking. Again, because of jQuery Mobile's Ajax-based
    navigation system, we'll need to tweak the default examples just a hair to make
    it work perfectly with jQM.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is the full code for the Thank You page (`thankyou.php`) with e-commerce
    tracking set to only run once the page is shown:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Summary
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Forms are nothing new. We've had them since the dawn of the Internet. They are
    not glamorous, but they can be elegant, effective, and responsive. jQuery Mobile
    takes you a long way toward effective forms in touch-based interfaces. Now you
    can take it farther with multi-page forms and client-side validation. Do not underestimate
    the power of these two techniques when paired together. When the client is able
    to do virtually everything they need, without having to go back to the server,
    the experience is automatically improved. Mixing in the ability to watch how users
    are surfing your site, their favorite content, and their fallout points will help
    you make an even more compelling experience. Just remember, when you're thinking
    about analytics, it is not the absolute numbers that are important. It's all about
    the trends; with these basics done, let's get to some more interesting tech. In
    the next chapter, we'll start looking at geolocation and more.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 表单并不是什么新鲜事物。自从互联网问世以来，我们就一直在使用它们。它们并不起眼，但可以是优雅、有效和响应灵敏的。jQuery Mobile让您在基于触摸的界面中更有效地创建表单。现在，您可以通过多页面表单和客户端验证进一步完善它。不要低估这两种技术配合使用时的威力。当客户几乎可以在不必返回服务器的情况下完成所需的一切时，体验会自动得到提升。混合使用观察用户在您的网站上是如何浏览、他们喜爱的内容以及他们的流失点的能力，将帮助您打造更具吸引力的体验。只需记住，在思考分析数据时，重要的不是绝对数字，而是趋势；在完成这些基础工作之后，让我们着手研究一些更有趣的技术吧。在下一章中，我们将开始研究地理定位等内容。
