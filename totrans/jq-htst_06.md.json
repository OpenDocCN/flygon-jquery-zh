["```js\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <title>jQuery-Powered Chrome Extension</title>\n        <link rel=\"stylesheet\" href=\"common.css\" />\n        <link rel=\"stylesheet\" href=\"popup.css\" />\n    </head>\n    <body>\n        <script src=\"img/jquery-1.8.0.min.js\"></script>\n        <script src=\"img/jsrender.js\"></script>\n        <script src=\"img/popup.js\"></script>\n    </body>\n</html>\n```", "```js\n<section role=\"main\">\n    <header>\n        <h1>Web Contacts</h1>\n    </header>\n    <ul id=\"contacts\"></ul>\n</section>\n<iframe id=\"poster\" src=\"img/template.html\"></iframe>\n```", "```js\nbody { width:32em; padding:0 2em; }\nheader { padding-top:2em; }\nul { padding:0 0 1em; font-size:1.5em; }\niframe { display:none; }\n```", "```js\n{\n    \"name\": \"Web Contacts\",\n    \"version\": \"1.0\",\n    \"manifest_version\": 2,\n    \"description\": \"Scrape web pages for Schema.org micro-data\",\n    \"browser_action\": {\n        \"default_popup\": \"popup.html\"\n    }\n}\n```", "```js\n\"sandbox\": {\n    \"pages\": [\"template.html\"]\n}\n```", "```js\n<!DOCTYPE html>\n\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <script id=\"contactTemplate\" type=\"text/x-jsrender\">\n            {{for contacts}}\n                <li>\n                    <article>\n                        <div class=\"details\">\n                            <h1>{{:name}}</h1>\n                            {{if url}}\n                                <span>website: {{url}}</span>\n                            {{/if}}\n                            {{if jobTitle}}\n                                <h2>{{:jobTitle}}</h2>\n                            {{/if}}\n                            {{if companyName}}\n                                <span class=\"company\">\n                                    {{:companyName}}\n                                </span>\n                            {{/if}}\n                            {{if address}}\n                                <p>{{:address}}</p>\n                            {{/if}}\n                            {{if contactMethods}}\n                                <dl>\n                                    {{for ~getMembers(contactMethods)}}\n                                        <dd>{{:key}}</dd>\n                                        <dt>{{:val}}</dt>\n                                    {{/for}}\n                                </dl>\n                           {{/if}}\n                        </div>\n                    </article>\n                </li>\n            {{/for}}\n        </script>\n        <script src=\"img/jquery-1.9.0.min.js\"></script>\n        <script src=\"img/jsrender.js\"></script>\n        <script src=\"img/template.js\"></script>\n    </head>\n</html>\n```", "```js\n(function () {\n    $.views.helpers({\n        getMembers: function (obj) {\n            var prop,\n                 arr = [];\n\n            for (prop in obj) {\n                if (obj.hasOwnProperty(prop)) {\n                    var newObj = {\n                        key: prop,\n                        val: obj[prop]\n                     }\n\n                    arr.push(newObj);\n                }\n            }\n\n            return arr;\n        }\n    });\n} ());\n```", "```js\nvar iframe = $(\"#poster\"),\n    message = {\n        command: \"issueTemplate\",\n        context: JSON.parse(localStorage.getItem(\"webContacts\"))\n    };\n    iframe.on(\"load\", function () {\n        if (message.context) {\n            iframe[0].contentWindow.postMessage(message, \"*\");\n        } else {\n            $(\"<li>\", {\n                text: \"No contacts added yet\"\n            }).appendTo($(\"#contacts\"));\n        }\n    });\n\nwindow.addEventListener(\"message\", function (e) {\n    $(\"#contacts\").append((e.data.markup));\n});\n```", "```js\nvar template = $.templates($(\"#contactTemplate\").html());\n\nwindow.addEventListener(\"message\", function (e) {\n    if (e.data.command === \"issueTemplate\") {\n\n        var message = {\n            markup: template.render(e.data.context)\n        };\n\n        e.source.postMessage(message, event.origin);\n    }\n});\n```", "```js\n\"content_scripts\": [{\n    \"matches\": [\"*://*/*\"],\n    \"css\": [\"content.css\"],\n    \"js\": [\"jquery-1.9.0.min.js\", \"content.js\"]\n}]\n```", "```js\n(function () {\n\n    var people = $(\"[itemtype*='schema.org/Person']\"),\n        peopleData = [];\n\n    if (people.length) {\n\n        people.each(function (i) {\n\n            var person = microdata.eq(i),\n                data = {},\n                contactMethods = {};\n\n            person.addClass(\"app-person\");\n\n        });\n    }\n} ());\n```", "```js\n.app-person { \n    position:relative; box-shadow:0 0 3px rgba(0,0,0, .5); \n    background-color:#fff;\n}\n```", "```js\nperson.children().each(function (j) {\n\n    var child = person.children().eq(j),\n        iProp = child.attr(\"itemprop\");\n\n    if (iProp) {\n\n        if (child.attr(\"itemscope\") !== \"\") {\n\n            if (iProp === \"email\" || iProp === \"telephone\") {\n                contactMethods[iProp] = child.text();\n            } else {\n                data[iProp] = child.text();\n            }\n        } else {\n\n            var content = [];\n\n            child.children().each(function (x) {\n                content.push(child.children().eq(x).text());\n            });\n\n            data[iProp] = content.join(\", \");\n        }\n    }\n});\n\nvar hasProps = function (obj) {\n    var prop,\n    hasData = false;\n\n    for (prop in obj) {\n        if (obj.hasOwnProperty(prop)) {\n            hasData = true;\n            break;\n\n        }\n    }\n\n    return hasData;\n};\n\nif (hasProps(contactMethods)) {\n    data.contactMethods = contactMethods;\n}\n\npeopleData.push(data);\n```", "```js\n\"background\": {\n    \"scripts\": [\"jquery-1.9.0.min.js\", \"background.js\"]\n}\n```", "```js\nchrome.extension.onConnect.addListener(function (port) {\n\n    port.onMessage.addListener(function (msg) {\n\n        if (msg.command === \"getData\") {\n\n            var contacts = localStorage.getItem(\"webContacts\")\n|| '{ \"message\": \"no contacts\" }',\n                  jsonContacts = JSON.parse(contacts);\n\n            port.postMessage(jsonContacts);\n\n        } else if (msg.command === \"setData\") {\n\n          localStorage.setItem(\"webContacts\", \nJSON.stringify({ \n              contacts: msg.contacts \n        }));\n\n            port.postMessage({ message: \"success\" });\n        }\n    });\n});\n```", "```js\n$(\"<a/>\", {\n    href: \"#\",\n    \"class\": \"app-save\",\n    text: \"Save\"\n}).on(\"click\", function (e) {\n    e.preventDefault();\n\n    var el = $(this),\n          port = chrome.extension.connect(),\n          contacts;\n\n    if (!el.hasClass(\"app-saved\")) {\n\n        port.postMessage({ command: \"getData\" });\n        port.onMessage.addListener(function (msg) {\n\n            if (msg.message === \"no contacts\") {\n\n                contacts = [peopleData[i]];\n\n                port.postMessage({ \n                    command:\"setData\", \n                    contacts:contacts \n                });\n            } else if (msg.contacts) {\n\n                contacts = msg.contacts;\n                contacts.push(peopleData[i]);\n\n                port.postMessage({ \n                    command: \"setData\", \n                    contacts: contacts \n            });\n\n        } else if (msg.message === \"success\") {\n\n            el.addClass(\"app-saved\")\n               .text(\"Contact information saved\");\n\n        port.disconnect();\n\n            }\n        });\n    }\n}).appendTo(person);\n```", "```js\n.app-save { position:absolute; top:5px; right:5px; }\n.app-saved { opacity:.5; cursor:default; }\n```"]