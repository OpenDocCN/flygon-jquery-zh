["```js\n<script src=\"img/jquery-1.9.0.min.js\"></script>\n```", "```js\n<script src=\"img/jquery.imagesloaded.min.js\"></script>\n```", "```js\n<script src=\"img/heat-map-client.js\"></script>\n```", "```js\n$(function () {\n\n});\n```", "```js\nvar doc = $(document),\n    clickStats = {\n        url: document.location.href,\n        clicks: []\n    },\n    layouts = [];\n\n$.ajaxSetup({\n    type: \"POST\",\n    contentType: \"application/json\",\n    dataType: \"json\"\n});\n\n$.each(doc[0].styleSheets, function (x, ss) {\n\n  $.each(ss.rules, function (y, rule) {\n\n    if (rule.media&&rule.media.length) {\n\n      var jq = $,\n          current = rule.media[0],\n          mq = {\n            min: (current.indexOf(\"min\") !== -1) ? \n            jq.trim(current.split(\"min-width:\")[1]\n            .split(\"px\")[0]) : 0,\n\n            max: (current.indexOf(\"max\") !== -1) ? \n            jq.trim(current.split(\"max-width:\")[1]\n            .split(\"px\")[0]) : \"none\"\n          };\n\n      layouts.push(mq);\n    }\n  });\n});\n\nlayouts.sort(function (a, b) {\n    return a.min - b.min;\n});\n\n$.ajax({\n    url: \"/heat-map.asmx/saveLayouts\",\n    data: JSON.stringify({ url: url, layouts: layouts })\n});\n```", "```js\n@media screen and (max-width:320px) {\n    css-selector { property: style; }\n}\n```", "```js\n$.imagesLoaded(function() {\n\n    doc.on(\"click.jqHeat\", function (e) {\n\n        var x = e.pageX,\n              y = e.pageY,\n             docWidth = doc.outerWidth(),\n             docHeight = doc.outerHeight(),\n             layout,\n             click = {\n                 url: url,\n                 x: Math.ceil((x / docWidth) * 100),\n                 y: Math.ceil((y / docHeight) * 100)\n            };\n\n        $.each(layouts, function (i, item) {\n\n            var min = item.min || 0,\n                  max = item.max || docWidth,\n                  bp = i + 1;\n\n            if (docWidth>= min &&docWidth<= max) {\n                click.layout = bp;\n            } else if (docWidth> max) {\n                click.layout = bp + 1;\n            }\n        });\n\n        clickStats.clicks.push(click);\n    });\n});\n```", "```js\nwindow.onbeforeunload = function () {\n\n    $.ajax({\n        async: false,\n        type: \"POST\",\n        contentType: \"application/json\",\n        url: \"/heat-map.asmx/saveClicks\",\n        dataType: \"json\",\n        data: JSON.stringify({ clicks: clicks })\n    });\n}\n```", "```js\n<link rel=\"stylesheet\" href=\"css/console.css\" />\n```", "```js\n<script src=\"img/jquery-1.9.0.min.js\"></script>\n<script src=\"img/console.js\"></script>\n```", "```js\n<body class=\"jqheat\">\n```", "```js\n<header>\n    <h1>jqHeat Management Console</h1>\n    <fieldset>\n        <legend>jqHeat page loader</legend>\n        <input placeholder=\"Enter URL\" id=\"url\" />\n        <button id=\"load\" type=\"button\">Load page</button>\n    </fieldset>\n</header>\n<section role=\"main\">\n    <iframe scrolling=\"no\" id=\"page\" />\n</section>\n```", "```js\n.jqheat{ overflow-y:scroll; }\n.jqheat header { \n    border-bottom:1px solid #707070; text-align:center; \n}\n.jqheat h1 { display:inline-block; width:100%; margin:1em 0; }\n.jqheat fieldset { \n    display:inline-block; width:100%; margin-bottom:3em; \n}\n.jqheat legend { display:none; }\n.jqheat input { \n    width:50%; height:34px; padding:0 5px; \n    border:1px solid #707070; border-radius:3px; \n}\n.jqheat input.empty{ border-color:#ff0000; }\n.jqheat button { padding:9px5px; }\n.jqheat section {\n    width:100%;margin:auto;\n    position:relative;\n}\n.jqheat iframe, .jqheat canvas {\n    Width:100%; height:100%; position:absolute; left:0; top:0;\n}\n.jqheat canvas { z-index:999; }\n```", "```js\n$(function () {\n\n});\n```", "```js\nvar doc = $(document),\n    input = doc.find(\"#url\"),\n    button = doc.find(\"#load\"),\n    iframe = doc.find(\"#page\"),\n    canvas = document.createElement(\"canvas\");\n\n$.ajaxSetup({\n    type: \"POST\",\n    contentType: \"application/json\",\n    dataType: \"json\",\n    converters: {\n        \"textjson\": function (data) {\n            var parsed = JSON.parse(data);\n\n            return parsed.d || parsed;\n        }\n    }\n});\n```", "```js\ndoc.on(\"click\", \"#load\", function (e) {\n    e.preventDefault();\n\n    var url = input.val(),\n        len;\n\n    if (url) {\n        input.removeClass(\"empty\").data(\"url\", url);\n        button.prop(\"disabled\", true);\n        iframe.attr(\"src\", url).load(function() {\n          $(this).trigger(\"iframeloaded\");\n        });\n    } else {\n        input.addClass(\"empty\");\n        button.prop(\"disabled\", false);\n  }\n});\n```", "```js\ndoc.on(\"iframeloaded\", function () {\n\n    var url = input.data(\"url\");\n\n    $.ajax({\n        type: \"POST\",\n        contentType: \"application/json\",\n        url: \"/heat-map.asmx/getClicks\",\n        dataType: \"json\",\n        data: JSON.stringify({ url:url, layout: 4 }),\n        converters: {\n          \"textjson\": function (data) {\n              var parsed = JSON.parse(data);\n\n              returnparsed.d || parsed;\n          }\n        }\n    });\n});\n```", "```js\n}).done(function (clicks) {\n\n    var loadedHeight = $(\"html\", iframe[0].contentDocument)\n.outerHeight();\n\n    doc.find(\"section\").height(loadedHeight);\n\n    canvas.width = doc.width();\n    canvas.height = loadedHeight;\n    $(canvas).appendTo(doc.find(\"section\"))\n             .trigger(\"canvasready\", { clicks: clicks });\n\n});\n```", "```js\ndoc.on(\"canvasready\", function (e, clickdata) {\n\n    var docWidth = canvas.width,\n        docHeight = canvas.height,\n        ctx = canvas.getContext(\"2d\") || null;\n\n    if (ctx) {\n\n        ctx.fillStyle = \"rgba(0,0,255,0.5)\";\n\n        $.each(clickdata.clicks, function (i, click) {\n\n            var x = Math.ceil(click.x * docWidth / 100),\n                y = Math.ceil(click.y * docHeight / 100);\n\n            ctx.beginPath();\n            ctx.arc(x, y, 10, 0, (Math.PI/180)*360, true);\n            ctx.closePath();\n            ctx.fill();\n\n        });\n    }\n\n    button.prop(\"disabled\", false);\n\n});\n```", "```js\n<select id=\"layouts\"></select>\n```", "```js\n$.ajax({\n    url: \"/heat-map.asmx/getLayouts\",\n    data: JSON.stringify({ url: url })\n}).done(function (layouts) {\n\n    var option = $(\"<option/>\"),\n        max;\n\n    len = layouts.length;\n\n    function optText(type, i, min, max) {\n\n        var s,\n            t1 = \"layout \";\n\n        switch (type) {\n            case \"normal\":\n                s = [t1, i + 1, \" (\", min, \"px - \", max, \"px)\"];\n                break;\n            case \"lastNoMax\":\n                s = [t1, len + 1, \" (\", min, \"px)\"];\n                break;\n            case \"lastWithMax\":\n                s = [t1, len + 1, \" (\", max, \"px+)\"];\n                break;\n        }\n\n        return s.join(\"\");\n    }\n\n    $.each(layouts, function (i, layout) {\n\n        var lMin = layout.min,\n            lMax = layout.max,\n            text = optText(\"normal\", i, lMin, lMax);\n\n        if (i === len - 1) {\n            if (lMax === \"none\") {\n                text = optText(\"lastNoMax\", null, lMin, null);\n            } else {\n                max = lMax;\n            }\n        }\n\n        option.clone()\n              .text(text)\n              .val(i + 1)\n              .appendTo(\"#layouts\");\n        });\n\n        if (max) {\n\n            var fText = optText(\"lastWithMax\", null, null, max);\n\n            option.clone()\n                  .text(fText)\n                  .val(len + 1)\n                  .prop(\"selected\",true)\n                  .appendTo(\"#layouts\");\n  }\n});\n```", "```js\n.jqheat select { \n    width:175px; height:36px; padding:5px;\n    margin:0 .25em 0 .5em; border:1px solid #707070;\n    border-radius:3px;\n}\n```", "```js\n$(this).trigger(\"iframeloaded\", { len: len });\n```", "```js\ndoc.on(\"iframeloaded\", function (e, maxLayouts) {\n```", "```js\ndata: JSON.stringify({ url: url, layout: maxLayouts.len + 1 }),\n```", "```js\ndoc.on(\"change\", \"#layouts\", function () {\n\n    var url = input.data(\"url\"),\n          el = $(this),\n          layout = el.val();\n\n    $.ajax({\n        url: \"/heat-map.asmx/getClicks\",\n        data: JSON.stringify({ url: url, layout: layout })\n    }).done(function (clicks) {\n\n        doc.find(\"canvas\").remove();\n\n        var width,\n              loadedHeight,\n              opt = el.find(\"option\").eq(layout - 1),\n              text = opt.text(),\n              min = text.split(\"(\")[1].split(\"px\")[0],\n              section = doc.find(\"section\"),\n              newCanvas = document.createElement(\"canvas\");\n\n        if (parseInt(layout, 10) === el.children().length) {\n            width = doc.width();\n        } else if (parseInt(min, 10) > 0) {\n            width = min; \n        } else {\n            width = text.split(\"- \")[1].split(\"px\")[0];\n      }\n\n        section.width(width);\n        newCanvas.width = width;\n\n        loadedHeight = $(\"html\", \n        iframe[0].contentDocument).outerHeight();\n\n        section.height(loadedHeight);\n        newCanvas.height = loadedHeight;\n\n        canvas = newCanvas;\n\n        $(newCanvas).appendTo(section).trigger(\"canvasready\", { \n            clicks: clicks });\n        });\n    });\n```"]