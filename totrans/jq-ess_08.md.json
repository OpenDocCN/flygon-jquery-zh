["```js\n<!DOCTYPE html>\n<html>\n<head lang=\"en\">\n  <meta charset=\"UTF-8\">\n  <script src=\"img/\"></script>\n  <title>Chapter08-Clean Code</title>\n</head>\n<body>\n<div>Super Coding Club Members</div>\n<hr/>\n<ul id=\"myList\"></ul>\n<hr/>\n\n<script type=\"text/javascript\">\n  // Hook the document ready event and\n  $(document).ready(function () {\n    // get the user data\n    $.getJSON('users.json', function (members) {\n      var index, htmlTemplate = '';\n      // make sure there are some members\n      if (members && members.length) {\n        // create the markup\n        for (index = 0; index < members.length; index += 1) {\n          htmlTemplate += '<li>' + members[index].name.first + '</li>';\n        }\n        // render the member names\n        $('#myList').html(htmlTemplate);\n      }\n      return members;\n    }).fail(function (error) {\n      alert(\"Error: \" + error.status + \": \" + error.statusText);\n    });\n  });\n</script>\n</body>\n</html>\n```", "```js\n<script type=\"text/javascript\">\n  function showHttpError(error) {\n    alert(\"Error: \" + error.status + \": \" + error.statusText);\n  }\n\n  function getMembers(errorHandler) {\n    return $.getJSON('users.json').fail(errorHandler);\n  }\n\n  function createMemberMarkup(members) {\n    var index, htmlTemplate = '';\n    members.forEach(function (member) {\n      htmlTemplate += '<li>' + member.name.first + '</li>';\n    });\n    return htmlTemplate;\n  }\n\n  function renderMembers($ptr, membersMarkup) {\n    $ptr.html(membersMarkup);\n  }\n\n  function showMembers() {\n    getMembers(showHttpError)\n      .then(function (members) {\n        renderMembers($('#members'), createMemberMarkup(members));\n      });\n  }\n\n  // Hook the document ready event\n  $(document).ready(function () {\n    showMembers();\n  });\n</script>\n```", "```js\n<script type=\"text/javascript\">\n  var members = {\n      showHttpError: function (error) {\n        alert(\"Error: \" + error.status + \": \" + error.statusText);\n      },\n\n      get: function (errorHandler) {\n        return $.getJSON('users.json').fail(errorHandler);\n      },\n\n      createMarkup: function (members) {\n        var index, htmlTemplate = '';\n        members.forEach(function (member) {\n          htmlTemplate += '<li>' + member.name.first + '</li>';\n        });\n        return htmlTemplate;\n      },\n\n      render: function ($ptr, membersMarkup) {\n        $ptr.html(membersMarkup);\n      },\n\n      show: function () {\n        var that = this;\n        that.get(that.showHttpError)\n          .then(function (members) {\n            that.render($('#members'), that.createMarkup(members));\n          });\n      }\n    };\n\n  // Hook the document ready event\n  $(document).ready(function () {\n    members.show();\n  });\n</script>\n\n```", "```js\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <script src=\"img/jquery-2.1.1.js\"></script>\n  <title>Chapter 8 Simple Custom Events</title>\n</head>\n<body>\n<button id=\"eventGen\">Trigger Event</button>\n<button id=\"releaseEvent\">Release Event Handlers</button>\n<div id=\"console-out\" style=\"width: 100%\">\n</div>\n\n<script>\n  var customEvent = \"customEvent\";\n\n  function consoleOut(msg){\n    console.info(msg);\n    $('#console-out').append(\"<p>\" + msg + \"</p>\");\n  }\n\n  function customEventHandler1(eventObj) {\n    return consoleOut(\"Custom Event Handler 1\");\n  }\n\n  function customEventHandler2(eventObj) {\n    return consoleOut(\"Custom Event Handler 2\");\n  }\n\n  $(document).ready(function () {\n    // Notice we can hook the event before it is called\n    $(document).on(customEvent, customEventHandler1);\n    $(document).on(customEvent, customEventHandler2);\n\n    // generate a new custom event for each click\n    $('#eventGen').on('click', function () {\n      $.event.trigger(customEvent);\n    });\n    // once we release the handlers, they are not called again\n    $('#releaseEvent').on('click', function () {\n      consoleOut(\"Handlers released\");\n      $(document).off(customEvent, customEventHandler1);\n      $(document).off(customEvent, customEventHandler2);\n    });\n  });\n</script>\n</body>\n</html>\n```", "```js\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <script src=\"img/jquery-2.1.1.js\"></script>\n  <title>Chapter 8 Custom Events 2</title>\n</head>\n<body>\n<div>&nbsp;<button id=\"stop\">Stop Polling</button>&nbsp;<span id=\"lastNewUser\"></span></div>\n<hr/>\n<div id=\"showUsers\">\n</div>\n<script>\n  var users = [];\n  var newUser = \"com.therockncoder.new-user\";\n  function showMessage(msg) {\n    $('#lastNewUser').show().html(msg + ' welcome to the group!').fadeOut(3000);\n  }\n    function init() {\n    function getUserName(user) {\n      return user.name.first + \" \" + user.name.last;\n    }\n    function showUsers(users) {\n      var ndx, $ptr = $('#showUsers');\n      $ptr.html(\"\");\n      for (ndx = 0; ndx < users.length; ndx += 1) {\n        $ptr.append('<p>' + getUserName(users[ndx]) + '</p>')\n\t\t}\n    }\n    function addNewNameToList(eventObj, user, count) {\n      console.info(\"Add New Name to List = \" + getUserName(user));\n      users.push(user);\n      showUsers(users);\n    }\n    function welcomeNewUser(eventObj, user) {\n      var name = getUserName(user);\n      showMessage(name);\n      console.info(\"got New User \" + name);\n    }\n    $(document).on(newUser, addNewNameToList);\n    $(document).on(newUser, welcomeNewUser);}\n  function startTimer() {\n    init();\n    var handleId = setInterval(function () {\n      $.getJSON('http://api.randomuser.me/?format=json&nat=us').success(function (data) {\n        var user = data.results[0].user;\n        $.event.trigger(newUser, [user]);\n      });\n    }, 5000);\n    $('#stop').on('click', function(){\n      clearInterval(handleId);\n      showMessage('Cancelled polling');\n    });\n  }\n  $(document).ready(startTimer);\n </script>\n</body>\n</html>\n```", "```js\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <title>Jasmine Spec Runner v2.2.0</title>\n  <!-- Jasmine files -->\n  <link rel=\"shortcut icon\" type=\"image/png\" href=\"../libs/jasmine-2.3.4/jasmine_favicon.png\">\n  <link rel=\"stylesheet\" href=\"../libs/jasmine-2.3.4/jasmine.css\">\n  <script src=\"img/jasmine.js\"></script>\n  <script src=\"img/jasmine-html.js\"></script>\n  <script src=\"img/boot.js\"></script>\n\n  <!-- System Under Test -->\n  <script src=\"img/calculator.js\"></script>\n\n  <!-- include spec files here... -->\n  <script src=\"img/calculator-spec.js\"></script>\n</head>\n<body>\n</body>\n</html>\n```", "```js\nvar calculator = {\n  add: function(a, b){\n    return a + b;\n  },\n  subtract: function(a, b){\n    return a -b;\n  },\n  multiply: function(a, b){\n    return a * b;\n  },\n  divide: function(a, b){\n    return a / b;\n  }\n};\n```", "```js\ndescribe(\"Calculator\", function() {\n\n  it(\"can add numbers\", function(){\n    expect(calculator.add(12, 3)).toEqual(15);\n    expect(calculator.add(3000, -100)).toEqual(2900);\n  });\n\n  it(\"can subtract numbers\", function(){\n    expect(calculator.subtract(12, 3)).toEqual(9);\n  });\n\n  it(\"can multiply numbers\", function(){\n    expect(calculator.multiply(12, 3)).toEqual(36);\n  });\n\n  it(\"can divide numbers\", function(){\n    expect(calculator.divide(12, 3)).toEqual(4);\n  });\n});\n```"]