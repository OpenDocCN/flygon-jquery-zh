- en: Chapter 1. Exploring Responsive Web Design
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: These days, the word responsive is one that we are hearing a lot in the website
    development environment, isn't it? No worries, together we will see the real meaning
    of it and its impact on our website development.
  prefs: []
  type: TYPE_NORMAL
- en: One factor that influences decision making (but is sometimes ignored) when starting
    the development process is the number of devices and different screen sizes that
    we need for previewing the responsiveness of website layout. Some time ago, we
    used to work with some definitions of website dimensions, for example, 1024 pixels.
    This happened because we thought the only way to access the content was on a desktop.
    But, as you know, technology is bringing us more and more devices (that can show
    websites), improving the way we interact with sites, such as large desktop monitors,
    tablets, smartphones, smart TVs, outdoor displays, and other good things.
  prefs: []
  type: TYPE_NORMAL
- en: These advances in mobile technology and the quick evolution of website navigation
    and viewing techniques have pushed everyone to review the concept of limited dimensions
    of sites, to start thinking of a structure that can adapt itself, and to offer
    the right content for each situation.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter we will learn:'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the concept of responsive web design
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Comparing responsive, fluid, and adaptive web
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adapting the screen with media queries
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mobile-first concept and tips
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using wireframe tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Practicing mobile-first development in wireframes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding the concept of responsive web design
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I cannot start this theme without citing *Ethan Marcotte*, who released the
    book *Responsive Web Design* in 2011, which has become a reference for many other
    books and articles from across the frontend community.
  prefs: []
  type: TYPE_NORMAL
- en: 'In my understanding of Marcotte''s book, the meaning of responsive web design
    is to provide different experiences for the user to see the same site depending
    on the available screen area. Technically speaking, it involves the use of the
    following three main techniques:'
  prefs: []
  type: TYPE_NORMAL
- en: Flexible grid-based layout
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Flexible images and video
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Smart use of CSS splitting the website behavior (media queries)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'More details about each technique will be shown later, but just to clarify
    this concept visually, have a look at the following example, which represents
    a website as displayed on a small device (smartphone) on the left, medium device
    (tablet) in center, and on a large screen (desktop) on the right:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Understanding the concept of responsive web design](img/3602OS_01_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: There are many more challenges than just creating fluidic dimensions and applying
    some media queries.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will talk about many minor and major challenges throughout the book. Some
    of them are:'
  prefs: []
  type: TYPE_NORMAL
- en: Replacing mouser-over events with touch events
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Facilitating the filling of data in the form fields
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prioritizing the content
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Site loading optimization
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Comparing responsive, fluid, and adaptive web
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Responsive web design is a little different from fluid design. Fluid design
    is about adjusting the website's structure and dimensions automatically (by using
    relative units for widths, such as em or percentage) but does not offer a varied
    approach to the user to see the content layout.
  prefs: []
  type: TYPE_NORMAL
- en: Also, it would be fair to say that responsive web design is not a unique solution
    for all mobile device challenges. As we saw before, responsive web design is an
    idea, and can give the user a better experience when implemented correctly, but
    it may not work for everyone or every device. This is the reason we should improve
    our knowledge of new technologies.
  prefs: []
  type: TYPE_NORMAL
- en: 'There is a quote that I like very much, written by *Aaron Gustafson*, the author
    of the *Adaptive Web Design* book:'
  prefs: []
  type: TYPE_NORMAL
- en: '*"Adaptive Web Design is about creating interfaces that adapt to the user''s
    capabilities (in terms of both form and function)."*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Adaptive web design implements new HTML5 functionalities only for newer devices,
    say to provide an enhanced experience. It misses out these functionalities on
    older devices, thus ensuring that the basic setup still works on them.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are many ways to implement adaptive features. The following are the most
    common practices to achieve them:'
  prefs: []
  type: TYPE_NORMAL
- en: Using jQuery plugins to enable the touch event interactions in mobile devices
    (more in [Chapter 6](ch06.html "Chapter 6. Building Responsive Image Sliders"),
    *Building Responsive Image Sliders*)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Transforming common table structures into responsive tables (more in [Chapter
    7](ch07.html "Chapter 7. Designing Responsive Tables"), *Designing Responsive
    Tables*)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visual customization of form elements only for desktop (more in [Chapter 8](ch08.html
    "Chapter 8. Implementing Responsive Forms"), *Implementing Responsive Forms*)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using geolocation functionality to bring more relevant content to the user
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changing information hierarchy where the correct priority of content is set
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Diego Eis*, a Brazilian known to disseminate some best practices and the creator
    of the [Tableless.com.br](http://Tableless.com.br) website, drew up an excellent
    comparison between responsive web design and non-responsive web design in one
    of his articles. Imagine if we were planning to travel to two or more destinations,
    you would certainly organize many clothing combinations such as jackets, pants,
    shorts, and shirts which would result in one big heavy bag. This is because you
    never know what the climate will be like in each place. In the same way, to be
    prepared for all events, sometimes it can slightly reduce the performance of the
    website..'
  prefs: []
  type: TYPE_NORMAL
- en: Adapting the screen with media queries
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Luke Wroblewski*, author of popular web design books and a good reference
    for many articles, posted a recent device-sizes classification announced by technology
    companies as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 4"-5" smartphones
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 5"-6" phone / tablet hybrids
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7"-8" tablets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 9"-10" tablets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 11"-17" laptops and convertibles (tablet/laptop)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 20"-30" desktops
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Labels such as smartphone are just friendly labels as long as we know that the
    responsive web design makes the structure respond to the device's screen resolution,
    not to the type of device. But, we must analyze if it is better to offer a different
    approach for a specific width. This is the improved feature of this module, where
    CSS2.1 was focused on media types such as print, screen, and handheld; in CSS3,
    the focus is on media features.
  prefs: []
  type: TYPE_NORMAL
- en: 'Media queries are mostly used and most browsers adopt it natively (Firefox
    3.6 and above, Safari 4 and above, Chrome 4 and above, Opera 9.5 and above, iOS
    Safari 3.2 and above, Opera Mobile 10 and above, Android 2.1 and above, and Internet
    Explorer 9 and above). And now, here comes the question: what about IE6-IE8? For
    these browsers there is a known lightweight solution called **Respond**, which
    helps a lot when support for old browsers is needed (more in [Chapter 10](ch10.html
    "Chapter 10. Ensuring Browser Support") *, Ensuring Browser Support*).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Trying to keep concise on this topic, the following are the features mostly
    used when we are specifying media queries:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Width: `min-width` / `max-width`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Height: `min-height` / `max-height`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Orientation: It checks whether a device is portrait or landscape in orientation'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Resolution: For example, `min-resolution: 300dpi`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Check the following CSS code for a better understanding of the use of media
    queries and their syntax:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Just to clarify this code, the following figure is a visual interpretation
    of this code, where it shows that the layout could be displayed in different ways
    depending on the device''s screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Adapting the screen with media queries](img/3602OS_01_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Downloading the example code**'
  prefs: []
  type: TYPE_NORMAL
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.packtpub.com](http://www.packtpub.com). If you
    purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: Mobile-first
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s start this section by analyzing the use case of this project:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Mobile-first](img/3602OS_01_03b.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This result is commonly seen when the project starts with desktop-first, and
    the web design creation just fills the blank space with banners or pictures, less
    relevant links, animations, and so on. We are probably forgetting the obvious
    and basic flow that the user follows. We know that sometimes these other items
    look important to the project, but it is evident that this project design requires
    an information architecture review.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the previous example, we can notice (on the right side) how simple the communication
    with the user can be, and it may be more efficient with less visual clutter. And
    that is the trend: make it simple. The next quote by *Bill DeRouchey* summarizes
    it:'
  prefs: []
  type: TYPE_NORMAL
- en: '"Designing the mobile app first forced us to strip down to essentials."'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In other words, mobile-first is good for business because objectivity brings
    money. The content you are adding to your website is valuable and important to
    the end user. The implementation of these new features will allow visitors to
    have a far better user experience with quicker and more intuitive access to content
    on the go.
  prefs: []
  type: TYPE_NORMAL
- en: In this case, when the mobile-first concept was applied, a specific link could
    be found only on the interior pages. However, the objective of the homepage is
    to direct the user to the correct page, following the website flux information.
    For non-relevant links this scenario is acceptable.
  prefs: []
  type: TYPE_NORMAL
- en: 'Take a look at the following screenshot, and notice the many differences about
    the organization of information and focus on important links in a desktop version:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Mobile-first](img/3602OS_01_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Using wireframe tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Wireframe is a visual guide that helps to craft your website structure, and
    its main focus lies in functionality, behavior, and priority of content. It should
    be the first step of any project because it makes it easier to analyse the information
    architecture and arrangement of the visual elements.
  prefs: []
  type: TYPE_NORMAL
- en: Wireframe.cc ([http://wireframe.cc/](http://wireframe.cc/)) is an easy way to
    start our project. This tool is great to do something quick but with low fidelity.
    For detailed works, there are better tools such as Balsamiq Mockups or Pencil.
  prefs: []
  type: TYPE_NORMAL
- en: 'The usage of Wireframe.cc is very simple. After entering in the tool''s site,
    perform the following:'
  prefs: []
  type: TYPE_NORMAL
- en: On the top-left corner choose the device.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then click on setting to redefine our container width if necessary.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now click-and-drag to draw.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After this, select the appropriate stencil.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you chose a wrong stencil, just double-click on it to edit it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When you finish using the wireframe, do not forget to click on the **Save**
    button that will generate a URL for further access.
  prefs: []
  type: TYPE_NORMAL
- en: Exercise 1 – practicing mobile-first development in wireframes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Visit [http://mediaqueri.es/](http://mediaqueri.es/) and take your time to
    get inspired. Let''s start our website project creating three website wireframes
    for these dimensions: smartphone, tablet, and desktop, by applying the mobile-first
    concept.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following three wireframes will be used as reference for *Exercise 1*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Exercise 1 – practicing mobile-first development in wireframes](img/3602OS_01_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we reviewed the concept of responsive web design. We have also
    learned what mobile-first is. We learned about the media queries and how they
    can be different on our site implementation. We also created a wireframe drafting
    our site. This will connect us to the next chapter which will code this wireframe.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let''s move on in our project by learning how to use the three distinct
    responsive grid systems: Fluid Baseline Grid, 1140 Grid, and my favorite Foundation4
    Grid. Also, we will look at adapting the website''s behavior by using JavaScript.
    All of these topics will be explained in the next chapter.'
  prefs: []
  type: TYPE_NORMAL
