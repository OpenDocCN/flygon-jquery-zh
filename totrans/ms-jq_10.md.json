["```js\n    $(document).ready(function(){\n      $(\"input\").on(\"click\", function(){\n        $(\"img\").toggleClass(\"change-filter\");\n      })\n    });\n    ```", "```js\n    .change-filter {\n      filter: blur(5px);\n      -webkit-filter: blur(5px); \n    }\n    ```", "```js\n    img { -webkit-transition: all 0.7s ease-in-out; transition: all 0.7s ease-in-out; }\n    ```", "```js\n    .change-filter { filter: brightness(170%); -webkit-filter: brightness(170%); }\n    ```", "```js\n    .change-filter { filter: sepia(100%); -webkit-filter: sepia(100%); }\n    ```", "```js\n.change-filter { filter: contrast(170%); -webkit-filter: contrast(170%); }\n```", "```js\n.change-filter { filter: hue-rotate(50deg); -webkit-filter: hue-rotate(50deg); }\n```", "```js\n.change-filter { filter: grayscale(100%); -webkit-filter: grayscale(100%); }\n```", "```js\n.change-filter { filter: invert(100%); -webkit-filter: invert(100%); }\n```", "```js\n.change-filter { filter: saturate(50%); -webkit-filter: saturate(50%);}\n```", "```js\n  <style>\n    .blend { width: 389px; height: 259px; background:#de6e3d url(\"img/flowers.jpg\") no-repeat center center; }\n    .blend.overlay { background-blend-mode: overlay; }\n  </style>\n</head>\n```", "```js\n<img data-caman=\"saturation(-10) brightness(20) vignette('10%')\" src=\"img/image.jpg\">\n```", "```js\n      var canvas = $('#canvas');\n      var ctx = canvas[0].getContext(\"2d\");\n      var img = new Image();\n      img.src = \"img/flowers.jpg\";\n      ctx.drawImage(img, 0, 0);\n    ```", "```js\n      $reset.on('click', function(e){\n        e.preventDefault();\n        var img = new Image();\n        img.src = \"img/flowers.jpg\";\n        ctx.save();\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        ctx.clearRect(0, 0, canvas[0].width, canvas[0].height);\n        ctx.restore();\n        ctx.drawImage(img, 0, 0);\n        Caman('#maincanvas', 'img/flowers.jpg', function(){\n          this.revert(false).render();\n        });\n      });\n    ```", "```js\n    $noise.on('click', function(e) {\n      e.preventDefault();\n      Caman('#maincanvas', 'img/flowers.jpg', function() {\n        this.noise(10).render();\n      });\n    });\n    ```", "```js\n    $(document).ready(function() {\n      $(\"input\").on(\"click\", function() {\n        Caman(\"#caman-image\", function () {\n          this.pinhole().render();\n        });\n      })\n    });\n    ```", "```js\n    $(window).load(function(){\n      $('.picture').each(function(){\n        this.src = grayscale(this.src);\n      });\n    });\n    ```", "```js\n    function grayscale(src){\n      var i, avg;\n      var canvas = document.createElement('canvas');\n      var ctx = canvas.getContext('2d');\n      var imgObj = new Image();\n      imgObj.src = src;\n      canvas.width = imgObj.width;\n      canvas.height = imgObj.height;\n      ctx.drawImage(imgObj, 0, 0);\n      var imgPixels = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      for(var y = 0; y < imgPixels.height; y++){\n        for(var x = 0; x < imgPixels.width; x++){\n          i = (y * 4) * imgPixels.width + x * 4;\n          avg = (imgPixels.data[i] + imgPixels.data[i + 1] + imgPixels.data[i + 2]) / 3;\n          imgPixels.data[i] = avg;\n          imgPixels.data[i + 1] = avg;\n          imgPixels.data[i + 2] = avg;\n        }\n      }\n      ctx.putImageData(imgPixels, 0, 0, 0, 0, imgPixels.width, imgPixels.height);\n      return canvas.toDataURL();\n    }\n    ```", "```js\n    jQuery.fn.sepia = function () {\n      $(window).load(function () {\n        $('.sepia').each(function () {\n          var curImg = $(this).wrap('<span />');\n          curImg.attr(\"src\", grayImage(this));\n        });\n      });\n    ```", "```js\n      function grayImage(image) {\n        var canvas = document.createElement(\"canvas\");\n        var ctx = canvas.getContext(\"2d\");\n        canvas.width = image.width;\n        canvas.height = image.height;\n        ctx.drawImage(image, 0, 0);\n        var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n        for (var y = 0; y < imgData.height; y++) {\n          for (var x = 0; x < imgData.width; x++) {\n            var pos = (y * 4) * imgData.width + (x * 4);\n            var mono = imgData.data[pos] * 0.32 + imgData.data[pos + 1] * 0.5 + imgData.data[pos + 2] * 0.18;\n            imgData.data[pos] = mono + 50;\n            imgData.data[pos + 1] = mono;\n            imgData.data[pos + 2] = mono - 50;\n          }\n        }\n        ctx.putImageData(imgData, 0, 0, 0, 0, imgData.width, imgData.height);\n        return canvas.toDataURL();\n      }\n    };\n    $.fn.sepia();\n    ```", "```js\n    for (var y = 0; y < imgData.height; y++) {\n    ```", "```js\n        var r_weight = 0.44;\n        var g_weight = 0.5;\n        var b_weight = 0.16;\n        var r_intensity = 255;\n        var g_intensity = 1;\n        var b_intensity = 1;\n\n        var data = imgData.data;\n        for(var i = 0; i < data.length; i += 4) {\n          var brightness = r_weight * data[i] + g_weight * data[i + 1] + b_weight * data[i + 2];\n          data[i] = r_intensity * brightness; // red\n          data[i + 1] = g_intensity * brightness; // green\n          data[i + 2] = b_intensity * brightness; // blue\n        }\n        ctx.putImageData(imgData, 0, 0);\n    ```", "```js\n    [.1, .1, .1],\n    [.1, .2, .1],\n    [.1, .1, .1],\n```", "```js\n    $(document).ready(function(){\n      $(\"input[name='css']\").on(\"click\", function(){\n        $(\"img\").cssAnimate({filter: hue-rotate(50deg), -webkit- filter: hue-rotate(50deg)}, 500, \"cubic-bezier(1,.55,0,.74)\");\n      })\n    });\n    ```", "```js\n    $(document).ready(function() {\n      $('.sigPad').signaturePad();\n      var canvas = $('#canvas')[0], ctx = canvas.getContext('2d');\n\n      $('#download').on('click', function() {\n        saveImage();\n        downloadCanvas(this, 'canvas', 'signature.png');\n      });\n\n      function saveImage() {\n        var api = $('.sigPad').signaturePad();\n        var apitext = api.getSignatureImage();\n        var imageObj = new Image();\n        imageObj.src = apitext;\n        imageObj.onload = function() {\n          ctx.drawImage(imageObj, 0, 0);\n        };\n      }\n\n      function downloadCanvas(link, canvasId, filename) {\n        link.href = $(canvasId)[0].toDataURL();\n        link.download = filename;\n      }\n    });\n    ```", "```js\n    $(document).ready(function() {\n      var idx = 0;\n      var filters = ['grayscale', 'sepia', 'blur', 'saturate', ''];\n\n      var canvas = $(\"canvas\")[0], context = canvas.getContext(\"2d\"),\n      video = $(\"video\")[0], localStream, videoObj = { \"video\": true }, errBack = function(error) {\n          console.log(\"Video capture error: \", error.code);\n        };\n    ```", "```js\n      function changeFilter(e) {\n        var el = e.target;\n        el.className = '';\n        var effect = filters[idx++ % filters.length];\n        if (effect) {\n          el.classList.add(effect);\n        }\n      }\n    ```", "```js\n      navigator.getUserMedia = (navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia);\n    ```", "```js\n      $(\"#startplay\").on(\"click\", function(e) {\n        if (navigator.getUserMedia) {\n          navigator.getUserMedia(videoObj, function(stream) {\n            video.src = window.URL.createObjectURL(stream);\n            localStream = stream;\n            video.play();\n          }, errBack);\n        }\n      });\n    ```", "```js\n      $(\"#snap\").on(\"click\", function() {\n        context.drawImage(video, 0, 0, 320, 240);\n      });\n\n      $(\"#stopplay\").on(\"click\", function(e, stream) {\n        localStream.stop();\n      });\n\n      $('#canvas').on('click', changeFilter);\n\n      $(\"#download\").on('click', function (e) {\n        var dataURL = canvas.toDataURL('image/png');\n        $(\"#download\").prop(\"href\", dataURL);\n      });\n    });\n    ```", "```js\n  var filters = ['grayscale', 'sepia', 'blur', 'saturate', ''];\n```", "```js\n  $(\"#download\").on('click', function (e) {\n    e.preventDefault();\n    Caman('#canvas', function(){\n      this.sunrise();\n      this.render(function() { this.save(\"webcam-photo.png\"); });\n    });\n  });\n```"]