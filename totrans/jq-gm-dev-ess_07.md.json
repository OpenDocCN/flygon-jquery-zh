["```js\n<div id=\"create\" class=\"screen\">\n   <h1>Create an account</h1>\n   <div class=\"input\"><span>name:</span><input id=\"create-name\" type=\"text\" /></div>\n   <div class=\"input\"><span>pw:</span><input id=\"create-pw\" type=\"text\" /></div>\n   <a class=\"button left\" id=\"create-cancel\" href=\"#\">cancel</a>\n   <a class=\"button right\" id=\"create-create\" href=\"#\">create</a>\n</div>\n```", "```js\n$(\"#create-cancel\").click(function(e){\n   $(\"#create\").css(\"display\",\"none\");\n   $(\"#login\").css(\"display\",\"block\");\n   e.preventDefault();\n});\n$(\"#create-create\").click(function(e){\n   // interact with the server\n   e.preventDefault();\n});\n```", "```js\n$.getJSON(\n   \"createUser.php\",\n   {\n name: $(\"#create-name\").val(),\n pw: $(\"#create-pw\").val()\n },\n   handleCreateUserJson\n)\n```", "```js\n{\n   \"success\" : true,\n   \"x\" : 510, \n   \"y\" : 360, \n   \"dir\" : 0\n}\n```", "```js\nvar handleCreateUserJson = function(json,status){\n   if (json.success){\n      name = $(\"#create-name\").val();\n      initialPlayerPos.x   = json.x;\n      initialPlayerPos.y   = json.y\n      initialPlayerPos.dir = json.dir;\n      $(\"#create\").css(\"display\",\"none\");\n      gf.startGame(initialize);\n   } else {\n      alert(\"Name already taken!\");\n   }\n}\n```", "```js\n$name = $_GET['name'];\n$pw    = $_GET['pw'];\n```", "```js\n// 1) contect to the DB server\n$link = mysqli_connect('localhost', 'username', 'password'); \n\n// Select the DB\nmysqli_select_db($link, 'rpg');\n\n// query the DB\n$result = mysqli_query($link, 'SELECT * FROM players WHERE name = \"'.$name.'\"');\n```", "```js\n$obj = mysqli_fetch_object($result);\n```", "```js\n$hash = hash('md5', $pw);\n$query = 'INSERT INTO players (name, x, y, dir, pw, state) VALUES(\"'.$name.'\", 510, 360, 0, \"'.$hash.'\", 0)';\nmysqli_query($link, $query);\n```", "```js\n$json['success'] = true;\n$json['x'] = 510;\n$json['y'] = 360;\n$json['dir'] = 0;\n\necho json_encode($json);\n```", "```js\n<?php\n   session_start();\n\n   include 'dbconnect.php';\n\n    // JSON Object \n    $json = array('success'=>false);\n\n   $name = $_GET['name'];\n   $pw    = $_GET['pw'];\n\n   if(isset($name) && isset($pw)) {\n      $hash = hash('md5', $pw);\n      $query = 'SELECT * FROM players WHERE name = \"'.$name.'\"';\n      $result = mysqli_query($link, $query);\n      $obj = mysqli_fetch_object($result);\n      if(!$obj){\n         $query = 'INSERT INTO players (name, x, y, dir, pw, state) VALUES(\"'.$name.'\", 510, 360, 0, \"'.$hash.'\", 0)';\n         $result = mysqli_query($link, $query);\n\n         $_SESSION['name'] = $name;\n         $_SESSION['pw'] = $pw;\n\n            $json['success'] = true;\n            $json['x'] = 510;\n            $json['y'] = 360;\n            $json['dir'] = 0;\n      }\n   }\n\n    echo json_encode($json);\n\n   // Close DB's connection\n   mysqli_close($link);\n?>\n```", "```js\n<?php\n   session_start();\n\n   // MySQL connection\n   include 'dbconnect.php';\n\n    // JSON Object \n    $json = array('connected'=>'false');\n\n   if(isset($_SESSION['name'])) {\n      $query = 'SELECT * FROM players WHERE name = \"'.$_SESSION['name'].'\"';\n      $result = mysqli_query($link, $query);\n      $obj = mysqli_fetch_object($result);\n      if($obj){\n          $json['name'] = $_SESSION['name'];\n            $json['x'] = floatval($obj->x);\n            $json['y'] = floatval($obj->y);\n            $json['dir'] = intval($obj->dir);\n      } else {\n         session_destroy();   \n      }\n\n        mysqli_free_result($result);\n   }\n\n    echo json_encode($json);\n\n    mysqli_close($link);\n?>\n```", "```js\n$.getJSON(\n   \"session.php\",\n   function(json){\n      if(json.connected){\n         name = json.name;\n         initialPlayerPos.x   = json.x;\n         initialPlayerPos.y   = json.y\n         initialPlayerPos.dir = json.dir;\n         $(\"#session-name\").html(name);\n         $(\"#session\").show(0);\n      } else {\n         $(\"#login\").show(0);\n      }\n   }\n);\n```", "```js\n{ \n   \"success\" : true , \n   \"x\" : 154,\n   \"y\" : 1043,\n   \"dir\" :0\n}; \n```", "```js\n{ \n   \"players\" : [\n      {\"name\": \"Alice\", \"x\": 23, \"y\": 112, \"dir\": 0, \"state\": 0},\n      {\"name\": \"Bob\", \"x\": 1004, \"y\": 50, \"dir\": 2, \"state\": 1}\n   ]\n};\n```", "```js\n$query = 'SELECT * FROM players WHERE lastupdate > TIMESTAMPADD(MINUTE, -10, NOW()) AND name <> \"'.$_GET['name'].'\"';\n```", "```js\n$result = mysqli_query($link, $query);\n\nwhile ($obj = mysqli_fetch_object($result)) {\n    array_push($json['players'], array('name'=>$obj->name, 'x'=>floatval($obj->x), 'y'=>floatval($obj->y), 'dir'=>intval($obj->dir), 'state'=>floatval($obj->state)));\n}\n\nmysqli_free_result($result);\n```", "```js\nmysqli_query($link, 'UPDATE players SET x='.$x.', y ='.$y.', dir = '.$dir.', state = '.$state.', lastupdate = NOW() WHERE name=\"'.$name.'\"');\n```", "```js\nthis.getState = function(){\n    switch (state){\n        case \"idle\":\n            return 0;\n        case \"walk\":\n            return 1;\n        case \"strike\":\n            return 2;\n        default:\n            return 0;\n    }\n};\n\nthis.getOrientation = function(){\n    switch (orientation){\n        case \"down\":\n            return 0;\n        case \"up\":\n            return 1;\n        case \"left\":\n            return 2;\n        default:\n            return 3; \n    }\n}; \n```", "```js\n$.getJSON(\n   \"update.php\",\n   {\n      name: name, \n      x: gf.x(player.div), \n      y: gf.y(player.div),\n      dir: player.getOrientation(),\n      state: player.getState()\n   },\n   updateOthers\n);\n```", "```js\nfunction(json,status){      \n   // Here we need to update the position of all the other players\n   var existingOthers = {};\n   var players = json.players\n   for (var i = 0; i < players.length; i++){\n       var other = players[i];\n       existingOthers[\"other_\"+other.name] = true;\n       var avatar, weapon;\n       var div = $(\"#other_\"+other.name);\n       var created = false;\n       if(div.size() > 0){\n          avatar = $(\"#other_\"+other.name+\"_avatar\");\n          weapon = $(\"#other_\"+other.name+\"_weapon\");\n          // update\n          gf.x(div, other.x);\n          gf.y(div, other.y);\n          div.css(\"z-index\",other.y + 160);\n       } else {\n          var created = true;\n          // create other players\n          div = gf.addGroup($(\"#others\"), \"other_\"+other.name, {\n             x:      other.x,\n             y:      other.y\n          })\n          others.push( div );\n          div.css(\"z-index\",other.y + 160);\n          avatar = gf.addSprite(div, \"other_\"+other.name+\"_avatar\", {\n             x:      (192-128)/2,\n                y:      (192-128)/2,\n                width:  128,\n                height: 128\n          });\n          weapon = gf.addSprite(div, \"other_\"+other.name+\"_weapon\", {\n                width:  192,\n                height: 192\n            });\n          div.append(\"<div style='font-family: \\\"Press Start 2P\\\"; background: rgba(0,0,0,0.5); padding: 5px; color: #FFF; width: 192px; position: absolute;'>\"+other.name+\"</div>\");\n          div.data(\"state\", {dir: other.dir, state: other.state});\n       }\n\n       // set the correct animation\n       if(created || other.state !== div.data(\"state\").state || other.dir !== div.data(\"state\").dir){\n          div.data(\"state\", {dir: other.dir, state: other.state}); \n\n          gf.transform(avatar, {flipH: false});\n          gf.transform(weapon, {flipH: false});\n          var pAnim =  playerAnim.stand;\n          var wAnim =  weaponAnim.stand;\n          if(other.state === 1){\n             pAnim = playerAnim.walk;\n            wAnim = weaponAnim.walk;\n          } else if (other.state === 2){\n             pAnim = playerAnim.strike;\n            wAnim = weaponAnim.strike;\n          }\n          if(other.dir === 0){\n             gf.setAnimation(avatar, pAnim.down, true);\n             gf.setAnimation(weapon, wAnim.down, true);\n          } else if (other.dir === 1){\n             gf.setAnimation(avatar, pAnim.up, true);\n             gf.setAnimation(weapon, wAnim.up, true);\n          } else {\n             gf.setAnimation(avatar, pAnim.side, true);\n            gf.setAnimation(weapon, wAnim.side, true);\n            if(other.dir === 2){\n               gf.transform(avatar, {flipH: true});\n               gf.transform(weapon, {flipH: true});\n            }\n          }\n       }\n\n   }\n   // remove gone others\n   for (var i = others.length-1; i >= 0; i--){\n      var other = others[i];\n      if(!existingOthers[other.attr(\"id\")]){\n         other.fadeOut(2000, function(){\n                $(this).remove();\n            });\n            others.splice(i,1);\n      }\n   }\n\n   setTimeout(updateFunction,100);\n}\n```", "```js\n{ \n   \"players\" : [\n      {\"name\": \"Alice\", \"x\": 23, \"y\": 112, \"dir\": 0, \"state\": 0},\n      {\"name\": \"Bob\", \"x\": 1004, \"y\": 50, \"dir\": 2, \"state\": 1}\n   ],\n   \"enemies\" : [\n {\"name\": \"enemy1\", \"type\" : \"ogre\", \"x\": 2014, \"y\": 200},\n {\"name\": \"enemy2\", \"type\" : \"skeleton\", \"x\": 220, \"y\": 560}\n ]\n};\n```", "```js\nSELECT * FROM enemies WHERE life <> 0\n```", "```js\nthis.detectInteraction = function(npcs, enemies, console){\n    if(state == \"strike\" && !interacted){\n        // ... interaction with NPCs here ...\n        for (var i = 0; i < enemies.length; i++){\n            if(gf.spriteCollide(this.hitzone, enemies[i].div)){\n                var enemyRoll = enemies[i].object.defend();\n                var playerRoll = Math.round(Math.random() * 6) + 5;\n\n                if(enemyRoll <= playerRoll){\n                    var dead = enemies[i].object.kill(playerRoll);\n                    console.html(\"You hit the enemy \"+playerRoll+\"pt\");\n                    if (dead) {\n                        console.html(\"You killed the enemy!\");\n                        enemies[i].div.fadeOut(2000, function(){\n                            $(this).remove();\n                        });\n                        enemies.splice(i,1);\n                    }\n                } else {\n                    console.html(\"The enemy countered your attack\");\n                }\n                interacted = true;\n                return;\n            }\n        }\n    }\n```", "```js\nthis.detectInteraction = function(npcs, enemies, console){\n    if(state == \"strike\" && !interacted){\n        // ... interaction with NPCs here ...\n        for (var i = 0; i < enemies.length; i++){\n            if(gf.spriteCollide(this.hitzone, enemies[i])){\n                $.getJSON(\"fight.php\",\n { name : enemies[i].attr(\"id\") },\n function(json){\n if (json.hit){\n if (json.success){\n if(json.killed){\n console.html(\"You killed the enemy!\");\n } else {\n console.html(\"You hit the enemy \"+json.damage+\"pt\");\n }\n } else {\n console.html(\"The enemy countered your attack\");\n }\n }\n })\n                interacted = true;\n                return;\n            }\n        }\n    }\n};\n```", "```js\n$query = 'SELECT * FROM enemies WHERE life <> 0 AND name = \"'.$name.'\"';\n$result = mysqli_query($link, $query);\n$obj = mysqli_fetch_object($result);\nif ($obj) {\n\n    $playerRoll = rand ( 5 , 11 );\n $enemyRoll  = rand ( $obj->defense, $obj->defense + 6);\n\n    $json['hit'] = true;\n\n    if ($playerRoll > $enemyRoll){\n        $json['success'] = true;\n\n        if($playerRoll > $obj->life){\n            $json['killed'] = true;\n\n            // update DB\n            mysqli_query($link, 'UPDATE enemies SET life = 0 WHERE name = \"'.$name.'\"');\n        } else {\n            $json['killed'] = false;\n            $json['damage'] = intval($playerRoll);\n\n            // update DB\n            mysqli_query($link, 'UPDATE enemies SET life = '.($obj->life - $playerRoll).' WHERE name = \"'.$name.'\"');\n        }\n    }\n}\n```"]