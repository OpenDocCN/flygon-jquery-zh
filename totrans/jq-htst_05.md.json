["```js\n<link rel=\"stylesheet\" href=\"css/ui-lightness/jquery-ui-1.10.0.custom.min.css\" />\n\n<link rel=\"stylesheet\" href=\"css/uploader.css\" />\n```", "```js\n<script src=\"img/jquery-ui-1.10.0.custom.min.js\"></script>\n<script src=\"img/uploader.js\"></script>\n```", "```js\n<div id=\"uploader\"></div>\n```", "```js\n<script>\n    $(\"#uploader\").up();\n</script>\n```", "```js\n;(function ($) {\n\n    var defaults = {\n        strings: {\n            title: \"Up - A jQuery uploader\",\n            dropText: \"Drag files here\",\n            altText: \"Or select using the button\",\n            buttons: {\n                choose: \"Choose files\", \n                upload: \"Upload files\" \n            },\n            tableHeadings: [\n                \"Type\", \"Name\", \"Size\", \"Remove all x\"\n            ]\n        }\n    }\n\n    function Up(el, opts) {\n\n        this.config = $.extend(true, {}, defaults, opts);\n        this.el = el;\n        this.fileList = [];\n        this.allXHR = [];\n    }\n\n    $.fn.up = function(options) {\n        new Up(this, options);\n        return this;\n    };\n\n}(jQuery));\n```", "```js\n$(\"#an-element\").up().addClass(\"test\");\n```", "```js\nUp.prototype.init = function() {\n    var widget = this,\n          strings = widget.config.strings,\n          container = $(\"<article/>\", {\n            \"class\": \"up\"\n          }),\n    heading = $(\"<header/>\").appendTo(container),\n    title = $(\"<h1/>\", {\n        text: strings.title\n    }).appendTo(heading),\n    drop = $(\"<div/>\", {\n        \"class\": \"up-drop-target\",\n        html: $(\"<h2/>\", {\n            text: strings.dropText\n        })\n    }).appendTo(container),\n    alt = $(\"<h3/>\", {\n        text: strings.altText\n    }).appendTo(container),\n    upload = $(\"<input/>\", {\n        type: \"file\"\n    }).prop(\"multiple\", true).appendTo(container),\n    select = $(\"<a/>\", {\n        href: \"#\",\n        \"class\": \"button up-choose\",\n        text: strings.buttons.choose\n    }).appendTo(container),\n    selected = $(\"<div/>\", {\n        \"class\": \"up-selected\"\n    }).appendTo(container),\n    upload = $(\"<a/>\", {\n        href: \"#\",\n        \"class\": \"button up-upload\",\n        text: strings.buttons.upload\n    }).appendTo(container);\n\n    widget.el.append(container);\n\n}\n```", "```js\n$.fn.up = function(options) {\n new Up(this, options).init();\n    return this;\n};\n```", "```js\narticle.up { width:90%; padding:5%; }\narticle.up input { display:none; }\n.up-drop-target { \n    height:10em; border:5px dashed #ccc; border-radius:5px; \n    margin-bottom:1em; text-align:center; \n}\n.up-drop-target h2 { \n    margin-top:-.5em; position:relative; top:50%; \n}\n.up-selected { margin:1em 0; border-bottom:1px solid #ccc; }\n```", "```js\nwidget.el.on(\"click\", \"a.up-choose\", function(e) {\n    e.preventDefault();\n\n    widget.el.find(\"input[type='file']\").click();\n});\n\nwidget.el.on(\"drop change dragover\", \"article.up\", function(e) {\n\n    if (e.type === \"dragover\") {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    } else if (e.type === \"drop\") {\n        e.preventDefault();\n        e.stopPropagation();\n        widget.files = e.originalEvent.dataTransfer.files;\n    } else {\n        widget.files = widget.el\n        .find(\"input[type='file']\")[0]\n        .files;\n    }\n\n    widget.handleFiles();\n});\n```", "```js\nUp.prototype.handleFiles = function() {\n\n    var widget = this,\n          container = widget.el.find(\"div.up-selected\"),\n          row = $(\"<tr/>\"),\n          cell = $(\"<td/>\"),\n          remove = $(\"<a/>\", {\n             href: \"#\"\n          }),\n    table;\n\n    if (!container.find(\"table\").length) {\n        table = $(\"<table/>\");\n\n        var header = row.clone().appendTo(table),\n              strings = widget.config.strings.tableHeadings;\n\n        $.each(strings, function(i, string) {\n                var cs = string.toLowerCase().replace(/\\s/g, \"_\"),\n                      newCell = cell.clone()\n                                            .addClass(\"up-table-head \" + cs)\n                                            .appendTo(header);\n\n                if (i === strings.length - 1) {\n                    var clear = remove.clone()\n                                                 .text(string)\n                                                .addClass(\"up-remove-all\");\n\n                    newCell.html(clear).attr(\"colspan\", 2);\n                } else {\n                    newCell.text(string);\n                }\n            });\n        } else {\n            table = container.find(\"table\");\n        }\n\n        $.each(widget.files, function(i, file) {\n        var fileRow = row.clone(),\n              filename = file.name.split(\".\"),\n              ext = filename[filename.length - 1],\n              del = remove.clone()\n                                   .text(\"x\")\n                                   .addClass(\"up-remove\");\n\n        cell.clone()\n              .addClass(\"icon \" + ext)\n              .appendTo(fileRow);\n\n        cell.clone()\n              .text(file.name).appendTo(fileRow);\n        cell.clone()\n             .text((Math.round(file.size / 1024)) + \" kb\")\n             .appendTo(fileRow);\n\n        cell.clone()\n              .html(del).appendTo(fileRow);\n        cell.clone()\n              .html(\"<div class='up-progress'/>\")\n              .appendTo(fileRow);\n\n        fileRow.appendTo(table);\n\n        widget.fileList.push(file);\n    });\n\n    if (!container.find(\"table\").length) {\n        table.appendTo(container);\n    }\n}\n```", "```js\n.up-selected table {\n    width:100%; border-spacing:0; margin-bottom:1em;\n}\n.up-selected td {\n    padding:1em 1% 1em 0; border-bottom:1px dashed #ccc;\n    font-size:1.2em;\n}\n.up-selected td.type { width:60px; }\n.up-selected td.name { width:45%; }\n.up-selected td.size { width:25%; }\n.up-selected td.remove_all_x { width:20%; }\n\n.up-selected tr:last-child td { border-bottom:none; }\n.up-selected a {\n    font-weight:bold; text-decoration:none;\n}\n.up-table-head { font-weight:bold; }\n.up-remove-all { color:#ff0000; }\n.up-remove {\n    display:block; width:17px; height:17px;\n    border-radius:500px; text-align:center;\n    color:#fff; background-color:#ff0000;\n}\n.icon { \n    background:url(../img/page_white.png) no-repeat 0 50%; \n}\n.doc, .docx { \n    background:url(../img/doc.png) no-repeat 0 50%; \n}\n.exe { background:url(../img/exe.png) no-repeat 0 50%; }\n.html { background:url(../img/html.png) no-repeat 0 50%; }\n.pdf { background:url(../img/pdf.png) no-repeat 0 50%; }\n.png { background:url(../img/png.png) no-repeat 0 50%; }\n.ppt, .pptx { \n    background:url(../img/pps.png) no-repeat 0 50%; \n}\n.txt { background:url(../img/txt.png) no-repeat 0 50%; }\n.zip { background:url(../img/zip.png) no-repeat 0 50%; }\n```", "```js\nwidget.el.on(\"click\", \"td a\", function(e) {\n\n    var removeAll = function() {\n        widget.el.find(\"table\").remove();\n        widget.el.find(\"input[type='file']\").val(\"\");\n        widget.fileList = [];\n    }\n\n    if (e.originalEvent.target.className == \"up-remove-all\") {\n        removeAll();\n    } else {\n        var link = $(this),\n              removed,\n              filename = link.closest(\"tr\")\n                                     .children()\n                                     .eq(1)\n                                     .text();\n\n        link.closest(\"tr\").remove();\n\n        $.each(widget.fileList, function(i, item) {\n        if (item.name === filename) {\n            removed = i;\n        }\n    });\n    widget.fileList.splice(removed, 1);\n\n    if (widget.el.find(\"tr\").length === 1) {\n        removeAll();\n    } \n  }\n}); \n```", "```js\nUp.prototype.initProgress = function() {\n\n    this.el.find(\"div.up-progress\").each(function() {\n        var el = $(this);\n\n        if (!el.hasClass(\"ui-progressbar\")) {\n            el.progressbar();\n        }\n    });\n}\n```", "```js\nwidget.initProgress();\n```", "```js\nUp.prototype.handleProgress = function(e, progress) {\n\n    var complete = Math.round((e.loaded / e.total) * 100);\n\n    progress.progressbar(\"value\", complete);\n}\n```", "```js\n.up-progress { \n    height:1em; width:100px; position:relative; top:4px; \n}\n```", "```js\nwidget.el.on(\"click\", \"a.up-upload\", function(e) {\n    e.preventDefault();\n\n  widget.uploadFiles();\n}); \n```", "```js\nUp.prototype.uploadFiles = function() {\n    var widget = this,\n    a = widget.el.find(\"a.up-upload\");\n\n    if (!a.hasClass(\"disabled\")) {\n\n        a.addClass(\"disabled\");\n\n        $.each(widget.fileList, function(i, file) {\n            var fd = new FormData(),\n                  prog = widget.el\n                                        .find(\"div.up-progress\")\n                                        .eq(i);\n\n            fd.append(\"file-\" + i, file);\n\n            widget.allXHR.push($.ajax({\n                type: \"POST\",\n                url: \"/upload.asmx/uploadFile\",\n                data: fd,\n                contentType: false,\n                processData: false,\n                xhr: function() {\n\n                    var xhr = jQuery.ajaxSettings.xhr();\n\n                    if (xhr.upload) {\n                        xhr.upload.onprogress = function(e) {\n                            widget.handleProgress(e, prog);\n                        }\n                    }\n\n                    return xhr;\n                }\n            }));\n        });     \n    }\n}\n```", "```js\n.done(function() {\n\n    var parent = prog.parent(),\n    prev = parent.prev();\n\n    prev.add(parent).empty();\n    prev.text(\"File uploaded!\");\n});\n```", "```js\n$.when.apply($, widget.allXHR).done(function() {\n    widget.el.find(\"table\").remove();\n    widget.el.find(\"a.up-upload\").removeClass(\"disabled\");\n});\n```"]