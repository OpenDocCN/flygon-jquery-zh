["```js\n{ \n    name: \"Hydrogen\", \n    number: 1, \n    symbol: \"H\", \n    weight: 1.00794, \n    discovered: 1766,\n    state: \"Gas\"\n}\n```", "```js\n$(function () {\n\n    var vm = {\n        elements: ko.observableArray(data.elements)\n    }\n\n    ko.applyBindings(vm);\n\n});\n```", "```js\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Atomic Number</th>\n            <th>Symbol</th>\n            <th>Atomic Weight</th>\n            <th>Discovered</th>\n        </tr>\n    </thead>\n    <tbody data-bind=\"foreach: elements\">\n        <tr>\n            <td data-bind=\"text: name\"></td>\n            <td data-bind=\"text: number\"></td>\n            <td data-bind=\"text: symbol\"></td>\n            <td data-bind=\"text: weight\"></td>\n            <td data-bind=\"text: discovered\"></td>\n        </tr>\n    </tbody>\n</table>\n```", "```js\ntable { \n    width:650px; margin:auto; border-collapse:collapse;\n}\ntbody { border-bottom:2px solid #000; }\ntbodytr:nth-child(odd) td { background-color:#e6e6e6; }\nth, td { \n    padding:10px 50px 10px 0; border:none; cursor:default;\n}\nth { \n    border-bottom:2px solid #000;cursor:pointer;\n    position:relative;\n}\ntd:first-child, th:first-child { padding-left:10px; }\ntd:last-child { padding-right:10px; }\n```", "```js\n<tr data-bind=\"click: sort\">\n    <th data-bind=\"css: nameOrder\">Name</th>\n    <th data-bind=\"css: numberOrder\">Atomic Number</th>\n    <th data-bind=\"css: symbolOrder\">Symbol</th>\n    <th data-bind=\"css: weightOrder\">Atomic Weight</th>\n    <th data-bind=\"css: discoveredOrder\">Discovered</th>\n</tr>\n```", "```js\nnameOrder: ko.observable(\"ascending\"),\nnumberOrder: ko.observable(\"ascending\"),\nsymbolOrder: ko.observable(\"ascending\"),\nweightOrder: ko.observable(\"ascending\"),\ndiscoveredOrder: ko.observable(\"ascending\"),\n```", "```js\nsort: function (viewmodel, e) {\n\n    var orderProp = $(e.target).attr(\"data-bind\")\n                               .split(\" \")[1],\n\n        orderVal = viewmodel[orderProp](),\n        comparatorProp = orderProp.split(\"O\")[0];\n\n    viewmodel.elements.sort(function (a, b) {\n\n        var propA = a[comparatorProp],\n            propB = b[comparatorProp];\n\n        if (typeof (propA) !== typeof (propB)) {\n\n            propA = (typeof (propA) === \"string\") ? 0 :propA;\n            propB = (typeof (propB) === \"string\") ? 0 :propB;\n        }\n\n        if (orderVal === \"ascending\") {\n            return (propA === propB) ? 0 : (propA<propB) ? -1 : 1;\n\n        } else {\n            return (propA === propB) ? 0 : (propA<propB) ? 1 : -1;\n\n        }\n\n    });\n\n    orderVal = (orderVal === \"ascending\") ? \"descending\" : \"ascending\";\n\n    viewmodel[orderProp](orderVal);\n\n    for (prop in viewmodel) {\n        if (prop.indexOf(\"Order\") !== -1 && prop !== orderProp) {\n            viewmodel[prop](\"ascending\");\n        }\n    }\n}\n```", "```js\n.ascending:hover:after { \n    content:\"\"; display:block; border-width:7px; \n    border-style:solid; border-left-color:transparent; \n    border-right-color:transparent; border-top-color:#000;\n    border-bottom:none; position:absolute; margin-top:-3px; \n    right:15px; top:50%; \n}\n.descending:hover:after {\n    content:\"\"; display:block; border-width:7px; \n    border-style:solid; border-left-color:transparent; \n    border-right-color:transparent; border-bottom-color:#000; \n    border-top:none; position:absolute; margin-top:-3px; \n    right:15px; top:50%; \n}\n```", "```js\nproperty();\n```", "```js\nproperty(value);\n```", "```js\n<tfoot>\n    <tr>\n        <tdcolspan=\"5\">\n            <div id=\"paging\" class=\"clearfix\">\n                <label for=\"perPage\">Items per page:</label>\n                <select id=\"perPage\" data-bind=\"value: pageSize\">\n                    <option value=\"10\">10</option>\n                    <option value=\"30\">30</option>\n                    <option value=\"all\">All</option>\n                </select>\n            </div>\n        </td>\n    </tr>\n</tfoot>\n```", "```js\n<tbody data-bind=\"foreach: elementsPaged\">\n```", "```js\npageSize: ko.observable(10),\ncurrentPage: ko.observable(0),\nelementsPaged: ko.observableArray(),\n```", "```js\nvm.createPage = ko.computed(function () {\n\n    if (this.pageSize() === \"all\") {\n        this.elementsPaged(this.elements.slice(0));\n    } else {\n        var pagesize = parseInt(this.pageSize(), 10),\n            startIndex = pagesize * this.currentPage(),\n            endIndex = startIndex + pagesize;\n\n        this.elementsPaged(this.elements.slice(startIndex,endIndex));\n    }\n\n}, vm);\n```", "```js\n<nav>\n    <a href=\"#\" title=\"Previous page\" \n    data-bind=\"click: goToPrevPage\">&laquo;</a>\n\n    <a href=\"#\" title=\"Next page\" \n    data-bind=\"click: goToNextPage\">&raquo;</a>\n</nav>\n```", "```js\ntotalPages: function () {\n    var totalPages = this.elements().length / this.pageSize() || 1;\n        return Math.ceil(totalPages);\n},\ngoToNextPage: function () {\n    if (this.currentPage() < this.totalPages() - 1) {\n        this.currentPage(this.currentPage() + 1);\n    }\n},\ngoToPrevPage: function () {\n    if (this.currentPage() > 0) {\n        this.currentPage(this.currentPage() - 1);\n    }\n}\n```", "```js\ntfoot label, tfoot select, tfootnav {\n    margin-right:4px; float: left; line-height:24px; \n}\ntfoot select { margin-right:20px; }\ntfootnav a { \n    display:inline-block; font-size:30px; line-height:20px; \n    text-decoration:none; color:#000; \n}\n```", "```js\npages: ko.observableArray(),\n```", "```js\nchangePage: function (obj, e) {\n    var el = $(e.target),\n        newPage = parseInt(el.text(), 10) - 1;\n\n    vm.currentPage(newPage);\n}\n```", "```js\nvm.createPages = ko.computed(function () {\n\n    var tmp = [];\n\n    for (var x = 0; x < this.totalPages(); x++) {\n        tmp.push({ num: x + 1 });\n    }\n\n    this.pages(tmp);\n\n}, vm);\n```", "```js\n<ul id=\"pages\" data-bind=\"foreach: pages\">\n    <li>\n        <a href=\"#\" data-bind=\"text: num, \n        click: $parent.changePage\"></a>\n    </li>\n</ul>\n```", "```js\ntfoot nav ul { margin:3px 0 0 10px; }\ntfoot nav ul, tfootnav li { float:left; }\ntfoot nav li { margin-right:10px; }\ntfoot nav li a { font-size:20px; }\n```", "```js\nmanageClasses: function () {\n    var nav = $(\"#paging\").find(\"nav\"),\n        currentpage = this.currentPage();\n\n    nav.find(\"a.active\")\n       .removeClass(\"active\")\n       .end()\n       .find(\"a.disabled\")\n       .removeClass(\"disabled\"); \n\n    if (currentpage === 0) {\n       nav.children(\":first-child\").addClass(\"disabled\");\n    } else if (currentpage === this.totalPages() - 1) {\n        nav.children(\":last-child\").addClass(\"disabled\");\n    }\n\n    $(\"#pages\").find(\"a\")\n               .eq(currentpage)\n               .addClass(\"active\");\n}\n```", "```js\n.manageClasses();\n```", "```js\nvm.manageClasses();\n```", "```js\ntfoot nav a.disabled, tfoot nav a.disabled:hover { \n    opacity: .25; cursor: default; color:#aaa;\n}\ntfoot nav li a.active, tfoot a:hover { color:#aaa; }\n```", "```js\n<select id=\"perPage\" data-bind=\"value: pageSize, event: { \n change: goToFirstPage\n}\">\n```", "```js\ngoToFirstPage: function () {\n    this.currentPage(0);\n}\n```", "```js\nstates: ko.observableArray(),\n```", "```js\noriginalElements: null,\n```", "```js\nvar tmpArr = [],\n      refObj = {};\n\ntmpArr.push({ state: \"Filter by...\" });\n\n$.each(vm.elements(), function(i, item) {\n\n    var state = item.state;\n\n    if (!refObj.hasOwnProperty(state)) {\n\n        var tmpObj = {state: state};\n        refObj[state] = state;\n        tmpArr.push(tmpObj);\n    }\n});\n\nvm.states(tmpArr);\n```", "```js\n<div class=\"filter clearfix\">\n    <label for=\"states\">Filter by:</label>\n    <select id=\"states\" data-bind=\"foreach: states, event: { \n        change: filterStates\n    }\">\n        <option data-bind=\"value: state, text: state\">\n        </option>\n    </select>\n</div>\n```", "```js\nfilterStates: function (obj, e) {\n\n    if (e.originalEvent.target.selectedIndex !== 0) {\n\n        var vm = this,\n            tmpArr = [],\n            state = e.originalEvent.target.value;\n\n        vm.originalElements = vm.elements();\n\n        $.each(vm.elements(), function (i, item) {\n            if (item.state === state) {\n                tmpArr.push(item);\n            }\n        });\n\n        vm.elements(tmpArr).currentPage(0);\n\n        var label = $(\"<span/>\", {\n            \"class\": \"filter-label\",\n            text: state\n        });\n        $(\"<a/>\", {\n            text: \"x\",\n            href: \"#\",\n            title: \"Remove this filter\"\n        }).appendTo(label).on(\"click\", function () {\n\n            $(this).parent().remove();\n            $(\"#states\").show().prop(\"selectedIndex\", 0);\n            vm.elements(vm.originalElements).currentPage(0);\n\n        });\n\n        label.insertBefore(\"#states\").next().hide();\n    }\n}\n```", "```js\ntfoot .filter { float:right; }\ntfoot .filter label { \n    display:inline-block; height:0; line-height:0; \n    text-indent:-9999em; overflow:hidden; \n}\ntfoot .filter select { margin-right:0; float:right; }\ntfoot .filter span { \n    display:block; padding:0 7px; border:1px solid #abadb3;\n    border-radius:3px; float:right; line-height:24px;\n}\ntfoot .filter span a { \n    display:inline-block; margin-left:4px; color:#ff0000;\n    text-decoration:none; font-weight:bold;\n}\n```"]