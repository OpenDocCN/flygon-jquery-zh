["```js\njQuery.fn.extend({\n  on: function( types, selector, data, fn ) {\n    return on( this, types, selector, data, fn );\n  }\n});\n\nfunction on( elem, types, selector, data, fn, one ) {\n\n  /* 55 lines of code handling the method overloads */\n  return elem.each( function() {\n    jQuery.event.add( this, types, fn, data, selector );\n  } );\n}\n```", "```js\n trimmed down version of that method, where some code related to the technical implementation of jQuery and not related to the Observer Pattern has been removed for clarity:\n```", "```js\nadd: function( elem, types, handler, data, selector ) { \n    /* ... 4 lines of code ... */\n        elemData = dataPriv.get( elem ); \n    /* ... 13 lines of code ... */\n\n    // Make sure that the handler has a unique ID, \n    // used to find/remove it later \n if ( !handler.guid ) { \n handler.guid = jQuery.guid++; \n } \n\n    // Init the element's event structure and main handler, \n    // if this is the first \n if ( !( events = elemData.events ) ) { \n events = elemData.events = {}; \n } \n    /* ... 9 lines of code ... */ \n\n    // Handle multiple events separated by a space \n    types = ( types || \"\" ).match( rnotwhite ) || [ \"\" ]; \n    t = types.length; \n    while ( t-- ) { \n        /* ... 30 lines of code ... */ \n\n        // Init the event handler queue if we're the first \n        if ( !( handlers = events[ type ] ) ) { \n handlers = events[ type ] = []; \n            handlers.delegateCount = 0; \n\n            // Only use addEventListener if the special events handler\n            // returns false \n            if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n if ( elem.addEventListener ) { \n elem.addEventListener( type, eventHandle ); \n } \n            } \n        }\n\n        /* ... 9 lines of code ... */ \n\n        // Add to the element's handler list, delegates in front \n if ( selector ) { \n handlers.splice( handlers.delegateCount++, 0, handleObj ); \n } else { \n handlers.push( handleObj ); \n }\n        /* ... 3 lines of code ... */\n    } \n}\n```", "```js\n$(document).ready(function() {\n    /* this code will execute only after the page has been fully loaded */ \n})\n```", "```js\njQuery.fn.ready = function( fn ) { \n  // Add the callback \n  jQuery.ready.promise().done( fn ); \n\n  return this; \n};\n/* â€¦ a lot lines of code in between */\njQuery.ready.promise = function( obj ) { \n  if ( !readyList ) { \n\n    readyList = jQuery.Deferred(); \n\n    // Catch cases where $(document).ready() is called\n    // after the browser event has already occurred.\n    // Support: IE9-10 only\n    // Older IE sometimes signals \"interactive\" too soon\n    if ( document.readyState === \"complete\" || ( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n      // Handle it asynchronously to allow ... to delay ready \n      window.setTimeout( jQuery.ready ); \n\n    } else { \n      // Use the handy event callback \n document.addEventListener( \"DOMContentLoaded\", completed ); \n\n      // A fallback to window.onload, that will always work \n window.addEventListener( \"load\", completed ); \n    } \n  } \n  return readyList.promise( obj ); \n};\n```", "```js\n<!DOCTYPE html> \n<html> \n  <head> \n    <title>Dashboard Example</title> \n    <link rel=\"stylesheet\" type=\"text/css\" href=\"dashboard-example.css\"> \n  </head> \n  <body> \n    <h1 id=\"pageHeader\">Dashboard Example</h1> \n\n    <div class=\"dashboardContainer\"> \n      <section class=\"dashboardCategories\"> \n        <select id=\"categoriesSelector\"> \n          <option value=\"0\" selected>Products</option> \n          <option value=\"1\">Sales</option> \n          <option value=\"2\">Advertisements</option> \n        </select> \n        <section class=\"dashboardCategory\"> \n          <button>Product A</button> \n          <button>Product B</button> \n          <button>Product C</button> \n          <button>Product D</button> \n          <button>Product E</button> \n        </section> \n        <section class=\"dashboardCategory hidden\"> \n          <button>1st week</button> \n          <button>2nd week</button> \n          <button>3rd week</button> \n          <button>4th week</button> \n        </section> \n        <section class=\"dashboardCategory hidden\"> \n          <button>Advertisement 1</button> \n          <button>Advertisement 2</button> \n          <button>Advertisement 3</button> \n        </section> \n        <div class=\"clear\"></div> \n      </section> \n\n      <section class=\"boxContainer\"> \n        <div class=\"boxsizer\"> \n          <article class=\"box\"> \n            <header class=\"boxHeader\"> \n              Hint! \n              <button class=\"boxCloseButton\">&#10006;</button> \n            </header> \n            Press the buttons above to add information boxes... \n          </article> \n        </div> \n      </section> \n      <div class=\"clear\"></div> \n    </div> \n\n    <script type=\"text/javascript\" src=\"img/jquery.js\"></script> \n    <script type=\"text/javascript\" src=\"img/dashboard-example.js\">\n    </script> \n  </body> \n</html>\n```", "```js\n.dashboardCategories { \n    margin-bottom: 10px; \n} \n\n.dashboardCategories select, \n.dashboardCategories button { \n    display: block; \n    width: 200px; \n    padding: 5px 3px; \n    border: 1px solid #333; \n    margin: 3px 5px; \n    border-radius: 3px; \n    background-color: #FFF; \n    text-align: center; \n    box-shadow: 0 1px 1px #777; \n    cursor: pointer; \n} \n\n.dashboardCategories select:hover, \n.dashboardCategories button:hover { \n    background-color: #DDD; \n} \n\n.dashboardCategories button { \n    float: left; \n} \n\n.box { \n    padding: 7px 10px; \n    border: solid 1px #333; \n    margin: 5px 3px; \n    box-shadow: 0 1px 2px #777; \n} \n\n.boxsizer { \n    float: left; \n    width: 33.33%; \n} \n\n.boxHeader { \n    padding: 3px 10px;\n    margin: -7px -10px 7px;\n    background-color: #AAA; \n    box-shadow: 0 1px 1px #999; \n} \n\n.boxCloseButton { \n    float: right; \n    height: 20px; \n    width: 20px; \n    padding: 0; \n    border: 1px solid #000; \n    border-radius: 3px; \n    background-color: red; \n    font-weight: bold; \n    text-align: center; \n    color: #FFF; \n    cursor: pointer; \n} \n\n.clear { clear: both; } \n.hidden { display: none; }\n```", "```js\n$(document).ready(function() { \n\n    $('#categoriesSelector').change(function() { \n        var $selector = $(this); \n        var selectedIndex = +$selector.val(); \n        var $dashboardCategories = $('.dashboardCategory'); \n        var $selectedItem = $dashboardCategories.eq(selectedIndex).show(); \n        $dashboardCategories.not($selectedItem).hide();\n    }); \n\n    function setupBoxCloseButton($box) { \n        $box.find('.boxCloseButton').click(function() { \n            $(this).closest('.boxsizer').remove(); \n        }); \n    } \n\n    // make the close button of the hint box work \n    setupBoxCloseButton($('.box')); \n\n    $('.dashboardCategory button').on('click', function() { \n        var $button = $(this); \n        var boxHtml = '<div class=\"boxsizer\"><article class=\"box\">' + \n                '<header class=\"boxHeader\">' + \n                    $button.text() + \n                    '<button class=\"boxCloseButton\">&#10006;' + \n                    '</button>' + \n                '</header>' + \n                'Information box regarding ' + $button.text() + \n            '</article></div>'; \n        $('.boxContainer').append(boxHtml); \n        setupBoxCloseButton($('.box:last-child')); \n    });\n\n}); \n```", "```js\n<article class=\"box\"> \n    <header class=\"boxHeader\"> \n        Hint! \n <button onclick=\"closeInfoBox();\" \n                class=\"boxCloseButton\">&#10006;</button> \n    </header> \n    Press the buttons above to add information boxes... \n</article>\n```", "```js\nwindow.closeInfoBox = function() { \n    $(this).closest('.boxsizer').remove(); \n};\n```", "```js\nfunction setupBoxCloseButton($box) { \n    var $closeButtons = $box.find('.boxCloseButton'); \n    for (var i = 0; i < $closeButtons.length; i++) { \n        $closeButtons[i].onclick = function() { \n this.onclick = null; \n            $(this).closest('.boxsizer').remove(); \n        }; \n    } \n}\n```", "```js\n$(document).ready(function() { \n  $('.dashboardCategory button').on('click', function() { \n    var $button = $(this); \n    $button.prop('disabled', true); \n\n    setTimeout(function() { \n      $button.prop('disabled', false); \n    }, 700); \n  }); \n});\n```", "```js\n$(document).ready(function() { \n\n    $('#categoriesSelector').change(function() { \n        var $selector = $(this); \n        var selectedIndex = +$selector.val(); \n        var $dashboardCategories = $('.dashboardCategory'); \n        var $selectedItem = $dashboardCategories.eq(selectedIndex).show(); \n        $dashboardCategories.not($selectedItem).hide(); \n    }); \n\n $('.dashboardCategories').on('click', 'button', function() { \n        var $button = $(this); \n        var boxHtml = '<div class=\"boxsizer\"><article class=\"box\">' + \n                '<header class=\"boxHeader\">' + \n                    $button.text() + \n                    '<button class=\"boxCloseButton\">&#10006;' + \n                    '</button>' + \n                '</header>' + \n                'Information box regarding ' + $button.text() + \n            '</article></div>'; \n        $('.boxContainer').append(boxHtml); \n    }); \n\n $('.boxContainer').on('click', '.boxCloseButton', function() { \n        $(this).closest('.boxsizer').remove(); \n    }); \n\n});\n```"]