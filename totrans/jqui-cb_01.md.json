["```js\n<div id=\"accordion\">\n    <h3>Section 1</h3>\n    <div>\n        <p>Section 1 content</p>\n    </div>\n    <h3>Section 2</h3>\n    <div>\n        <p>Section 2 content</p>\n    </div>\n    <h3>Section 3</h3>\n    <div>\n        <p>Section 3 content</p>\n    </div>\n    <h3>Section 4</h3>\n    <div>\n        <p>Section 4 content</p>\n    </div>\n</div>\n```", "```js\n$(function() {\n\n    $( \"#accordion\" ).accordion({\n        collapsible: true\n    });\n\n});\n```", "```js\n(function( $, undefined ) {\n\n$.widget( \"ab.accordion\", $.ui.accordion, {\n\n    _create: function () {\n\n        this._super( \"_create\" );\n        this._on( this.headers, { keydown: \"_tabkeydown\" } );\n\n    },\n\n    _tabkeydown: function ( event ) {\n\n        if ( event.altKey || event.ctrlKey ) {\n            return;\n         }\n\n        if ( event.keyCode !== $.ui.keyCode.TAB ) {\n            return;\n        }\n\n        var headers = this.headers,\n            headerLength = headers.length,\n            headerIndex = headers.index( event.target ),\n            toFocus = false;\n\n        if ( event.shiftKey && headerIndex - 1 >= 0 ) {\n            toFocus = headers[ headerIndex - 1 ];\n        }\n\n        if ( !event.shiftKey && headerIndex + 1 < headerLength ) {\n            toFocus = headers[ headerIndex + 1 ];\n        }\n\n        if ( toFocus ) {\n\n            $( event.target ).attr( \"tabIndex\", -1 );\n            $( toFocus ).attr( \"tabIndex\", 0 );\n            toFocus.focus();\n            event.preventDefault();\n\n        }\n\n    }\n\n});\n\n})( jQuery );\n\n$(function() {\n\n    $( \"#accordion\" ).accordion({\n        collapsible: true\n    });\n\n});\n```", "```js\n<div id=\"accordion\">\n    <h3>Section 1</h3>\n    <div>\n        <p>Section 1 content</p>\n    </div>\n    <h3>Section 2</h3>\n    <div>\n        <p>Section 2 content</p>\n    </div>\n    <h3>Section 3</h3>\n    <div>\n        <p>Section 3 content</p>\n    </div>\n    <h3>Section 4</h3>\n     <div>\n        <ul>\n            <li>First item</li>\n            <li>Second item</li>\n            <li>Third item</li>\n            <li>Fourth item</li>\n        </ul>\n     </div>\n</div>\n```", "```js\n$(function() {\n    $(\"#accordion\").accordion();\n});\n```", "```js\n(function( $, undefined ) {\n\n$.widget( \"ab.accordion\", $.ui.accordion, {\n\n    refresh: function() {\n\n        this._super( \"refresh\" );\n\n        if ( this.options.heightStyle !== \"content\" ) {\n            return;\n        }\n\n        this.headers.next().each( function() {\n\n            if ( $( this ).css( \"height\" ) ) {\n                $( this ).css( \"height\", \"\" );\n            }\n\n        });\n\n    }\n\n});\n\n})(jQuery);\n\n$(function() {\n\n    $( \"#accordion\" ).accordion();\n\n    for ( var i=0; i<20; i++ ){\n        $( \"ul\" ).append( \"<li>nth item</li>\" );\n    }\n\n    $( \"#accordion\" ).accordion( \"option\", \"heightStyle\", \"content\" )\n                     .accordion( \"refresh\" );\n\n});\n```", "```js\n( function( $, undefined ) {\n\n$.widget( \"ab.accordion\", $.ui.accordion, {\n\n    _create: function () {\n\n        this._super( \"_create\" );\n\n        this.headers.next()\n                    .resizable( { handles: \"s\" } )\n                    .css( \"overflow\", \"hidden\" );\n\n    },\n\n    _destroy: function () {\n\n        this._super( \"_destroy\" );\n\n        this.headers.next()\n                    .resizable( \"destroy\" )\n                    .css( \"overflow\", \"\" );\n\n    }\n\n});\n\n})( jQuery );\n\n$( function() {\n\n    $( \"#accordion\" ).accordion();\n\n});\n```", "```js\n(function( $, undefined ) {\n\n$.widget( \"ab.accordion\", $.ui.accordion, {\n\n    options: {\n        resizable: true\n    },\n\n    _create: function () {\n\n        this._super( \"_create\" );\n\n        if ( !this.options.resizable ) {\n            return;\n        }\n\n        this.headers.next()\n                    .resizable( { handles: \"s\" } )\n                    .css( \"overflow\", \"hidden\" );\n    },\n\n    _destroy: function () {\n\n        this._super( \"_destroy\" );\n\n        if ( !this.options.resizable ) {\n            return;\n        }\n\n        this.headers.next()\n                    .resizable( \"destroy\" )\n                    .css( \"overflow\", \"\" );\n\n    },\n\n});\n\n})( jQuery );\n\n$(function() {\n\n    $( \"#accordion\" ).accordion( { resizable: false } );\n\n});\n```", "```js\n.ui-accordion .ui-accordion-header {\n    margin-top: 4px;\n}\n```", "```js\n( function( $, undefined ) {\n\n$.widget( \"ab.accordion\", $.ui.accordion, {\n\n    options: {\n        sortable: false\n    },\n\n    _create: function () {\n\n        this._super( \"_create\" );\n\n        if ( !this.options.sortable ) {\n            return;\n        }\n\n        this.headers.each( function() {\n            $( this ).next()\n                     .addBack()\n                     .wrapAll( \"<div/>\" );\n        });\n\n        this.element.sortable({\n            axis: \"y\",\n            handle: \"h3\",\n            stop: function( event, ui ) {\n                ui.item.children( \"h3\" )\n                       .triggerHandler( \"focusout\" );\n            }\n        });        \n\n    },\n\n    _destroy: function () {\n\n        if ( !this.options.sortable ) {\n            this._super( \"_destroy\" );\n            return;\n        }\n\n        this.element.sortable( \"destroy\" );\n\n        this.headers.each( function () {\n            $( this ).unwrap( \"<div/>\" );\n        });\n\n        this._super( \"_destroy\" );\n\n    }\n\n});\n\n})( jQuery );\n\n$( function() {\n\n    $( \"#accordion\" ).accordion( { sortable: true } );\n\n});\n```", "```js\n<div id=\"target-accordion\" style=\"width: 30%\">\n    <h3>Section 1</h3>\n    <div>\n        <p>Section 1 content</p>\n    </div>\n    <h3>Section 2</h3>\n    <div>\n        <p>Section 2 content</p>\n    </div>\n    <h3>Section 3</h3>\n    <div>\n        <p>Section 3 content</p>\n    </div>\n</div>\n<p></p>\n<div id=\"accept-accordion\" style=\"width: 30%\">\n    <h3>Section 4</h3>\n    <div>\n        <p>Section 4 content</p>\n    </div>\n    <h3>Section 5</h3>\n    <div>\n        <p>Section 5 content</p>\n    </div>\n    <h3>Section 6</h3>\n    <div>\n        <p>Section 6 content</p>\n    </div>\n</div>\n```", "```js\n(function( $, undefined ) {\n\n$.widget( \"ui.accordion\", $.ui.accordion, {\n\n    options: {\n         target: false,\n         accept: false,\n         header: \"> h3, > div > h3\"\n    },\n\n    _teardownEvents: function( event ) {\n\n        var self = this,\n            events = {};\n\n        if ( !event ) {\n            return;\n        }\n\n        $.each( event.split(\" \"), function( index, eventName ) {\n            self._off( self.headers, eventName );\n        });\n\n    },\n\n    _createTarget: function() {\n\n        var self = this,\n            draggableOptions = {\n                handle: \"h3\",\n                helper: \"clone\",\n                connectToSortable: this.options.target,\n            };\n\n        this.headers.each( function() {\n            $( this ).next()\n                     .addBack()\n                     .wrapAll( \"<div/>\" )\n                     .parent()\n                     .draggable( draggableOptions );\n        });\n    },\n\n    _createAccept: function() {\n\n        var self = this,\n            options = self.options,\n            target = $( options.accept ).data( \"uiAccordion\" );\n\n        var sortableOptions = {\n\n            stop: function ( event, ui ) {\n\n                var dropped       = $(ui.item),\n                    droppedHeader = dropped.find(\"> h3\"),\n                    droppedClass  = \"ui-draggable\",\n                    droppedId;\n\n                if ( !dropped.hasClass( droppedClass ) ) {\n                    return;\n                }\n\n                // Get the original section ID, reset the cloned ID.\n                droppedId = droppedHeader.attr( \"id\" );\n                droppedHeader.attr( \"id\", \"\" );\n\n                // Include dropped item in headers\n                self.headers = self.element.find( options.header )\n\n                // Remove old event handlers\n                self._off( self.headers, \"keydown\" );\n                self._off( self.headers.next(), \"keydown\" );\n                self._teardownEvents( options.event );\n\n                // Setup new event handlers, including dropped item.\n                self._hoverable( droppedHeader );\n                self._focusable( droppedHeader );\n                self._on( self.headers, { keydown: \"_keydown\" } );\n                self._on( self.headers.next(), { keydown: \"_panelKeyDown\" } );\n                self._setupEvents( options.event );\n```", "```js\n                // Perform cleanup\n                $( \"#\" + droppedId ).parent().fadeOut( \"slow\", function() {\n                    $( this ).remove();\n                    target.refresh();\n                });\n\n                dropped.removeClass( droppedClass );\n\n            }\n\n        };\n\n        this.headers.each( function() {\n            $(this).next()\n                   .addBack()\n                   .wrapAll( \"<div/>\" );\n        });\n\n        this.element.sortable( sortableOptions );\n\n    },\n\n    _create: function() {\n\n        this._super( \"_create\" );\n\n        if ( this.options.target ) {\n            this._createTarget();\n        }\n\n        if ( this.options.accept ) {\n            this._createAccept();\n        }\n\n    },\n\n    _destroy: function() {\n\n        this._super( \"_destroy\" );\n\n        if ( this.options.target || this.options.accept ) {\n\n            this.headers.each( function() {\n                $( this ).next()\n                         .addBack()\n                         .unwrap( \"<div/>\" );\n            });\n        }\n    }\n\n});\n\n})( jQuery );\n\n$(function() {\n\n    $( \"#target-accordion\" ).accordion({\n        target: \"#accept-accordion\"\n    });\n\n    $( \"#accept-accordion\" ).accordion({\n        accept: \"#target-accordion\" \n    });\n\n});\n```"]