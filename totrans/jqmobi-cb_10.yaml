- en: Chapter 10. The Theme Framework
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following recipes:'
  prefs: []
  type: TYPE_NORMAL
- en: Theming a nested list
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using a custom background
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using custom fonts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Styling corners
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Overriding the global Active State theme
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Overriding an existing swatch
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using the ThemeRoller tool to create a swatch
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The jQuery Mobile framework provides a lightweight theming system, which supports
    many CSS3 properties, such as rounded corners, shadows, and gradients. It also
    provides a lightweight icon set in a sprite that you can use in your mobile apps
    (Icon Sprites are covered in [Chapter 4](ch04.html "Chapter 4. Buttons and Content
    Formatting"), *Buttons and Content Formatting*). The framework provides five default
    swatches (**a** to **e**) and can support up to 26 swatches. These swatches can
    provide a different look and feel to your apps.
  prefs: []
  type: TYPE_NORMAL
- en: Theming a nested list
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When you theme a nested list differently from the page theme, the list sub page
    will look inconsistent compared to the main page. This is described in the *Using
    a Nested List* recipe, in [Chapter 6](ch06.html "Chapter 6. List Views"), *List
    Views*. This recipe shows you how to theme a nested list in a consistent manner.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Copy the full code of this recipe from the `code/10/nested-list` folder. You
    can launch this code using the URL `http://localhost:8080/10/nested-list/main.html`.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Create `main.html` with the `#main` page having a nested list, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In `main.html`, add the `#main` page with `data-theme=''a''` to give it a black
    theme. Add a black colored header with `data-theme=''a''`. Add a blue colored
    list view to the page content with `data-theme=''b''`. Set its header to have
    a black color with `data-header-theme=''a''`. Add two items, **Director 1** and
    **Director 2**, to this list. The list will now appear as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works...](img/7225_10_1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Add nested lists to both these list items. The first nested list does not specify
    any additional theme attributes. When you click on the first list item, the subpage
    with movies for **Director 1** is shown. You will notice that the subpage has
    a background of `data-theme=''b''`, and it does not look consistent with the main
    page, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works...](img/7225_10_2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, set `data-theme=''a''` on the second nested list. Add the `data-theme=''b''`
    attribute to each of the nested list items. This will create the subpage with
    a black background. The nested list items get the blue color. The subpage appears,
    as shown in the following screenshot; it is now consistent with the main page:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works...](img/7225_10_3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The *Using a nested list* recipe in [Chapter 6](ch06.html "Chapter 6. List Views"),
    *List Views*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using a custom background
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This recipe shows you how to use a custom background in your app.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Copy the full code of this recipe from the `code/10/custom-background` source
    folder. You can launch this code using the URL: `http://localhost:8080/10/custom-background/main.html`.'
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Create `main.html` and define the `orangebar` and `orangebody` classes in the
    `<head>` section, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Add the `#main` page with the following content:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In `main.html`, define the `orangebar` and `orangebody` classes in the `<style>`
    tag. Define the values for the `border`, `background`, and `background-image`
    CSS properties. Specify a linear gradient with multiple vendor-specific values
    for the `background-image` attribute. Create the `#main` page and style the page
    to use the `orangebody` class. Style the header to use the `orangebar` class.
    The page is now displayed with an orange background, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works...](img/7225_10_4.jpg)'
  prefs: []
  type: TYPE_IMG
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This recipe shows you how to quickly change the background of your page and
    its header. But if you add a button or any control to this page, the control would
    get the default theme and would look out of place. You will have to theme the
    controls to match the page. Instead of manually setting the theme for each and
    every element, you can create themes or modify the existing themes using the jQuery
    Mobile **ThemeRoller** tool available at [http://www.jquerymobile.com/themeroller](http://www.jquerymobile.com/themeroller).
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It is better to use a separate CSS file to store the style info. In this way
    the style is kept separate from the HTML or document structure, making it easier
    to maintain and upgrade the styles later.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The *Theming the active state* and *Using the ThemeRoller tool to create a swatch*
    recipes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The *Using CSS to create a bouncing page transition* recipe in [Chapter 2](ch02.html
    "Chapter 2. Pages and Dialogs"), *Pages and Dialogs*: This recipe provides details
    on vendor prefixes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using custom fonts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The jQuery Mobile framework uses Helvetica, Arial, and Sans Serif fonts by default.
    This recipe shows how to include and use other fonts in your app.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Copy the full code of this recipe from the `code/10/custom-font` source folder.
    The **Komika TrueType Font** used in this recipe is available in the `code/resources/font`
    folder. The **Syncopate Web Font** is used from the **Google Web Fonts** site.
    You can launch this code using the URL: `http://localhost:8080/10/custom-font/main.html`.'
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Create `main.html`, and add the link to the Syncopate Google web font stylesheet,
    as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Define style classes to use the two custom fonts in the `<style>` tag:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Add the `#main` page container using the custom fonts as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Create `main.html`, and add the link to the Syncopate stylesheet from the Google
    Web Fonts site after including the jQuery Mobile stylesheet, as shown. Define
    the header `h1` to use Syncopate and `sans-serif` fonts using the `font-family`
    CSS attribute. Create a CSS class called `divstyle`, and set the `font-family`
    attribute to `Syncopate` with `font-weight` of `400`. To include the Komika Display
    TrueType Font, define the font family using the CSS `@font-face` feature. Point
    its source to the location of the `.ttf` file. Finally, define a `komikafont`
    class, and set its `font-family` to `KomikaDisplay`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, create the `#main` page with header `h1`. The header will now use the
    Syncopate web font. Add a `div` tag with `class=''komikafont''` to the page content,
    and the text in this `div` tag will use the Komika Display font. Finally, add
    another `div` tag with `class=''divstyle''`, and this will use the Syncopate font
    with a font weight of `400`. The screen will be displayed as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works...](img/7225_10_5.jpg)'
  prefs: []
  type: TYPE_IMG
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This recipe shows you how to use custom fonts for specific elements. To globally
    change fonts across your entire application, use the jQuery Mobile `ThemeRoller`
    tool available at [http://www.jquerymobile.com/themeroller](http://www.jquerymobile.com/themeroller).
    The following screenshot shows you the **Verdana** font being set globally:'
  prefs: []
  type: TYPE_NORMAL
- en: '![There''s more...](img/7225_10_6.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Using TrueType fonts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**TrueType** (**TTF**) or **OpenType** fonts are mostly supported in all the
    modern browsers. You will have to take care if you are targeting older browsers
    or most of the older devices and feature phones, as the fonts might not be supported
    with `@font-face`. You can refer to [http://www.caniuse.com/#search=ttf](http://www.caniuse.com/#search=ttf)
    to get the updated status of support for TTF in various browsers. You will note
    that older versions of iOS do not support TTF. You might have to use SVG fonts
    instead.'
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the fonts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can visit and use other web fonts from the Google Web Fonts page at [http://www.google.com/webfonts](http://www.google.com/webfonts).
    All the fonts are open source and can be used freely. The Komika Display font
    designed by Apostrophic Labs, is available at the Font Squirrel web page ([http://www.fontsquirrel.com/fonts/Komika-Display](http://www.fontsquirrel.com/fonts/Komika-Display)).
    The Font Squirrel website has a large number of fonts available, all as freeware.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The *Using the ThemeRoller tool to create a swatch* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Styling corners
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This recipe shows you how to use different corner styles that are readily available
    with jQuery Mobile.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Copy the full code of this recipe from the `code/10/corner-styles` source folder.
    You can launch this code using the URL: `http://localhost:8080/10/corner-styles/main.html`.'
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Create `main.html`, and add the following `<style>` tag to its `<head>` section:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Create the `#main` page with four `div` elements in a layout grid, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In `main.html`, define the `.mydiv` class with a border, margin, and center
    aligned text as shown. Create the `#main` page and style the header with `class=''ui-corner-top''`.
    This will add corners on the top side of the header. Define the footer with `class=''ui-corner-bottom''`,
    to add bottom corners to the footer. Do not add any style to the content `div`,
    so the `class=''ui-corner-none''` style is used by default. Now, add four `div`
    tags in two rows using a two column layout grid (`grid-a`). Style these `div`
    tags using the `mydiv` class. Also, add the different corner styles (`ui-corner-tl`,
    `ui-corner-tr`, `ui-corner-bl`, and `ui-corner-br`) to these `div` tags respectively.
    The four `div` tags are now styled as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works...](img/7225_10_7.jpg)'
  prefs: []
  type: TYPE_IMG
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can globally set the corner radius using the jQuery Mobile `ThemeRoller`
    tool available at [http://www.jquerymobile.com/themeroller](http://www.jquerymobile.com/themeroller).
  prefs: []
  type: TYPE_NORMAL
- en: '![There''s more...](img/7225_10_8.jpg)'
  prefs: []
  type: TYPE_IMG
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The *Using the ThemeRoller tool to create a swatch* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Grouping Radio Buttons in a Grid* recipe in [Chapter 5](ch05.html "Chapter 5. Forms"),
    *Forms*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Overriding the global Active State theme
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The jQuery Mobile framework uses a bright blue color to indicate the active
    state for buttons and other controls. This **Active State** theme is consistent
    for all the default swatches and cannot be overridden via markup. This recipe
    shows you how to override the Active State theme.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Copy the full code of this recipe from the `code/10/active-state` source folder.
    You can launch this code using the URL: `http://localhost:8080/10/active-state/main.html`.'
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Create the `active-state.css` stylesheet to style the active state, as follows:
    [PRE8]`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`Specify the style for the on focus event:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]`'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Specify the on state style for the checkbox and radio button controls:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]`'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Include the preceding stylesheet in `main.html`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]`'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Now, create a header with a `navbar` control in the `#main` page:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]`'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Finally, add the page content with a horizontal checkbox, a vertical checkbox,
    and a slider, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]`'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`How it works...`'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`Create the `active-state.css` stylesheet to keep the style info separate from
    the HTML file. The active state, the on focus event, and the on state style of
    the checkbox and radio button controls use the bright blue theme by default. You
    can override them in the CSS file, as shown in the code. First, override the `.ui-btn-active`
    class, and specify your settings for the `border`, `background`, `color`, and
    `background-image` CSS attributes. Next, override the `.ui-focus` and `.ui-btn:focus`
    classes, and specify the color for the box-shadow .`ui-checkbox-on` and `.ui-radio-on`
    styles, as shown in the code.`'
  prefs: []
  type: TYPE_NORMAL
- en: '`Create `main.html`, and add a `navbar` control to the header. Add the `ui-btn-active`
    class to the second link in `navbar`. You will see the active state set on the
    second link when the page loads. Next, add a horizontal and vertical group of
    checkbox controls. Finally, add an input slider to the page. The page now loads,
    as displayed in the following screenshot, with the default bright blue active
    state theme replaced with a fluorescent green theme:`'
  prefs: []
  type: TYPE_NORMAL
- en: '`![How it works...](img/7225_10_9.jpg)`'
  prefs: []
  type: TYPE_NORMAL
- en: '`There''s more...`'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`You can also globally set the active status theme using the jQuery Mobile
    ThemeRoller tool available at [http://www.jquerymobile.com/themeroller](http://www.jquerymobile.com/themeroller).`'
  prefs: []
  type: TYPE_NORMAL
- en: '`![There''s more...](img/7225_10_10.jpg)`'
  prefs: []
  type: TYPE_NORMAL
- en: '`See also`'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`The *Using the ThemeRoller tool to create a swatch* recipe`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`The *Using CSS to create a bouncing page transition* recipe in [Chapter 2](ch02.html
    "Chapter 2. Pages and Dialogs"), *Pages and Dialogs*: This recipe provides a note
    on vendor prefixes`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`The *Configuring the active classes* recipe in [Chapter 7](ch07.html "Chapter 7. Configurations"),
    *Configurations*`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`# Overriding an existing swatch'
  prefs: []
  type: TYPE_NORMAL
- en: The jQueryMobile framework uses the `ui-btn-hover` class to theme the **button
    hover** event. This recipe shows you how to override the style for the button
    hover event of an existing swatch.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Copy the full code of this recipe from the `code/10/button-hover` source folder.
    You can launch this code using the URL: `http://localhost:8080/10/button-hover/main.html`.'
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Create `main.html`, and add the following `<style>` tag to the `<head>` section:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Create the `#main` page and add a button to the page content:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In `main.html`, define the override for the `.ui-btn-hover-a` class after linking
    thejQuery Mobile stylesheet, as shown in the code. Specify the `border`, `background`,
    `color`, `text-shadow`, and `background-image` CSS attributes. Create the `#main`
    page with `data-theme=''a''`, and add a button to the page content. Load the page,
    and on button hover you will see that the button gets a bright green color instead
    of the default hover style, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works...](img/7225_10_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can also theme the button hover for **swatch A** using the jQuery Mobile
    ThemeRoller tool available at [http://www.jquerymobile.com/themeroller](http://www.jquerymobile.com/themeroller).
  prefs: []
  type: TYPE_NORMAL
- en: '![There''s more...](img/7225_10_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The buttonMarkup.hoverDelay configuration
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can configure the delay for the button hover by setting the `buttonMarkup.hoverDelay`
    (defaults to `200` ms) configuration on `mobileinit`. But take care, as using
    values that are too large or too small will impact the user experience. You can
    use the following code to configure this property:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The *Using the ThemeRoller tool to create a swatch* recipe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The *Using CSS to create a bouncing page transition* recipe in [Chapter 2](ch02.html
    "Chapter 2. Pages and Dialogs"), *Pages and Dialogs*: This recipe provides a note
    on vendor prefixes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using the ThemeRoller tool to create a swatch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This recipe shows you how to create a swatch using the jQueryMobile ThemeRoller
    web tool.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The code in this recipe was created using the the jQueryMobile ThemeRoller web
    tool available at [http://www.jquerymobile.com/themeroller](http://www.jquerymobile.com/themeroller).
    The code is available in the `code/10/myTheme` source folder. You can launch this
    code using the URL `http://localhost:8080/10/myTheme/index.html`.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Generate the `myTheme.css` file using the jQueryMobile ThemeRoller tool. It
    gets included in the generated `index.html` file, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The `<body>` content in `index.html` gets generated as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Launch the jQuery Mobile ThemeRoller web tool. You will see the available swatches
    in the left pane called the **Inspector pane** . The swatch always starts with
    **A**, and you can add, duplicate, or delete swatches. The other swatches are
    immediately sorted alphabetically. You can create up to 26 swatches (**A** to
    **Z**). You can directly modify the CSS properties in the **Inspector** pane.
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works...](img/7225_10_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Instead of manually entering the colors, you can also use the **Adobe Kuler**
    swatch bar available at the top of the screen. Drag-and-drop the color of your
    choice directly on a component in the preview screen. The component gets updated
    immediately with the new color.
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works...](img/7225_10_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: You can click the Kuler Swatches link, and access multiple ready-to-use color
    combinations that are available online.
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works...](img/7225_10_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Now, drag-and-drop the colors of your choice on the screen components. You will
    see that the screen preview(shown in the following image), instantly reflects
    the theme change. You can also theme the active state here.
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works...](img/7225_10_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Once the theme is ready, you can download it by clicking on the **Download**
    button at the top of the screen. Provide a name and download the zip file. The
    zip file contains the required icons, CSS files, and also a sample `index.html`
    file. The new theme is displayed when you extract these files and open the `index.html`
    file.
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works...](img/7225_10_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `jquery.mobile.css` file is not used in the generated `index.html` file.
    Instead, it contains the links to `myTheme.css` (for the custom theme) and `jquery.mobile.structure.css`
    (structure-related CSS properties). Keeping the theme-able properties separate
    makes it easier to maintain, upgrade, and also to share your themes.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can synchronize the **Preview** pane and the **Inspector** pane using the
    **Inspector on/off** button at the top of the ThemeRoller tool. Hovering on any
    control in the **Preview** pane highlights the control with a blue border. Click
    on the control to open its CSS settings in the **Inspector** pane. This is very
    handy while developing themes.
  prefs: []
  type: TYPE_NORMAL
- en: Importing and upgrading themes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can import your existing CSS themes into the ThemeRoller tool and extend
    them to create new themes. You can also upgrade the older versions of jQuery Mobile
    themes to the latest v1.1.1 using ThemeRoller. Click on the **Import** or **Upgrade**
    button at the top of the **ThemeRoller** screen to open the **Import Theme** dialog
    box.
  prefs: []
  type: TYPE_NORMAL
- en: '![Importing and upgrading themes](img/7225_10_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: You can copy-paste your existing theme and click on the **Import** button. The
    new upgraded theme is ready and loaded in the tool. You can also load the default
    theme provided by the jQuery Mobile framework by clicking on the **Import Default
    Theme** option at the top of the **Import** dialog box. This loads the five default
    swatches into ThemeRoller. You can now use this set as a starting point to create
    fresh themes.
  prefs: []
  type: TYPE_NORMAL
- en: Sharing themes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The ThemeRoller tool also provides a cool feature to share your work with others.
    Click on the **Share Theme Link** button at the top of the tool to get the link
    that you can share with others. Anyone with this link can directly access, use,
    or work on a copy of your theme.`
  prefs: []
  type: TYPE_NORMAL
