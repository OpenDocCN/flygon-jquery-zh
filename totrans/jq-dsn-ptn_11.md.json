["```js\n(function ( $, window, document, undefined ) { \n    if (window.myModule === undefined) { \n        window.myModule = {}; \n    } \n\n    myModule.init = function() { /*...*/ };\n\n    $(document).ready(myModule.init); \n\n})( jQuery, window, document ); \n```", "```js\n(function(b, a, c, d) { \n    a.myModule === d && (a.myModule = {}); \n    myModule.init = function() { /*...*/ };\n    b(c).ready(myModule.init); \n})(jQuery, window, document); \n```", "```js\nfor (var i = 0, len = myArray.length; i < len; i++) { \n    var item = myArray[i]; \n    /*...*/ \n} \n```", "```js\nvar objects = [{ }, { }, { }]; \nfor (var i = 0, item; item = objects[i]; i++) { \n    console.log(item); \n}\n```", "```js\nvar anchors = $('a'); // or document.getElementsByTagName('a');\nfor (var i = 0, anchor; anchor = anchors[i]; i++) { \n    console.log(anchor.href); \n} \n```", "```js\n// initially matches all the anchors of the page \n// and then removes those that are not children of the container \n$('.container a'); \n\n// performs better, since it matches fewer elements \n// in the first step of the selector's evaluation \n$('.container .mySpecialLinks');\n```", "```js\n// initially matches all the div's of the page, which is bad \n$('.container div') ;\n\n// a lot faster than the previous one,\n// since it avoids the recursive class checks\n// until reaching the root of the DOM tree \n$('.container > div');\n\n// best of all, but can't be used always \n$('.container > .specialDivs');\n```", "```js\nvar $element = $('.boxHeader');\nif ($element.css('position') === 'static') {\n  $element.css({ position: 'relative' });\n}\n$element.height('40px');\n$element.wrapInner('<b>');\n```", "```js\n    dashboard.$container = null; \n    dashboard.init = function() { \n        dashboard.$container = $('.dashboardContainer'); \n    };\n```", "```js\n$('.dashboardContainer .dashboardCategories');\n```", "```js\nvar $container = $('.dashboardContainer');\n$container.find('.dashboardCategories');\n```", "```js\n$boxContainer = dashboard.$container.find('.boxContainer');\n```", "```js\n$('.boxContent').html('') \n    .append('<a href=\"#\">') \n    .height('40px') \n    .wrapInner('<b>');\n```", "```js\n$('.box') \n    .filter(':even') \n    .find('.boxHeader') \n    .css('background-color', '#0F0') \n    .end() \n    .end() // undo the filter and find traversals\n    .filter(':odd') // applied on  the initial .box results\n    .find('.boxHeader') \n    .css('background-color', '#F00');\n```", "```js\nvar finalHtml = ''; \nfor (var i = 0, len = questions.length; i < len; i++) { \n  var question = questions[i]; \n  finalHtml += '<div><label><span>' + question.title + ':</span>' + \n    '<input type=\"checkbox\" name=\"' + question.name + '\" />' + \n  '</label></div>'; \n} \n$('form').html(finalHtml);\n```", "```js\nvar parts = []; \nfor (var i = 0, len = questions.length; i < len; i++) { \n  var question = questions[i]; \n  parts.push('<div><label><span>' + question.title + ':</span>' + \n    '<input type=\"checkbox\" name=\"' + question.name + '\" />' + \n  '</label></div>'); \n} \n$('form').html(parts.join(''));\n```", "```js\n$('h1').css('padding-left', '2%'); \n$('h1').css('padding-right', '2%'); \n$('h1').append('<b>!!</b>'); \nvar h1OuterWidth = $('h1').outerWidth(); \n\n$('h1').css('margin-top', '5%'); \n$('body').prepend('<b>--!!--</b>'); \nvar h1Offset = $('h1').offset();\n```", "```js\n$('h1').css({ \n    'padding-left': '2%', \n    'padding-right': '2%', \n    'margin-top': '5%' \n}).append('<b>!!</b>'); \n$('body').prepend('<b>--!!--</b>'); \n\nvar h1OuterWidth = $('h1').outerWidth(); \nvar h1Offset = $('h1').offset();\n```", "```js\nvar $h1 = $('#pageHeader'); \nvar $h1Cont = $h1.parent(); \n$h1.detach(); \n\n$h1.css({ \n    'padding-left': '2%', \n    'padding-right': '2%', \n    'margin-top': '5%' \n}).append('<b>!!</b>'); \n\n$h1Cont.append($h1); \n```", "```js\nvar $h1PlaceHolder = $('<div style=\"display: none;\"></div>'); \nvar $h1 = $('#pageHeader'); \n$h1PlaceHolder.insertAfter($h1); \n\n$h1.detach(); \n\n$h1.css({ \n    'padding-left': '2%', \n    'padding-right': '2%', \n    'margin-top': '5%' \n}).append('<b>!!</b>'); \n\n$h1.insertAfter($h1PlaceHolder); \n$h1PlaceHolder.remove(); \n$h1PlaceHolder = null; \n```", "```js\n$boxContainer.on('click', '.boxCloseButton', function() { \n    var $button = $(this); \n    dashboard.informationBox.close($button); \n});\n```", "```js\nfunction doLater(callbackFn) { \n    setTimeout(function() { \n        if (callbackFn) { \n            callbackFn(); \n        } \n    }, 500); \n} \n\n// with $.noop() \nfunction doLater(callbackFn) { \n    callbackFn = callbackFn || $.noop(); \n    setTimeout(function() { \n        callbackFn(); \n    }, 500); \n} \n```", "```js\njQuery.single = (function(){ \n    var collection = jQuery([1]);\n    // Fill with 1 item, to make sure length === 1 \n    return function(element) { \n        collection[0] = element; // Give collection the element: \n        return collection; // Return the collection: \n    }; \n}());\n```", "```js\n$boxContainer.on('click', '.boxCloseButton', function() { \n    // var $button = $(this); \n    var $button = $.single(this);\n    // this is not creating any new object\n    dashboard.informationBox.close($button); \n});\n```", "```js\nvar buttons = document.getElementsByTagName('button'); \nvar $btn0 = $.single(buttons[0]); \nvar $btn1 = $.single(buttons[1]); \n$btn0 === $btn1 // this is true\n```", "```js\njQuery = function( selector, context ) { \n  return new jQuery.fn.init( selector, context ); \n}; \n/*...*/ init = jQuery.fn.init = function( selector, context, root ) { \n  /*... else */ \n  if ( selector.nodeType ) { \n    this.context = this[ 0 ] = selector; \n    this.length = 1; \n    return this; \n  } /* ... */ \n}; \n```", "```js\n(function() { \n    'use strict'; \n\n    dashboard.moduleUtils = dashboard.moduleUtils || {}; \n\n    dashboard.moduleUtils.getModule = function(namespaceString) { \n        var parts = namespaceString.split('.'); \n        var result = parts.reduce(function(crnt, next){ \n            return crnt && crnt[next]; \n        }, window); \n        return result; \n    }; \n\n    var ongoingModuleRequests = {}; \n\n    dashboard.moduleUtils.ensureLoaded = function(namespaceString) { \n        var existingNamespace = this.getModule(namespaceString); \n        if (existingNamespace) { \n            return $.Deferred().resolve(existingNamespace); \n        } \n\n        if (ongoingModuleRequests[namespaceString]) { \n            return ongoingModuleRequests[namespaceString]; \n        } \n\n        var modulePromise = $.getScript(namespaceString.toLowerCase() + '.js') \n            .always(function() { \n                ongoingModuleRequests[namespaceString] = null; \n            }).then(function() { \n               return dashboard.moduleUtils.getModule(namespaceString); \n            }); \n        ongoingModuleRequests[namespaceString] = modulePromise; \n        return modulePromise; \n    };\n\n})(); \n```", "```js\n(function() { \n    'use strict'; \n\n    dashboard.informationBox = dashboard.informationBox || {}; \n\n    var $boxContainer = null; \n\n    dashboard.informationBox.init = function() { /* â€¦ */ };\n\n    $(document).ready(dashboard.informationBox.init); \n\n   /*...*/\n})(); \n```", "```js\n// in dashboard.categories.init \ndashboard.$container.find('.dashboardCategories').on('click', 'button', function() { \n    var $button = $(this); \n    var itemName = $button.text(); \n\n    var p = dashboard.moduleUtils.ensureLoaded('dashboard.informationBox');\n\n    p.then(function(){ \n        dashboard.informationBox.openNew(itemName); \n    }); \n});\n```"]